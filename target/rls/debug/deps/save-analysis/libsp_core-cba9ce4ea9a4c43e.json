{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0","program":"/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_core","--edition=2018","/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"base58\"","--cfg","feature=\"blake2-rfc\"","--cfg","feature=\"default\"","--cfg","feature=\"dyn-clonable\"","--cfg","feature=\"ed25519-dalek\"","--cfg","feature=\"full_crypto\"","--cfg","feature=\"futures\"","--cfg","feature=\"hex\"","--cfg","feature=\"impl-serde\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libsecp256k1\"","--cfg","feature=\"merlin\"","--cfg","feature=\"parking_lot\"","--cfg","feature=\"rand\"","--cfg","feature=\"regex\"","--cfg","feature=\"schnorrkel\"","--cfg","feature=\"serde\"","--cfg","feature=\"sha2\"","--cfg","feature=\"sp-externalities\"","--cfg","feature=\"std\"","--cfg","feature=\"substrate-bip39\"","--cfg","feature=\"thiserror\"","--cfg","feature=\"tiny-bip39\"","--cfg","feature=\"tiny-keccak\"","--cfg","feature=\"twox-hash\"","--cfg","feature=\"wasmi\"","-C","metadata=cba9ce4ea9a4c43e","-C","extra-filename=-cba9ce4ea9a4c43e","--out-dir","/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps","-L","dependency=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps","--extern","base58=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libbase58-549bdaa935cbe57a.rmeta","--extern","blake2_rfc=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libblake2_rfc-d0ae11f7c4cf7323.rmeta","--extern","byteorder=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libbyteorder-fafe08881da973c1.rmeta","--extern","dyn_clonable=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libdyn_clonable-43ea651f69293102.rmeta","--extern","ed25519_dalek=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libed25519_dalek-026a3e8c8f93b060.rmeta","--extern","futures=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libfutures-5172b8954b31f3fc.rmeta","--extern","hash_db=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libhash_db-d38c1365a7005e89.rmeta","--extern","hash256_std_hasher=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libhash256_std_hasher-e34ac145857db98c.rmeta","--extern","hex=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libhex-ee0f70391c057cd4.rmeta","--extern","impl_serde=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libimpl_serde-a84e9f3b94e1b7f9.rmeta","--extern","lazy_static=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/liblazy_static-6362878171a445cb.rmeta","--extern","secp256k1=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsecp256k1-f05915bc0a994721.rmeta","--extern","log=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/liblog-5304c8458a68373a.rmeta","--extern","merlin=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libmerlin-87791d9c5df53057.rmeta","--extern","num_traits=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libnum_traits-7944ee15958dbfe1.rmeta","--extern","codec=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libparity_scale_codec-b38ed3f0a4e0f6cc.rmeta","--extern","parity_util_mem=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libparity_util_mem-a6bf068991232c90.rmeta","--extern","parking_lot=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libparking_lot-afb3a92a685d414f.rmeta","--extern","primitive_types=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libprimitive_types-177de39dbb70bf3a.rmeta","--extern","rand=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/librand-fa7aeccaab79dc34.rmeta","--extern","regex=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libregex-cac072426e1d57c6.rmeta","--extern","schnorrkel=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libschnorrkel-63ae0d215a61e4bf.rmeta","--extern","secrecy=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsecrecy-5f8ee6c2f2217268.rmeta","--extern","serde=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libserde-c1d0451fd273a165.rmeta","--extern","sha2=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsha2-34fbfd5fd65760fa.rmeta","--extern","sp_debug_derive=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_debug_derive-4bb80bd719205d46.so","--extern","sp_externalities=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_externalities-117c7a5eddfa86db.rmeta","--extern","sp_runtime_interface=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_runtime_interface-b1d0c2332f4109bb.rmeta","--extern","sp_std=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_std-0142de4e2fb49a91.rmeta","--extern","sp_storage=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_storage-588138ce595d0a7a.rmeta","--extern","substrate_bip39=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsubstrate_bip39-0b639e4643144e5b.rmeta","--extern","thiserror=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libthiserror-d9d70d078273db88.rmeta","--extern","bip39=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libbip39-bd966026ab331cc2.rmeta","--extern","tiny_keccak=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libtiny_keccak-669daf484f606520.rmeta","--extern","twox_hash=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libtwox_hash-1097b343fb25cde4.rmeta","--extern","wasmi=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libwasmi-4d0e5aabd2d24890.rmeta","--extern","zeroize=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libzeroize-2f2ed6073510d743.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_core-cba9ce4ea9a4c43e.rmeta"},"prelude":{"crate_id":{"name":"sp_core","disambiguator":[482245497719965997,4446364731874136958]},"crate_root":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src","external_crates":[{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":18,"id":{"name":"sp_runtime_interface","disambiguator":[8486305343948881103,18310204470691800149]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":19,"id":{"name":"sp_wasm_interface","disambiguator":[12654239842700216049,8433569663077031038]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":20,"id":{"name":"sp_std","disambiguator":[9770677728196279493,12510806215599864837]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":21,"id":{"name":"parity_scale_codec","disambiguator":[8513279373943582847,10751956381400254447]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":22,"id":{"name":"parity_scale_codec_derive","disambiguator":[3988632595002997288,5128307631409362997]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":23,"id":{"name":"arrayvec","disambiguator":[1943503948824698767,8928204549588057885]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":24,"id":{"name":"byte_slice_cast","disambiguator":[11971851078352766489,17994270080533667189]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":25,"id":{"name":"serde","disambiguator":[9329802083187344169,15516913349122290357]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":26,"id":{"name":"serde_derive","disambiguator":[9132577773600900999,13098957011468639310]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":27,"id":{"name":"impl_trait_for_tuples","disambiguator":[9660762680991374145,8791689571548580469]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":28,"id":{"name":"wasmi","disambiguator":[6918656205759776739,8549698197006326748]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":29,"id":{"name":"memory_units","disambiguator":[4446909059691065796,8711733259455937782]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":30,"id":{"name":"parity_wasm","disambiguator":[2746304515579433884,15008885245026691101]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":31,"id":{"name":"wasmi_validation","disambiguator":[12503892293425695562,631775191906383592]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":32,"id":{"name":"num_rational","disambiguator":[8002101714546462564,7774992686627339530]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":33,"id":{"name":"num_bigint","disambiguator":[8324002608551350377,6864858279968498277]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":34,"id":{"name":"num_integer","disambiguator":[5126256796491658918,13702474337812182890]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","num":35,"id":{"name":"num_traits","disambiguator":[12449281939908862398,945796103035123006]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":36,"id":{"name":"libc","disambiguator":[7953600248772063458,1989307123664392873]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":37,"id":{"name":"sp_tracing","disambiguator":[9619578780568606008,17901182021480941559]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":38,"id":{"name":"tracing_core","disambiguator":[11735089163411024588,17388945486717174255]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":39,"id":{"name":"lazy_static","disambiguator":[4038955093903438243,10998562936998939215]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":40,"id":{"name":"tracing","disambiguator":[12634947417058916823,13964040762799800002]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":41,"id":{"name":"cfg_if","disambiguator":[11748229077813686416,18120593503603249335]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":42,"id":{"name":"pin_project_lite","disambiguator":[10940599627664034505,1256839874217548822]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":43,"id":{"name":"tracing_subscriber","disambiguator":[2737517103962892138,6007003846142012037]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":44,"id":{"name":"regex","disambiguator":[15379754631532878358,1305285703807680371]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":45,"id":{"name":"aho_corasick","disambiguator":[15808597861067690095,17129261582138448034]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":46,"id":{"name":"memchr","disambiguator":[1157675088820504487,7216068552727726090]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":47,"id":{"name":"regex_syntax","disambiguator":[15754485282953042439,939955947925160166]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":48,"id":{"name":"thread_local","disambiguator":[4515805766320255868,12702638825636986852]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":49,"id":{"name":"once_cell","disambiguator":[12659116934471307003,7435940676996991787]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":50,"id":{"name":"parking_lot","disambiguator":[18159808056392103160,16155596511951534654]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":51,"id":{"name":"instant","disambiguator":[6707731622692707509,11541478860689369278]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":52,"id":{"name":"lock_api","disambiguator":[117164551345877035,12793837009537715804]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":53,"id":{"name":"scopeguard","disambiguator":[6745301356711570827,8805850024978740077]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":54,"id":{"name":"parking_lot_core","disambiguator":[13491894724313637548,4430950099799626494]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":55,"id":{"name":"smallvec","disambiguator":[12123569432201045790,1609040209808900757]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":56,"id":{"name":"matchers","disambiguator":[11196127239289206652,8821764124139599593]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":57,"id":{"name":"regex_automata","disambiguator":[1356799715280784519,12525503415491810456]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":58,"id":{"name":"byteorder","disambiguator":[16743341458239395833,5344541827637086529]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":59,"id":{"name":"ansi_term","disambiguator":[13348744980724887879,5052188682016064389]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":60,"id":{"name":"tracing_log","disambiguator":[2517198273552123748,17355328636754591651]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":61,"id":{"name":"log","disambiguator":[3545289885770114131,433247333334147900]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":62,"id":{"name":"serde_json","disambiguator":[2535307572117126142,15340677427040480041]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":63,"id":{"name":"itoa","disambiguator":[1783620119987649435,3821505174059274534]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":64,"id":{"name":"ryu","disambiguator":[4560945869205572345,5209367066204268501]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":65,"id":{"name":"tracing_serde","disambiguator":[4562426333319122918,15922045924750474936]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":66,"id":{"name":"sharded_slab","disambiguator":[17401401532503036136,1601036186833089112]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":67,"id":{"name":"chrono","disambiguator":[17126090541689444332,1886024564587297196]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":68,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[18335766830024536561,5137992637639085820]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":69,"id":{"name":"sp_externalities","disambiguator":[15346619557778524113,15546321444447335287]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":70,"id":{"name":"sp_storage","disambiguator":[12236995375180460119,10483812130181742021]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":71,"id":{"name":"sp_debug_derive","disambiguator":[1127781656639809926,12270005864681690604]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":72,"id":{"name":"ref_cast","disambiguator":[3109219419575014207,1073703474336682823]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":73,"id":{"name":"ref_cast_impl","disambiguator":[548036109860010999,5849971523560802531]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":74,"id":{"name":"impl_serde","disambiguator":[807954869803654047,4716339343125958352]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":75,"id":{"name":"environmental","disambiguator":[12825357754638386979,7940730235394234995]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","num":76,"id":{"name":"primitive_types","disambiguator":[11755663010420176922,11551187208533645918]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":77,"id":{"name":"fixed_hash","disambiguator":[761001719887353079,113272237603088689]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":78,"id":{"name":"static_assertions","disambiguator":[17267408535625969050,4632693660215762815]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":79,"id":{"name":"rustc_hex","disambiguator":[8252233264516824388,17670331916333253350]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":80,"id":{"name":"rand","disambiguator":[8754712101818231124,439968306620514562]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":81,"id":{"name":"rand_core","disambiguator":[17249439947178837211,16150054665629866134]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":82,"id":{"name":"getrandom","disambiguator":[5295995297352709213,7943019062197219340]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":83,"id":{"name":"uint","disambiguator":[249403627217210170,66937591079663351]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":84,"id":{"name":"hex","disambiguator":[5817943069691027302,2071035837552761178]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":85,"id":{"name":"crunchy","disambiguator":[16496986770395509475,10742896350538019007]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","num":86,"id":{"name":"impl_codec","disambiguator":[18061770301012622754,8940897700826662907]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":87,"id":{"name":"blake2_rfc","disambiguator":[11744292092095819415,9801326368370969682]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":88,"id":{"name":"arrayvec","disambiguator":[14648713630236782063,9849397673914679400]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":89,"id":{"name":"nodrop","disambiguator":[11522295318034127309,11770490405937775818]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":90,"id":{"name":"constant_time_eq","disambiguator":[11542931171304914434,3999952699895281030]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":91,"id":{"name":"sha2","disambiguator":[6501481284549552844,10223970258463939953]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":92,"id":{"name":"block_buffer","disambiguator":[13966198174714371443,9733068092495573015]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":93,"id":{"name":"generic_array","disambiguator":[17630325060485713573,8632611388700851125]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":94,"id":{"name":"typenum","disambiguator":[8726524992263171078,2989859816024006970]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":95,"id":{"name":"digest","disambiguator":[3267007905718091736,6472354886699068987]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":96,"id":{"name":"opaque_debug","disambiguator":[6572339997394954866,9498658499336361599]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":97,"id":{"name":"cpuid_bool","disambiguator":[6205407880030392451,6093553700822162471]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":98,"id":{"name":"tiny_keccak","disambiguator":[6907276523880939152,15806809385348513789]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":99,"id":{"name":"twox_hash","disambiguator":[4843776605774432337,16933932808593462508]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","num":100,"id":{"name":"cfg_if","disambiguator":[10021299859095236603,9970654228449935443]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":101,"id":{"name":"rand","disambiguator":[746826575780793851,4471793012143423394]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":102,"id":{"name":"rand_core","disambiguator":[3238620688790230140,13462498439867285351]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":103,"id":{"name":"getrandom","disambiguator":[16958247650847020380,5385242026854871367]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":104,"id":{"name":"rand_chacha","disambiguator":[441716931807972491,17272912142872802949]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":105,"id":{"name":"ppv_lite86","disambiguator":[5486910781073359264,15253540615556416119]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":106,"id":{"name":"rand_pcg","disambiguator":[3160627028304066158,11293307244701815743]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":107,"id":{"name":"base58","disambiguator":[3369462119818718244,8362136954819660540]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":108,"id":{"name":"zeroize","disambiguator":[10556093639355727955,15809428849932923722]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":109,"id":{"name":"zeroize_derive","disambiguator":[5655268509516224944,6725263168993598751]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","num":110,"id":{"name":"secrecy","disambiguator":[16459322919098341897,12171937217720544940]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":111,"id":{"name":"ed25519_dalek","disambiguator":[11398848187809677205,7856143361522293917]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":112,"id":{"name":"ed25519","disambiguator":[17719961624066905290,3692275665346932817]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":113,"id":{"name":"signature","disambiguator":[8760395504805049851,3413849478659787523]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":114,"id":{"name":"curve25519_dalek","disambiguator":[4071595552511680062,1824077030073052835]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":115,"id":{"name":"subtle","disambiguator":[17934521912222352306,18444245334094816619]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":116,"id":{"name":"substrate_bip39","disambiguator":[1792972643475504061,2284854317310986267]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":117,"id":{"name":"sha2","disambiguator":[6031437354618425809,1156418039787797982]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":118,"id":{"name":"block_buffer","disambiguator":[17013019169273939082,8694242993449314512]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":119,"id":{"name":"block_padding","disambiguator":[12027653930546257504,11934247384914869959]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":120,"id":{"name":"byte_tools","disambiguator":[11700157176403723246,15042745078268532608]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":121,"id":{"name":"generic_array","disambiguator":[8154424454435046820,8305875546402162267]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":122,"id":{"name":"fake_simd","disambiguator":[14036491710765223056,16121027988084704970]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":123,"id":{"name":"opaque_debug","disambiguator":[15355801993192592970,15368723170800198628]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":124,"id":{"name":"digest","disambiguator":[18028793442622875312,8404934643691058449]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":125,"id":{"name":"hmac","disambiguator":[2398036106222558641,12747122617455590906]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":126,"id":{"name":"crypto_mac","disambiguator":[13559926310032573477,17050896233749691016]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":127,"id":{"name":"subtle","disambiguator":[10946190608180335518,5756656367206348154]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":128,"id":{"name":"pbkdf2","disambiguator":[18045263582543352373,3198099767612698545]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","num":129,"id":{"name":"schnorrkel","disambiguator":[1001073668430333559,14191689993495040953]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":130,"id":{"name":"arrayref","disambiguator":[16818885780591367818,9624370045344091841]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":131,"id":{"name":"curve25519_dalek","disambiguator":[11182327997470844279,2917915551897756157]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","num":132,"id":{"name":"merlin","disambiguator":[10995490140485953775,3078541580170789468]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":133,"id":{"name":"keccak","disambiguator":[8402286363173856787,11033165844963027687]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":134,"id":{"name":"bip39","disambiguator":[14654181774436755031,16150481678645946358]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":135,"id":{"name":"thiserror","disambiguator":[11211909712945309034,1462899715189146714]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":136,"id":{"name":"thiserror_impl","disambiguator":[12140497728656256834,17536753507674282886]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":137,"id":{"name":"rustc_hash","disambiguator":[18120138039320172856,5174853055526042934]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":138,"id":{"name":"anyhow","disambiguator":[17455878141675706397,15024690126878403217]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":139,"id":{"name":"unicode_normalization","disambiguator":[7319256477008403990,850912555204041804]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":140,"id":{"name":"tinyvec","disambiguator":[13757798832981975562,16448938864586428141]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":141,"id":{"name":"tinyvec_macros","disambiguator":[6971095827479815106,2369805349969581398]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":142,"id":{"name":"hmac","disambiguator":[17433356495996038620,7849656493985933521]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":143,"id":{"name":"crypto_mac","disambiguator":[16952472478491170049,5748167897379155211]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","num":144,"id":{"name":"pbkdf2","disambiguator":[7649781412603123506,9859389210053091319]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","num":145,"id":{"name":"secp256k1","disambiguator":[16737428765420032088,13773206920855754217]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","num":146,"id":{"name":"hmac_drbg","disambiguator":[17404808929730230210,16695580170234810369]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hasher.rs","num":147,"id":{"name":"hash_db","disambiguator":[16222527159578958881,15417756680510520186]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hasher.rs","num":148,"id":{"name":"hash256_std_hasher","disambiguator":[14242029744627902613,3090809591287000861]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","num":149,"id":{"name":"parity_util_mem","disambiguator":[5692800706026385981,13988503766425499944]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","num":150,"id":{"name":"parity_util_mem_derive","disambiguator":[3916493160687366221,3998416894547474512]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","num":151,"id":{"name":"hashbrown","disambiguator":[15858687212683710517,10679103842408037307]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","num":152,"id":{"name":"ahash","disambiguator":[11000207869931019655,11365772628104082715]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":153,"id":{"name":"dyn_clonable","disambiguator":[1160672861310717368,179577393650705180]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":154,"id":{"name":"dyn_clone","disambiguator":[153351459397055590,2262572122976187853]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":155,"id":{"name":"dyn_clonable_impl","disambiguator":[8143725291046252364,3517763874786058099]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":156,"id":{"name":"futures","disambiguator":[3463592966268286824,7540824572693008632]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":157,"id":{"name":"futures_core","disambiguator":[1741251118759805826,11401665632333816338]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":158,"id":{"name":"futures_util","disambiguator":[3438948224063739788,15492469175479036624]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":159,"id":{"name":"pin_utils","disambiguator":[6148991665019902715,7706982228305245343]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":160,"id":{"name":"proc_macro_hack","disambiguator":[18107074244595300940,7254669559897049488]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":161,"id":{"name":"futures_task","disambiguator":[7625991371478830382,1732980289896795878]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":162,"id":{"name":"futures_sink","disambiguator":[8661685636113034652,10637809691106661968]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":163,"id":{"name":"futures_channel","disambiguator":[9340365945153326119,16413412677825364759]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":164,"id":{"name":"slab","disambiguator":[10964154642823013274,18136006732140345220]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":165,"id":{"name":"futures_io","disambiguator":[1719766009174806638,1918012058549137250]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":166,"id":{"name":"futures_macro","disambiguator":[83206124768939847,1707592736898867711]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":167,"id":{"name":"futures_executor","disambiguator":[7121268507423420993,8515073597681227929]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","num":168,"id":{"name":"num_cpus","disambiguator":[12520181572928967600,156566489628191520]}}],"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":686,"byte_end":11165,"line_start":18,"line_end":395,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":25,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1356,"byte_end":1361,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":109},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1394,"byte_end":1400,"line_start":45,"line_end":45,"column_start":17,"column_end":23},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":202},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1394,"byte_end":1400,"line_start":45,"line_end":45,"column_start":17,"column_end":23},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":21,"index":127},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1402,"byte_end":1408,"line_start":45,"line_end":45,"column_start":25,"column_end":31},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1402,"byte_end":1408,"line_start":45,"line_end":45,"column_start":25,"column_end":31},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":71,"index":43},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1437,"byte_end":1449,"line_start":47,"line_end":47,"column_start":26,"column_end":38},"alias_span":null,"name":"RuntimeDebug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":74,"index":7},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1496,"byte_end":1505,"line_start":50,"line_end":50,"column_start":21,"column_end":30},"alias_span":null,"name":"bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1617,"byte_end":1627,"line_start":56,"line_end":56,"column_start":19,"column_end":29},"alias_span":null,"name":"blake2_128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1629,"byte_end":1639,"line_start":56,"line_end":56,"column_start":31,"column_end":41},"alias_span":null,"name":"blake2_256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1641,"byte_end":1648,"line_start":56,"line_end":56,"column_start":43,"column_end":50},"alias_span":null,"name":"twox_64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":64},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1650,"byte_end":1658,"line_start":56,"line_end":56,"column_start":52,"column_end":60},"alias_span":null,"name":"twox_128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1660,"byte_end":1668,"line_start":56,"line_end":56,"column_start":62,"column_end":70},"alias_span":null,"name":"twox_256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1670,"byte_end":1680,"line_start":56,"line_end":56,"column_start":72,"column_end":82},"alias_span":null,"name":"keccak_256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":2271},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":20553,"byte_end":20558,"line_start":41,"line_end":41,"column_start":22,"column_end":27},"alias_span":null,"name":"Deref","value":"","parent":{"krate":0,"index":119}},{"kind":"Use","ref_id":{"krate":108,"index":21},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":20663,"byte_end":20670,"line_start":44,"line_end":44,"column_start":18,"column_end":25},"alias_span":null,"name":"Zeroize","value":"","parent":{"krate":0,"index":119}},{"kind":"Use","ref_id":{"krate":109,"index":23},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":20663,"byte_end":20670,"line_start":44,"line_end":44,"column_start":18,"column_end":25},"alias_span":null,"name":"Zeroize","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":110,"index":75},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":20742,"byte_end":20754,"line_start":46,"line_end":46,"column_start":18,"column_end":30},"alias_span":null,"name":"ExposeSecret","value":"","parent":{"krate":0,"index":119}},{"kind":"Use","ref_id":{"krate":110,"index":24},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":20829,"byte_end":20841,"line_start":49,"line_end":49,"column_start":18,"column_end":30},"alias_span":null,"name":"SecretString","value":"","parent":{"krate":0,"index":119}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":44777,"byte_end":44778,"line_start":821,"line_end":821,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":119}},{"kind":"Use","ref_id":{"krate":76,"index":1754},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","byte_start":148496,"byte_end":148500,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"alias_span":null,"name":"H160","value":"","parent":{"krate":0,"index":1410}},{"kind":"Use","ref_id":{"krate":76,"index":1755},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","byte_start":148496,"byte_end":148500,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"alias_span":null,"name":"H160","value":"","parent":{"krate":0,"index":1412}},{"kind":"Use","ref_id":{"krate":76,"index":1897},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","byte_start":148502,"byte_end":148506,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":1410}},{"kind":"Use","ref_id":{"krate":76,"index":1898},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","byte_start":148502,"byte_end":148506,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":1413}},{"kind":"Use","ref_id":{"krate":76,"index":2040},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","byte_start":148508,"byte_end":148512,"line_start":20,"line_end":20,"column_start":39,"column_end":43},"alias_span":null,"name":"H512","value":"","parent":{"krate":0,"index":1410}},{"kind":"Use","ref_id":{"krate":76,"index":2041},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","byte_start":148508,"byte_end":148512,"line_start":20,"line_end":20,"column_start":39,"column_end":43},"alias_span":null,"name":"H512","value":"","parent":{"krate":0,"index":1414}},{"kind":"Use","ref_id":{"krate":0,"index":2242},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":153908,"byte_end":153917,"line_start":25,"line_end":25,"column_start":24,"column_end":33},"alias_span":null,"name":"KeyTypeId","value":"","parent":{"krate":0,"index":1437}},{"kind":"Use","ref_id":{"krate":0,"index":2243},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":153908,"byte_end":153917,"line_start":25,"line_end":25,"column_start":24,"column_end":33},"alias_span":null,"name":"KeyTypeId","value":"","parent":{"krate":0,"index":1453}},{"kind":"Use","ref_id":{"krate":76,"index":821},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/uint.rs","byte_start":196924,"byte_end":196928,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"alias_span":null,"name":"U256","value":"","parent":{"krate":0,"index":1666}},{"kind":"Use","ref_id":{"krate":76,"index":822},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/uint.rs","byte_start":196924,"byte_end":196928,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"alias_span":null,"name":"U256","value":"","parent":{"krate":0,"index":1668}},{"kind":"Use","ref_id":{"krate":76,"index":1337},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/uint.rs","byte_start":196930,"byte_end":196934,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"alias_span":null,"name":"U512","value":"","parent":{"krate":0,"index":1666}},{"kind":"Use","ref_id":{"krate":76,"index":1338},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/uint.rs","byte_start":196930,"byte_end":196934,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"alias_span":null,"name":"U512","value":"","parent":{"krate":0,"index":1669}},{"kind":"Use","ref_id":{"krate":69,"index":57},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211594,"byte_end":211607,"line_start":26,"line_end":26,"column_start":28,"column_end":41},"alias_span":null,"name":"Externalities","value":"","parent":{"krate":0,"index":1690}},{"kind":"Use","ref_id":{"krate":69,"index":89},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211609,"byte_end":211625,"line_start":26,"line_end":26,"column_start":43,"column_end":59},"alias_span":null,"name":"ExternalitiesExt","value":"","parent":{"krate":0,"index":1690}},{"kind":"Use","ref_id":{"krate":76,"index":1754},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1985,"byte_end":1989,"line_start":76,"line_end":76,"column_start":22,"column_end":26},"alias_span":null,"name":"H160","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":76,"index":1755},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1985,"byte_end":1989,"line_start":76,"line_end":76,"column_start":22,"column_end":26},"alias_span":null,"name":"H160","value":"","parent":{"krate":0,"index":1761}},{"kind":"Use","ref_id":{"krate":76,"index":1897},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1991,"byte_end":1995,"line_start":76,"line_end":76,"column_start":28,"column_end":32},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":76,"index":1898},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1991,"byte_end":1995,"line_start":76,"line_end":76,"column_start":28,"column_end":32},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":1762}},{"kind":"Use","ref_id":{"krate":76,"index":2040},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1997,"byte_end":2001,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"alias_span":null,"name":"H512","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":76,"index":2041},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1997,"byte_end":2001,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"alias_span":null,"name":"H512","value":"","parent":{"krate":0,"index":1763}},{"kind":"Use","ref_id":{"krate":0,"index":1415},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2003,"byte_end":2015,"line_start":76,"line_end":76,"column_start":40,"column_end":52},"alias_span":null,"name":"convert_hash","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":76,"index":821},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2039,"byte_end":2043,"line_start":77,"line_end":77,"column_start":22,"column_end":26},"alias_span":null,"name":"U256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":76,"index":822},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2039,"byte_end":2043,"line_start":77,"line_end":77,"column_start":22,"column_end":26},"alias_span":null,"name":"U256","value":"","parent":{"krate":0,"index":1766}},{"kind":"Use","ref_id":{"krate":76,"index":1337},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2045,"byte_end":2049,"line_start":77,"line_end":77,"column_start":28,"column_end":32},"alias_span":null,"name":"U512","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":76,"index":1338},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2045,"byte_end":2049,"line_start":77,"line_end":77,"column_start":28,"column_end":32},"alias_span":null,"name":"U512","value":"","parent":{"krate":0,"index":1767}},{"kind":"Use","ref_id":{"krate":0,"index":3444},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2075,"byte_end":2099,"line_start":78,"line_end":78,"column_start":24,"column_end":48},"alias_span":null,"name":"ChangesTrieConfiguration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3522},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2101,"byte_end":2130,"line_start":78,"line_end":78,"column_start":50,"column_end":79},"alias_span":null,"name":"ChangesTrieConfigurationRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1950},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2182,"byte_end":2196,"line_start":80,"line_end":80,"column_start":18,"column_end":32},"alias_span":null,"name":"DeriveJunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2198,"byte_end":2202,"line_start":80,"line_end":80,"column_start":34,"column_end":38},"alias_span":null,"name":"Pair","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2204,"byte_end":2210,"line_start":80,"line_end":80,"column_start":40,"column_end":46},"alias_span":null,"name":"Public","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":147,"index":11},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2231,"byte_end":2237,"line_start":82,"line_end":82,"column_start":18,"column_end":24},"alias_span":null,"name":"Hasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2794},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2293,"byte_end":2305,"line_start":84,"line_end":84,"column_start":31,"column_end":43},"alias_span":null,"name":"Blake2Hasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2795},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2293,"byte_end":2305,"line_start":84,"line_end":84,"column_start":31,"column_end":43},"alias_span":null,"name":"Blake2Hasher","value":"","parent":{"krate":0,"index":1776}},{"kind":"Use","ref_id":{"krate":0,"index":2798},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2361,"byte_end":2373,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"alias_span":null,"name":"KeccakHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2799},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2361,"byte_end":2373,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"alias_span":null,"name":"KeccakHasher","value":"","parent":{"krate":0,"index":1777}},{"kind":"Use","ref_id":{"krate":70,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2384,"byte_end":2394,"line_start":88,"line_end":88,"column_start":9,"column_end":19},"alias_span":null,"name":"storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2431,"byte_end":2437,"line_start":91,"line_end":91,"column_start":9,"column_end":15},"alias_span":null,"name":"sp_std","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":686,"byte_end":11165,"line_start":18,"line_end":395,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":3859},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":3865},{"krate":0,"index":12},{"krate":0,"index":3867},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":3871},{"krate":0,"index":16},{"krate":0,"index":3873},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":119},{"krate":0,"index":372},{"krate":0,"index":811},{"krate":0,"index":1004},{"krate":0,"index":1221},{"krate":0,"index":1410},{"krate":0,"index":1418},{"krate":0,"index":1437},{"krate":0,"index":1656},{"krate":0,"index":1666},{"krate":0,"index":1670},{"krate":0,"index":1690},{"krate":0,"index":1749},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":4275},{"krate":0,"index":1762},{"krate":0,"index":4277},{"krate":0,"index":1763},{"krate":0,"index":4279},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":4283},{"krate":0,"index":1767},{"krate":0,"index":4285},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":4299},{"krate":0,"index":1777},{"krate":0,"index":4301},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1790},{"krate":0,"index":3629},{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3688},{"krate":0,"index":3686},{"krate":0,"index":3672},{"krate":0,"index":3643},{"krate":0,"index":3640},{"krate":0,"index":3634},{"krate":0,"index":3632},{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":3697},{"krate":0,"index":3709},{"krate":0,"index":3704},{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":1803},{"krate":0,"index":1805},{"krate":0,"index":3719},{"krate":0,"index":3790},{"krate":0,"index":3788},{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3779},{"krate":0,"index":3773},{"krate":0,"index":3763},{"krate":0,"index":3758},{"krate":0,"index":3756},{"krate":0,"index":3747},{"krate":0,"index":3741},{"krate":0,"index":3722},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1818},{"krate":0,"index":1821},{"krate":0,"index":1824},{"krate":0,"index":1828},{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":1831},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1837},{"krate":0,"index":3796},{"krate":0,"index":3830},{"krate":0,"index":3824},{"krate":0,"index":3815},{"krate":0,"index":3814},{"krate":0,"index":3812},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":3836},{"krate":0,"index":3855},{"krate":0,"index":3849},{"krate":0,"index":3845},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3837}],"decl_id":null,"docs":" Shareable Substrate types.\n","sig":null,"attributes":[{"value":"/ Shareable Substrate types.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":686,"byte_end":716,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"warn(missing_docs)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":718,"byte_end":740,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hashing","qualname":"::hashing","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84}],"decl_id":null,"docs":" Hashing functions.","sig":null,"attributes":[{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1517,"byte_end":1548,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/ Hashing functions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":11853,"byte_end":11875,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":11876,"byte_end":11879,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This module is gated by `full-crypto` feature. If you intend to use any of the functions","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":11880,"byte_end":11972,"line_start":20,"line_end":20,"column_start":1,"column_end":93}},{"value":"/ defined here within your runtime, you should most likely rather use [sp_io::hashing] instead,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":11973,"byte_end":12070,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ unless you know what you're doing. Using `sp_io` will be more performant, since instead of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":12071,"byte_end":12165,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/ computing the hash in WASM it delegates that computation to the host client.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":12166,"byte_end":12246,"line_start":23,"line_end":23,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":12407,"byte_end":12422,"line_start":31,"line_end":31,"column_start":8,"column_end":23},"name":"blake2_512_into","qualname":"::hashing::blake2_512_into","value":"pub fn blake2_512_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 512-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 512-bit hash and place result in `dest`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":12343,"byte_end":12399,"line_start":30,"line_end":30,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":12596,"byte_end":12606,"line_start":36,"line_end":36,"column_start":8,"column_end":18},"name":"blake2_512","qualname":"::hashing::blake2_512","value":"pub fn blake2_512(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 512-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 512-bit hash and return result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":12541,"byte_end":12588,"line_start":35,"line_end":35,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":12758,"byte_end":12773,"line_start":43,"line_end":43,"column_start":8,"column_end":23},"name":"blake2_256_into","qualname":"::hashing::blake2_256_into","value":"pub fn blake2_256_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 256-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 256-bit hash and place result in `dest`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":12694,"byte_end":12750,"line_start":42,"line_end":42,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":12947,"byte_end":12957,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"blake2_256","qualname":"::hashing::blake2_256","value":"pub fn blake2_256(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 256-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 256-bit hash and return result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":12892,"byte_end":12939,"line_start":47,"line_end":47,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":13109,"byte_end":13124,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"blake2_128_into","qualname":"::hashing::blake2_128_into","value":"pub fn blake2_128_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 128-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 128-bit hash and place result in `dest`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":13045,"byte_end":13101,"line_start":54,"line_end":54,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":13298,"byte_end":13308,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"blake2_128","qualname":"::hashing::blake2_128","value":"pub fn blake2_128(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 128-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 128-bit hash and return result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":13243,"byte_end":13290,"line_start":59,"line_end":59,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":13459,"byte_end":13473,"line_start":67,"line_end":67,"column_start":8,"column_end":22},"name":"blake2_64_into","qualname":"::hashing::blake2_64_into","value":"pub fn blake2_64_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 64-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 64-bit hash and place result in `dest`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":13396,"byte_end":13451,"line_start":66,"line_end":66,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":13644,"byte_end":13653,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"blake2_64","qualname":"::hashing::blake2_64","value":"pub fn blake2_64(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 64-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 64-bit hash and return result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":13590,"byte_end":13636,"line_start":71,"line_end":71,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":13797,"byte_end":13809,"line_start":79,"line_end":79,"column_start":8,"column_end":20},"name":"twox_64_into","qualname":"::hashing::twox_64_into","value":"pub fn twox_64_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 64-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a XX 64-bit hash and place result in `dest`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":13738,"byte_end":13789,"line_start":78,"line_end":78,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":14100,"byte_end":14107,"line_start":89,"line_end":89,"column_start":8,"column_end":15},"name":"twox_64","qualname":"::hashing::twox_64","value":"pub fn twox_64(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 64-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a XX 64-bit hash and return result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":14050,"byte_end":14092,"line_start":88,"line_end":88,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":14259,"byte_end":14272,"line_start":96,"line_end":96,"column_start":8,"column_end":21},"name":"twox_128_into","qualname":"::hashing::twox_128_into","value":"pub fn twox_128_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 128-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a XX 128-bit hash and place result in `dest`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":14199,"byte_end":14251,"line_start":95,"line_end":95,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":14700,"byte_end":14708,"line_start":110,"line_end":110,"column_start":8,"column_end":16},"name":"twox_128","qualname":"::hashing::twox_128","value":"pub fn twox_128(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 128-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a XX 128-bit hash and return result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":14649,"byte_end":14692,"line_start":109,"line_end":109,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":14864,"byte_end":14877,"line_start":117,"line_end":117,"column_start":8,"column_end":21},"name":"twox_256_into","qualname":"::hashing::twox_256_into","value":"pub fn twox_256_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 256-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a XX 256-bit hash and place result in `dest`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":14804,"byte_end":14856,"line_start":116,"line_end":116,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":15579,"byte_end":15587,"line_start":139,"line_end":139,"column_start":8,"column_end":16},"name":"twox_256","qualname":"::hashing::twox_256","value":"pub fn twox_256(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 256-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a XX 256-bit hash and return result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":15528,"byte_end":15571,"line_start":138,"line_end":138,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":15738,"byte_end":15748,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"keccak_256","qualname":"::hashing::keccak_256","value":"pub fn keccak_256(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a keccak 256-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a keccak 256-bit hash and return result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":15683,"byte_end":15730,"line_start":145,"line_end":145,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":15958,"byte_end":15968,"line_start":155,"line_end":155,"column_start":8,"column_end":18},"name":"keccak_512","qualname":"::hashing::keccak_512","value":"pub fn keccak_512(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a keccak 512-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a keccak 512-bit hash and return result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":15903,"byte_end":15950,"line_start":154,"line_end":154,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":16176,"byte_end":16184,"line_start":164,"line_end":164,"column_start":8,"column_end":16},"name":"sha2_256","qualname":"::hashing::sha2_256","value":"pub fn sha2_256(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a sha2 256-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a sha2 256-bit hash and return result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hashing.rs","byte_start":16123,"byte_end":16168,"line_start":163,"line_end":163,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":94},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hexdisplay","qualname":"::hexdisplay","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":1849},{"krate":0,"index":1852},{"krate":0,"index":1855},{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":1867},{"krate":0,"index":1870},{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":1897},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":118}],"decl_id":null,"docs":" Wrapper type for byte collections that outputs hex.\n","sig":null,"attributes":[{"value":"/ Wrapper type for byte collections that outputs hex.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":17038,"byte_end":17093,"line_start":18,"line_end":18,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":95},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":17165,"byte_end":17175,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"HexDisplay","qualname":"::hexdisplay::HexDisplay","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple wrapper to display hex representation of bytes.\n","sig":null,"attributes":[{"value":"/ Simple wrapper to display hex representation of bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":17095,"byte_end":17153,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":17305,"byte_end":17309,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"name":"from","qualname":"<HexDisplay>::from","value":"pub fn from<R: AsBytesRef>(&'a R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new instance that will display `d` as a hex string when displayed.\n","sig":null,"attributes":[{"value":"/ Create new instance that will display `d` as a hex string when displayed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":17219,"byte_end":17296,"line_start":24,"line_end":24,"column_start":2,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":109},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":18143,"byte_end":18153,"line_start":57,"line_end":57,"column_start":11,"column_end":21},"name":"AsBytesRef","qualname":"::hexdisplay::AsBytesRef","value":"AsBytesRef","parent":null,"children":[{"krate":0,"index":110}],"decl_id":null,"docs":" Simple trait to transform various types to `&[u8]`\n","sig":null,"attributes":[{"value":"/ Simple trait to transform various types to `&[u8]`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":18078,"byte_end":18132,"line_start":56,"line_end":56,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":18196,"byte_end":18208,"line_start":59,"line_end":59,"column_start":5,"column_end":17},"name":"as_bytes_ref","qualname":"::hexdisplay::AsBytesRef::as_bytes_ref","value":"pub fn as_bytes_ref(&Self) -> &[u8]","parent":{"krate":0,"index":109},"children":[],"decl_id":null,"docs":" Transform `self` into `&[u8]`.\n","sig":null,"attributes":[{"value":"/ Transform `self` into `&[u8]`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":18157,"byte_end":18191,"line_start":58,"line_end":58,"column_start":2,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":18977,"byte_end":18989,"line_start":88,"line_end":88,"column_start":8,"column_end":20},"name":"ascii_format","qualname":"::hexdisplay::ascii_format","value":"pub fn ascii_format(&[u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Format into ASCII + # + hex, suitable for storage key preimages.\n","sig":null,"attributes":[{"value":"/ Format into ASCII + # + hex, suitable for storage key preimages.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":18877,"byte_end":18945,"line_start":86,"line_end":86,"column_start":1,"column_end":69}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":18946,"byte_end":18969,"line_start":87,"line_end":87,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":119},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crypto","qualname":"::crypto","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":3925},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":3939},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":3941},{"krate":0,"index":134},{"krate":0,"index":3943},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":3955},{"krate":0,"index":142},{"krate":0,"index":3957},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":1927},{"krate":0,"index":1948},{"krate":0,"index":1946},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1950},{"krate":0,"index":1991},{"krate":0,"index":1987},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1975},{"krate":0,"index":1973},{"krate":0,"index":1967},{"krate":0,"index":1959},{"krate":0,"index":158},{"krate":0,"index":173},{"krate":0,"index":1992},{"krate":0,"index":2016},{"krate":0,"index":2015},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2007},{"krate":0,"index":176},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2026},{"krate":0,"index":2059},{"krate":0,"index":2170},{"krate":0,"index":2168},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2159},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2042},{"krate":0,"index":2171},{"krate":0,"index":2183},{"krate":0,"index":2181},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2173},{"krate":0,"index":2045},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":206},{"krate":0,"index":2184},{"krate":0,"index":2225},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2215},{"krate":0,"index":2209},{"krate":0,"index":2207},{"krate":0,"index":2197},{"krate":0,"index":2191},{"krate":0,"index":2188},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":258},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":303},{"krate":0,"index":333},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":344},{"krate":0,"index":349},{"krate":0,"index":2242},{"krate":0,"index":2327},{"krate":0,"index":2324},{"krate":0,"index":2322},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2308},{"krate":0,"index":2306},{"krate":0,"index":2303},{"krate":0,"index":2293},{"krate":0,"index":2287},{"krate":0,"index":2276},{"krate":0,"index":2274},{"krate":0,"index":2268},{"krate":0,"index":2246},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":2328},{"krate":0,"index":2401},{"krate":0,"index":2400},{"krate":0,"index":2397},{"krate":0,"index":2395},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2381},{"krate":0,"index":2379},{"krate":0,"index":2376},{"krate":0,"index":2366},{"krate":0,"index":2360},{"krate":0,"index":2354},{"krate":0,"index":2332},{"krate":0,"index":2403},{"krate":0,"index":2467},{"krate":0,"index":2465},{"krate":0,"index":2463},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2446},{"krate":0,"index":2444},{"krate":0,"index":2441},{"krate":0,"index":2435},{"krate":0,"index":2430},{"krate":0,"index":2424},{"krate":0,"index":2407},{"krate":0,"index":359},{"krate":0,"index":361}],"decl_id":null,"docs":" Cryptographic utilities.\n","sig":null,"attributes":[{"value":"/ Cryptographic utilities.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":19991,"byte_end":20019,"line_start":19,"line_end":19,"column_start":1,"column_end":29}}]},{"kind":"Const","id":{"krate":0,"index":145},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":20903,"byte_end":20913,"line_start":52,"line_end":52,"column_start":11,"column_end":21},"name":"DEV_PHRASE","qualname":"::crypto::DEV_PHRASE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The root phrase for our publicly known keys.\n","sig":null,"attributes":[{"value":"/ The root phrase for our publicly known keys.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":20844,"byte_end":20892,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":146},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21081,"byte_end":21092,"line_start":55,"line_end":55,"column_start":11,"column_end":22},"name":"DEV_ADDRESS","qualname":"::crypto::DEV_ADDRESS","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The address of the associated root phrase for our publicly known keys.\n","sig":null,"attributes":[{"value":"/ The address of the associated root phrase for our publicly known keys.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":20996,"byte_end":21070,"line_start":54,"line_end":54,"column_start":1,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":1924},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21219,"byte_end":21229,"line_start":59,"line_end":59,"column_start":10,"column_end":20},"name":"Infallible","qualname":"::crypto::Infallible","value":"pub enum Infallible { }","parent":null,"children":[],"decl_id":null,"docs":" The infallible type.\n","sig":null,"attributes":[{"value":"/ The infallible type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21154,"byte_end":21178,"line_start":57,"line_end":57,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":147},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21415,"byte_end":21430,"line_start":64,"line_end":64,"column_start":11,"column_end":26},"name":"JUNCTION_ID_LEN","qualname":"::crypto::JUNCTION_ID_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the junction identifier. Note that this is also referred to as the\n `CHAIN_CODE_LENGTH` in the context of Schnorrkel.\n","sig":null,"attributes":[{"value":"/ The length of the junction identifier. Note that this is also referred to as the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21234,"byte_end":21318,"line_start":61,"line_end":61,"column_start":1,"column_end":85}},{"value":"/ `CHAIN_CODE_LENGTH` in the context of Schnorrkel.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21319,"byte_end":21372,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21373,"byte_end":21404,"line_start":63,"line_end":63,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":148},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21642,"byte_end":21655,"line_start":69,"line_end":69,"column_start":11,"column_end":24},"name":"UncheckedFrom","qualname":"::crypto::UncheckedFrom","value":"UncheckedFrom<T>","parent":null,"children":[{"krate":0,"index":150}],"decl_id":null,"docs":" Similar to `From`, except that the onus is on the part of the caller to ensure\n that data passed in makes sense. Basically, you're not guaranteed to get anything\n sensible out.\n","sig":null,"attributes":[{"value":"/ Similar to `From`, except that the onus is on the part of the caller to ensure","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21445,"byte_end":21527,"line_start":66,"line_end":66,"column_start":1,"column_end":83}},{"value":"/ that data passed in makes sense. Basically, you're not guaranteed to get anything","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21528,"byte_end":21613,"line_start":67,"line_end":67,"column_start":1,"column_end":86}},{"value":"/ sensible out.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21614,"byte_end":21631,"line_start":68,"line_end":68,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21850,"byte_end":21864,"line_start":73,"line_end":73,"column_start":5,"column_end":19},"name":"unchecked_from","qualname":"::crypto::UncheckedFrom::unchecked_from","value":"pub fn unchecked_from(T) -> Self","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Convert from an instance of `T` to Self. This is not guaranteed to be\n whatever counts as a valid instance of `T` and it's up to the caller to\n ensure that it makes sense.\n","sig":null,"attributes":[{"value":"/ Convert from an instance of `T` to Self. This is not guaranteed to be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21662,"byte_end":21735,"line_start":70,"line_end":70,"column_start":2,"column_end":75}},{"value":"/ whatever counts as a valid instance of `T` and it's up to the caller to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21737,"byte_end":21812,"line_start":71,"line_end":71,"column_start":2,"column_end":77}},{"value":"/ ensure that it makes sense.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21814,"byte_end":21845,"line_start":72,"line_end":72,"column_start":2,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":151},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21933,"byte_end":21946,"line_start":77,"line_end":77,"column_start":11,"column_end":24},"name":"UncheckedInto","qualname":"::crypto::UncheckedInto","value":"UncheckedInto<T>","parent":null,"children":[{"krate":0,"index":153}],"decl_id":null,"docs":" The counterpart to `UncheckedFrom`.\n","sig":null,"attributes":[{"value":"/ The counterpart to `UncheckedFrom`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21883,"byte_end":21922,"line_start":76,"line_end":76,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21998,"byte_end":22012,"line_start":79,"line_end":79,"column_start":5,"column_end":19},"name":"unchecked_into","qualname":"::crypto::UncheckedInto::unchecked_into","value":"pub fn unchecked_into(Self) -> T","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":" The counterpart to `unchecked_from`.\n","sig":null,"attributes":[{"value":"/ The counterpart to `unchecked_from`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":21953,"byte_end":21993,"line_start":78,"line_end":78,"column_start":2,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1928},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22375,"byte_end":22388,"line_start":93,"line_end":93,"column_start":2,"column_end":15},"name":"InvalidFormat","qualname":"::crypto::SecretStringError::InvalidFormat","value":"SecretStringError::InvalidFormat","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The overall format was invalid (e.g. the seed phrase contained symbols).\n","sig":null,"attributes":[{"value":"/ The overall format was invalid (e.g. the seed phrase contained symbols).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22297,"byte_end":22373,"line_start":92,"line_end":92,"column_start":2,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1930},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22450,"byte_end":22463,"line_start":95,"line_end":95,"column_start":2,"column_end":15},"name":"InvalidPhrase","qualname":"::crypto::SecretStringError::InvalidPhrase","value":"SecretStringError::InvalidPhrase","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The seed phrase provided is not a valid BIP39 phrase.\n","sig":null,"attributes":[{"value":"/ The seed phrase provided is not a valid BIP39 phrase.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22391,"byte_end":22448,"line_start":94,"line_end":94,"column_start":2,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1932},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22506,"byte_end":22521,"line_start":97,"line_end":97,"column_start":2,"column_end":17},"name":"InvalidPassword","qualname":"::crypto::SecretStringError::InvalidPassword","value":"SecretStringError::InvalidPassword","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The supplied password was invalid.\n","sig":null,"attributes":[{"value":"/ The supplied password was invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22466,"byte_end":22504,"line_start":96,"line_end":96,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1934},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22564,"byte_end":22575,"line_start":99,"line_end":99,"column_start":2,"column_end":13},"name":"InvalidSeed","qualname":"::crypto::SecretStringError::InvalidSeed","value":"SecretStringError::InvalidSeed","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The seed is invalid (bad content).\n","sig":null,"attributes":[{"value":"/ The seed is invalid (bad content).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22524,"byte_end":22562,"line_start":98,"line_end":98,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1936},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22615,"byte_end":22632,"line_start":101,"line_end":101,"column_start":2,"column_end":19},"name":"InvalidSeedLength","qualname":"::crypto::SecretStringError::InvalidSeedLength","value":"SecretStringError::InvalidSeedLength","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The seed has an invalid length.\n","sig":null,"attributes":[{"value":"/ The seed has an invalid length.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22578,"byte_end":22613,"line_start":100,"line_end":100,"column_start":2,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1938},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22732,"byte_end":22743,"line_start":103,"line_end":103,"column_start":2,"column_end":13},"name":"InvalidPath","qualname":"::crypto::SecretStringError::InvalidPath","value":"SecretStringError::InvalidPath","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The derivation path was invalid (e.g. contains soft junctions when they are not supported).\n","sig":null,"attributes":[{"value":"/ The derivation path was invalid (e.g. contains soft junctions when they are not supported).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22635,"byte_end":22730,"line_start":102,"line_end":102,"column_start":2,"column_end":97}}]},{"kind":"Enum","id":{"krate":0,"index":1927},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22276,"byte_end":22293,"line_start":91,"line_end":91,"column_start":10,"column_end":27},"name":"SecretStringError","qualname":"::crypto::SecretStringError","value":"pub enum SecretStringError {\n\n    /// The overall format was invalid (e.g. the seed phrase contained symbols).\n    InvalidFormat,\n\n    /// The seed phrase provided is not a valid BIP39 phrase.\n    InvalidPhrase,\n\n    /// The supplied password was invalid.\n    InvalidPassword,\n\n    /// The seed is invalid (bad content).\n    InvalidSeed,\n\n    /// The seed has an invalid length.\n    InvalidSeedLength,\n\n    /// The derivation path was invalid (e.g. contains soft junctions when they are not supported).\n    InvalidPath,\n}","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1930},{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1936},{"krate":0,"index":1938}],"decl_id":null,"docs":" An error with the interpretation of a secret.\n","sig":null,"attributes":[{"value":"/ An error with the interpretation of a secret.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22146,"byte_end":22195,"line_start":88,"line_end":88,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22235,"byte_end":22266,"line_start":90,"line_end":90,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1951},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23187,"byte_end":23191,"line_start":113,"line_end":113,"column_start":2,"column_end":6},"name":"Soft","qualname":"::crypto::DeriveJunction::Soft","value":"DeriveJunction::Soft([u8; ])","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Soft (vanilla) derivation. Public keys have a correspondent derivation.\n","sig":null,"attributes":[{"value":"/ Soft (vanilla) derivation. Public keys have a correspondent derivation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23110,"byte_end":23185,"line_start":112,"line_end":112,"column_start":2,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1955},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23304,"byte_end":23308,"line_start":115,"line_end":115,"column_start":2,"column_end":6},"name":"Hard","qualname":"::crypto::DeriveJunction::Hard","value":"DeriveJunction::Hard([u8; ])","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Hard (\"hardened\") derivation. Public keys do not have a correspondent derivation.\n","sig":null,"attributes":[{"value":"/ Hard (\"hardened\") derivation. Public keys do not have a correspondent derivation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23217,"byte_end":23302,"line_start":114,"line_end":114,"column_start":2,"column_end":87}}]},{"kind":"Enum","id":{"krate":0,"index":1950},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23092,"byte_end":23106,"line_start":111,"line_end":111,"column_start":10,"column_end":24},"name":"DeriveJunction","qualname":"::crypto::DeriveJunction","value":"pub enum DeriveJunction {\n\n    /// Soft (vanilla) derivation. Public keys have a correspondent derivation.\n    Soft([u8; ]),\n\n    /// Hard (\"hardened\") derivation. Public keys do not have a correspondent derivation.\n    Hard([u8; ]),\n}","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1955}],"decl_id":null,"docs":" A since derivation junction description. It is the single parameter used when creating\n a new secret key from an existing secret key and, in the case of `SoftRaw` and `SoftIndex`\n a new public key from an existing public key.\n","sig":null,"attributes":[{"value":"/ A since derivation junction description. It is the single parameter used when creating","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22748,"byte_end":22838,"line_start":106,"line_end":106,"column_start":1,"column_end":91}},{"value":"/ a new secret key from an existing secret key and, in the case of `SoftRaw` and `SoftIndex`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22839,"byte_end":22933,"line_start":107,"line_end":107,"column_start":1,"column_end":95}},{"value":"/ a new public key from an existing public key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22934,"byte_end":22983,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23051,"byte_end":23082,"line_start":110,"line_end":110,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23475,"byte_end":23481,"line_start":121,"line_end":121,"column_start":9,"column_end":15},"name":"soften","qualname":"<DeriveJunction>::soften","value":"pub fn soften(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Consume self to return a soft derive junction with the same chain code.\n","sig":null,"attributes":[{"value":"/ Consume self to return a soft derive junction with the same chain code.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23391,"byte_end":23466,"line_start":120,"line_end":120,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23628,"byte_end":23634,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"name":"harden","qualname":"<DeriveJunction>::harden","value":"pub fn harden(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Consume self to return a hard derive junction with the same chain code.\n","sig":null,"attributes":[{"value":"/ Consume self to return a hard derive junction with the same chain code.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23544,"byte_end":23619,"line_start":123,"line_end":123,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23837,"byte_end":23841,"line_start":129,"line_end":129,"column_start":9,"column_end":13},"name":"soft","qualname":"<DeriveJunction>::soft","value":"pub fn soft<T: Encode>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new soft (vanilla) DeriveJunction from a given, encodable, value.","sig":null,"attributes":[{"value":"/ Create a new soft (vanilla) DeriveJunction from a given, encodable, value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23697,"byte_end":23775,"line_start":126,"line_end":126,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23777,"byte_end":23780,"line_start":127,"line_end":127,"column_start":2,"column_end":5}},{"value":"/ If you need a hard junction, use `hard()`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23782,"byte_end":23828,"line_start":128,"line_end":128,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":24374,"byte_end":24378,"line_start":144,"line_end":144,"column_start":9,"column_end":13},"name":"hard","qualname":"<DeriveJunction>::hard","value":"pub fn hard<T: Encode>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new hard (hardened) DeriveJunction from a given, encodable, value.","sig":null,"attributes":[{"value":"/ Create a new hard (hardened) DeriveJunction from a given, encodable, value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":24233,"byte_end":24312,"line_start":141,"line_end":141,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":24314,"byte_end":24317,"line_start":142,"line_end":142,"column_start":2,"column_end":5}},{"value":"/ If you need a soft junction, use `soft()`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":24319,"byte_end":24365,"line_start":143,"line_end":143,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":24495,"byte_end":24507,"line_start":149,"line_end":149,"column_start":9,"column_end":21},"name":"unwrap_inner","qualname":"<DeriveJunction>::unwrap_inner","value":"pub fn unwrap_inner(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Consume self to return the chain code.\n","sig":null,"attributes":[{"value":"/ Consume self to return the chain code.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":24444,"byte_end":24486,"line_start":148,"line_end":148,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":24678,"byte_end":24683,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"name":"inner","qualname":"<DeriveJunction>::inner","value":"pub fn inner(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner junction id.\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner junction id.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":24624,"byte_end":24669,"line_start":155,"line_end":155,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":24861,"byte_end":24868,"line_start":163,"line_end":163,"column_start":9,"column_end":16},"name":"is_soft","qualname":"<DeriveJunction>::is_soft","value":"pub fn is_soft(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the junction is soft.\n","sig":null,"attributes":[{"value":"/ Return `true` if the junction is soft.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":24810,"byte_end":24852,"line_start":162,"line_end":162,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25013,"byte_end":25020,"line_start":171,"line_end":171,"column_start":9,"column_end":16},"name":"is_hard","qualname":"<DeriveJunction>::is_hard","value":"pub fn is_hard(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the junction is hard.\n","sig":null,"attributes":[{"value":"/ Return `true` if the junction is hard.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":24962,"byte_end":25004,"line_start":170,"line_end":170,"column_start":2,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1993},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25722,"byte_end":25731,"line_start":210,"line_end":210,"column_start":2,"column_end":11},"name":"BadBase58","qualname":"::crypto::PublicError::BadBase58","value":"PublicError::BadBase58","parent":{"krate":0,"index":1992},"children":[],"decl_id":null,"docs":" Bad alphabet.\n","sig":null,"attributes":[{"value":"/ Bad alphabet.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25703,"byte_end":25720,"line_start":209,"line_end":209,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1995},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25751,"byte_end":25760,"line_start":212,"line_end":212,"column_start":2,"column_end":11},"name":"BadLength","qualname":"::crypto::PublicError::BadLength","value":"PublicError::BadLength","parent":{"krate":0,"index":1992},"children":[],"decl_id":null,"docs":" Bad length.\n","sig":null,"attributes":[{"value":"/ Bad length.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25734,"byte_end":25749,"line_start":211,"line_end":211,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1997},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25805,"byte_end":25819,"line_start":214,"line_end":214,"column_start":2,"column_end":16},"name":"UnknownVersion","qualname":"::crypto::PublicError::UnknownVersion","value":"PublicError::UnknownVersion","parent":{"krate":0,"index":1992},"children":[],"decl_id":null,"docs":" Unknown identifier for the encoding.\n","sig":null,"attributes":[{"value":"/ Unknown identifier for the encoding.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25763,"byte_end":25803,"line_start":213,"line_end":213,"column_start":2,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1999},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25845,"byte_end":25860,"line_start":216,"line_end":216,"column_start":2,"column_end":17},"name":"InvalidChecksum","qualname":"::crypto::PublicError::InvalidChecksum","value":"PublicError::InvalidChecksum","parent":{"krate":0,"index":1992},"children":[],"decl_id":null,"docs":" Invalid checksum.\n","sig":null,"attributes":[{"value":"/ Invalid checksum.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25822,"byte_end":25843,"line_start":215,"line_end":215,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2001},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25884,"byte_end":25897,"line_start":218,"line_end":218,"column_start":2,"column_end":15},"name":"InvalidFormat","qualname":"::crypto::PublicError::InvalidFormat","value":"PublicError::InvalidFormat","parent":{"krate":0,"index":1992},"children":[],"decl_id":null,"docs":" Invalid format.\n","sig":null,"attributes":[{"value":"/ Invalid format.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25863,"byte_end":25882,"line_start":217,"line_end":217,"column_start":2,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2003},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25930,"byte_end":25941,"line_start":220,"line_end":220,"column_start":2,"column_end":13},"name":"InvalidPath","qualname":"::crypto::PublicError::InvalidPath","value":"PublicError::InvalidPath","parent":{"krate":0,"index":1992},"children":[],"decl_id":null,"docs":" Invalid derivation path.\n","sig":null,"attributes":[{"value":"/ Invalid derivation path.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25900,"byte_end":25928,"line_start":219,"line_end":219,"column_start":2,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2005},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25999,"byte_end":26015,"line_start":222,"line_end":222,"column_start":2,"column_end":18},"name":"FormatNotAllowed","qualname":"::crypto::PublicError::FormatNotAllowed","value":"PublicError::FormatNotAllowed","parent":{"krate":0,"index":1992},"children":[],"decl_id":null,"docs":" Disallowed SS58 Address Format for this datatype.\n","sig":null,"attributes":[{"value":"/ Disallowed SS58 Address Format for this datatype.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25944,"byte_end":25997,"line_start":221,"line_end":221,"column_start":2,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":1992},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25688,"byte_end":25699,"line_start":208,"line_end":208,"column_start":10,"column_end":21},"name":"PublicError","qualname":"::crypto::PublicError","value":"pub enum PublicError {\n\n    /// Bad alphabet.\n    BadBase58,\n\n    /// Bad length.\n    BadLength,\n\n    /// Unknown identifier for the encoding.\n    UnknownVersion,\n\n    /// Invalid checksum.\n    InvalidChecksum,\n\n    /// Invalid format.\n    InvalidFormat,\n\n    /// Invalid derivation path.\n    InvalidPath,\n\n    /// Disallowed SS58 Address Format for this datatype.\n    FormatNotAllowed,\n}","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005}],"decl_id":null,"docs":" An error type for SS58 decoding.\n","sig":null,"attributes":[{"value":"/ An error type for SS58 decoding.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25565,"byte_end":25601,"line_start":205,"line_end":205,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25602,"byte_end":25633,"line_start":206,"line_end":206,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":176},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26239,"byte_end":26248,"line_start":230,"line_end":230,"column_start":11,"column_end":20},"name":"Ss58Codec","qualname":"::crypto::Ss58Codec","value":"Ss58Codec: Sized + AsMut<[u8]> + AsRef<[u8]> + Default","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Key that can be encoded to/from SS58.","sig":null,"attributes":[{"value":"/ Key that can be encoded to/from SS58.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26020,"byte_end":26061,"line_start":225,"line_end":225,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26062,"byte_end":26065,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/paritytech/substrate/wiki/External-Address-Format-(SS58)#address-type","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26066,"byte_end":26162,"line_start":227,"line_end":227,"column_start":1,"column_end":97}},{"value":"/ for information on the codec.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26163,"byte_end":26196,"line_start":228,"line_end":228,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26197,"byte_end":26228,"line_start":229,"line_end":229,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26471,"byte_end":26488,"line_start":233,"line_end":233,"column_start":5,"column_end":22},"name":"format_is_allowed","qualname":"::crypto::Ss58Codec::format_is_allowed","value":"pub fn format_is_allowed(Ss58AddressFormat) -> bool","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" A format filterer, can be used to ensure that `from_ss58check` family only decode for\n allowed identifiers. By default just refuses the two reserved identifiers.\n","sig":null,"attributes":[{"value":"/ A format filterer, can be used to ensure that `from_ss58check` family only decode for","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26297,"byte_end":26386,"line_start":231,"line_end":231,"column_start":2,"column_end":91}},{"value":"/ allowed identifiers. By default just refuses the two reserved identifiers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26388,"byte_end":26466,"line_start":232,"line_end":232,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26697,"byte_end":26711,"line_start":239,"line_end":239,"column_start":5,"column_end":19},"name":"from_ss58check","qualname":"::crypto::Ss58Codec::from_ss58check","value":"pub fn from_ss58check(&str) -> Result<Self, PublicError>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Some if the string is a properly encoded SS58Check address.\n","sig":null,"attributes":[{"value":"/ Some if the string is a properly encoded SS58Check address.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26604,"byte_end":26667,"line_start":237,"line_end":237,"column_start":2,"column_end":65}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26669,"byte_end":26692,"line_start":238,"line_end":238,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":27052,"byte_end":27079,"line_start":250,"line_end":250,"column_start":5,"column_end":32},"name":"from_ss58check_with_version","qualname":"::crypto::Ss58Codec::from_ss58check_with_version","value":"pub fn from_ss58check_with_version(&str)\n-> Result<(Self, Ss58AddressFormat), PublicError>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Some if the string is a properly encoded SS58Check address.\n","sig":null,"attributes":[{"value":"/ Some if the string is a properly encoded SS58Check address.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26959,"byte_end":27022,"line_start":248,"line_end":248,"column_start":2,"column_end":65}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":27024,"byte_end":27047,"line_start":249,"line_end":249,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":28750,"byte_end":28761,"line_start":290,"line_end":290,"column_start":5,"column_end":16},"name":"from_string","qualname":"::crypto::Ss58Codec::from_string","value":"pub fn from_string(&str) -> Result<Self, PublicError>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Some if the string is a properly encoded SS58Check address, optionally with\n a derivation path following.\n","sig":null,"attributes":[{"value":"/ Some if the string is a properly encoded SS58Check address, optionally with","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":28607,"byte_end":28686,"line_start":287,"line_end":287,"column_start":2,"column_end":81}},{"value":"/ a derivation path following.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":28688,"byte_end":28720,"line_start":288,"line_end":288,"column_start":2,"column_end":34}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":28722,"byte_end":28745,"line_start":289,"line_end":289,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":29082,"byte_end":29107,"line_start":301,"line_end":301,"column_start":5,"column_end":30},"name":"to_ss58check_with_version","qualname":"::crypto::Ss58Codec::to_ss58check_with_version","value":"pub fn to_ss58check_with_version(&Self, Ss58AddressFormat) -> String","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Return the ss58-check string for this key.\n","sig":null,"attributes":[{"value":"/ Return the ss58-check string for this key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":29006,"byte_end":29052,"line_start":299,"line_end":299,"column_start":2,"column_end":48}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":29054,"byte_end":29077,"line_start":300,"line_end":300,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":29974,"byte_end":29986,"line_start":324,"line_end":324,"column_start":5,"column_end":17},"name":"to_ss58check","qualname":"::crypto::Ss58Codec::to_ss58check","value":"pub fn to_ss58check(&Self) -> String","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Return the ss58-check string for this key.\n","sig":null,"attributes":[{"value":"/ Return the ss58-check string for this key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":29898,"byte_end":29944,"line_start":322,"line_end":322,"column_start":2,"column_end":48}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":29946,"byte_end":29969,"line_start":323,"line_end":323,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":30209,"byte_end":30233,"line_start":329,"line_end":329,"column_start":5,"column_end":29},"name":"from_string_with_version","qualname":"::crypto::Ss58Codec::from_string_with_version","value":"pub fn from_string_with_version(&str)\n-> Result<(Self, Ss58AddressFormat), PublicError>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Some if the string is a properly encoded SS58Check address, optionally with\n a derivation path following.\n","sig":null,"attributes":[{"value":"/ Some if the string is a properly encoded SS58Check address, optionally with","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":30066,"byte_end":30145,"line_start":326,"line_end":326,"column_start":2,"column_end":81}},{"value":"/ a derivation path following.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":30147,"byte_end":30179,"line_start":327,"line_end":327,"column_start":2,"column_end":34}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":30181,"byte_end":30204,"line_start":328,"line_end":328,"column_start":2,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":189},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":30375,"byte_end":30381,"line_start":335,"line_end":335,"column_start":11,"column_end":17},"name":"Derive","qualname":"::crypto::Derive","value":"Derive: Sized","parent":null,"children":[{"krate":0,"index":190}],"decl_id":null,"docs":" Derivable key trait.\n","sig":null,"attributes":[{"value":"/ Derivable key trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":30340,"byte_end":30364,"line_start":334,"line_end":334,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":30561,"byte_end":30567,"line_start":340,"line_end":340,"column_start":5,"column_end":11},"name":"derive","qualname":"::crypto::Derive::derive","value":"pub fn derive<Iter: Iterator<Item = DeriveJunction>>(&Self, Iter)\n-> Option<Self>","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Derive a child key from a series of given junctions.","sig":null,"attributes":[{"value":"/ Derive a child key from a series of given junctions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":30392,"byte_end":30448,"line_start":336,"line_end":336,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":30450,"byte_end":30453,"line_start":337,"line_end":337,"column_start":2,"column_end":5}},{"value":"/ Will be `None` for public keys if there are any hard junctions in there.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":30455,"byte_end":30531,"line_start":338,"line_end":338,"column_start":2,"column_end":78}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":30533,"byte_end":30556,"line_start":339,"line_end":339,"column_start":2,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":38766,"byte_end":38790,"line_start":594,"line_end":594,"column_start":8,"column_end":32},"name":"set_default_ss58_version","qualname":"::crypto::set_default_ss58_version","value":"pub fn set_default_ss58_version(Ss58AddressFormat)","parent":null,"children":[],"decl_id":null,"docs":" Set the default \"version\" (actually, this is a bit of a misnomer and the version byte is\n typically used not just to encode format/version but also network identity) that is used for\n encoding and decoding SS58 addresses. If an unknown version is provided then it fails.","sig":null,"attributes":[{"value":"/ Set the default \"version\" (actually, this is a bit of a misnomer and the version byte is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":38385,"byte_end":38477,"line_start":588,"line_end":588,"column_start":1,"column_end":93}},{"value":"/ typically used not just to encode format/version but also network identity) that is used for","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":38478,"byte_end":38574,"line_start":589,"line_end":589,"column_start":1,"column_end":97}},{"value":"/ encoding and decoding SS58 addresses. If an unknown version is provided then it fails.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":38575,"byte_end":38665,"line_start":590,"line_end":590,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":38666,"byte_end":38669,"line_start":591,"line_end":591,"column_start":1,"column_end":4}},{"value":"/ See `ss58_address_format!` for all current known \"versions\".","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":38670,"byte_end":38734,"line_start":592,"line_end":592,"column_start":1,"column_end":65}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":38735,"byte_end":38758,"line_start":593,"line_end":593,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":206},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40772,"byte_end":40778,"line_start":655,"line_end":655,"column_start":11,"column_end":17},"name":"Public","qualname":"::crypto::Public","value":"Public: AsRef<[u8]> + AsMut<[u8]> + Default + Derive + CryptoType + PartialEq + Eq +\nClone + Send + Sync + for<'a> TryFrom<&'a [u8]>","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"decl_id":null,"docs":" Trait suitable for typical cryptographic PKI key public type.\n","sig":null,"attributes":[{"value":"/ Trait suitable for typical cryptographic PKI key public type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40696,"byte_end":40761,"line_start":654,"line_end":654,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41116,"byte_end":41126,"line_start":672,"line_end":672,"column_start":5,"column_end":15},"name":"from_slice","qualname":"::crypto::Public::from_slice","value":"pub fn from_slice(&[u8]) -> Self","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" A new instance from the given slice.","sig":null,"attributes":[{"value":"/ A new instance from the given slice.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40919,"byte_end":40959,"line_start":668,"line_end":668,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40961,"byte_end":40964,"line_start":669,"line_end":669,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40966,"byte_end":41047,"line_start":670,"line_end":670,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41049,"byte_end":41111,"line_start":671,"line_end":671,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41200,"byte_end":41210,"line_start":675,"line_end":675,"column_start":5,"column_end":15},"name":"to_raw_vec","qualname":"::crypto::Public::to_raw_vec","value":"pub fn to_raw_vec(&Self) -> Vec<u8>","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Return a `Vec<u8>` filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a `Vec<u8>` filled with raw data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41151,"byte_end":41195,"line_start":674,"line_end":674,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41305,"byte_end":41313,"line_start":678,"line_end":678,"column_start":5,"column_end":13},"name":"as_slice","qualname":"::crypto::Public::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Return a slice filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a slice filled with raw data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41260,"byte_end":41300,"line_start":677,"line_end":677,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41404,"byte_end":41425,"line_start":680,"line_end":680,"column_start":5,"column_end":26},"name":"to_public_crypto_pair","qualname":"::crypto::Public::to_public_crypto_pair","value":"pub fn to_public_crypto_pair(&Self) -> CryptoTypePublicPair","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Return `CryptoTypePublicPair` from public key.\n","sig":null,"attributes":[{"value":"/ Return `CryptoTypePublicPair` from public key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41349,"byte_end":41399,"line_start":679,"line_end":679,"column_start":2,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2184},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41637,"byte_end":41648,"line_start":686,"line_end":686,"column_start":12,"column_end":23},"name":"AccountId32","qualname":"::crypto::AccountId32","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque 32-byte cryptographic identifier.\n","sig":null,"attributes":[{"value":"/ An opaque 32-byte cryptographic identifier.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41461,"byte_end":41508,"line_start":683,"line_end":683,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41891,"byte_end":41894,"line_start":693,"line_end":693,"column_start":15,"column_end":18},"name":"new","qualname":"<AccountId32>::new","value":"pub const fn new([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from its raw inner byte value.","sig":null,"attributes":[{"value":"/ Create a new instance from its raw inner byte value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41681,"byte_end":41737,"line_start":689,"line_end":689,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41739,"byte_end":41742,"line_start":690,"line_end":690,"column_start":2,"column_end":5}},{"value":"/ Equivalent to this types `From<[u8; 32]>` implementation. For the lack of const","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41744,"byte_end":41827,"line_start":691,"line_end":691,"column_start":2,"column_end":85}},{"value":"/ support in traits we have this constructor.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41829,"byte_end":41876,"line_start":692,"line_end":692,"column_start":2,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2227},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":44939,"byte_end":44944,"line_start":829,"line_end":829,"column_start":13,"column_end":18},"name":"Dummy","qualname":"::crypto::dummy::Dummy","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy cryptography. Doesn't do anything.\n","sig":null,"attributes":[{"value":"/ Dummy cryptography. Doesn't do anything.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":44834,"byte_end":44878,"line_start":827,"line_end":827,"column_start":2,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":303},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":46955,"byte_end":46959,"line_start":900,"line_end":900,"column_start":11,"column_end":15},"name":"Pair","qualname":"::crypto::Pair","value":"Pair: CryptoType + Sized + Clone + Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":330},{"krate":0,"index":332}],"decl_id":null,"docs":" Trait suitable for typical cryptographic PKI key pair type.","sig":null,"attributes":[{"value":"/ Trait suitable for typical cryptographic PKI key pair type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":46760,"byte_end":46823,"line_start":896,"line_end":896,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":46824,"byte_end":46827,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ For now it just specifies how to create a key from a phrase and derivation path.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":46828,"byte_end":46912,"line_start":898,"line_end":898,"column_start":1,"column_end":85}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":46913,"byte_end":46944,"line_start":899,"line_end":899,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":304},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47072,"byte_end":47078,"line_start":902,"line_end":902,"column_start":7,"column_end":13},"name":"Public","qualname":"::crypto::Pair::Public","value":"type Public: Public + Hash;","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" The type which is used to encode a public key.\n","sig":null,"attributes":[{"value":"/ The type which is used to encode a public key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47015,"byte_end":47065,"line_start":901,"line_end":901,"column_start":2,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":305},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47201,"byte_end":47205,"line_start":906,"line_end":906,"column_start":7,"column_end":11},"name":"Seed","qualname":"::crypto::Pair::Seed","value":"type Seed: Default + AsRef<[u8]> + AsMut<[u8]> + Clone;","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" The type used to (minimally) encode the data required to securely create\n a new key pair.\n","sig":null,"attributes":[{"value":"/ The type used to (minimally) encode the data required to securely create","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47097,"byte_end":47173,"line_start":904,"line_end":904,"column_start":2,"column_end":78}},{"value":"/ a new key pair.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47175,"byte_end":47194,"line_start":905,"line_end":905,"column_start":2,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":306},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47402,"byte_end":47411,"line_start":910,"line_end":910,"column_start":7,"column_end":16},"name":"Signature","qualname":"::crypto::Pair::Signature","value":"type Signature: AsRef<[u8]>;","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" The type used to represent a signature. Can be created from a key pair and a message\n and verified with the message and a public key.\n","sig":null,"attributes":[{"value":"/ The type used to represent a signature. Can be created from a key pair and a message","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47254,"byte_end":47342,"line_start":908,"line_end":908,"column_start":2,"column_end":90}},{"value":"/ and verified with the message and a public key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47344,"byte_end":47395,"line_start":909,"line_end":909,"column_start":2,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":307},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47481,"byte_end":47492,"line_start":913,"line_end":913,"column_start":7,"column_end":18},"name":"DeriveError","qualname":"::crypto::Pair::DeriveError","value":"type DeriveError;","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Error returned from the `derive` function.\n","sig":null,"attributes":[{"value":"/ Error returned from the `derive` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47428,"byte_end":47474,"line_start":912,"line_end":912,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47753,"byte_end":47761,"line_start":920,"line_end":920,"column_start":5,"column_end":13},"name":"generate","qualname":"::crypto::Pair::generate","value":"pub fn generate() -> (Self, Self::Seed)","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Generate new secure (random) key pair.","sig":null,"attributes":[{"value":"/ Generate new secure (random) key pair.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47496,"byte_end":47538,"line_start":915,"line_end":915,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47540,"byte_end":47543,"line_start":916,"line_end":916,"column_start":2,"column_end":5}},{"value":"/ This is only for ephemeral keys really, since you won't have access to the secret key","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47545,"byte_end":47634,"line_start":917,"line_end":917,"column_start":2,"column_end":91}},{"value":"/ for storage. If you want a persistent key pair, use `generate_with_phrase` instead.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47636,"byte_end":47723,"line_start":918,"line_end":918,"column_start":2,"column_end":89}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47725,"byte_end":47748,"line_start":919,"line_end":919,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48205,"byte_end":48225,"line_start":933,"line_end":933,"column_start":5,"column_end":25},"name":"generate_with_phrase","qualname":"::crypto::Pair::generate_with_phrase","value":"pub fn generate_with_phrase(Option<&str>) -> (Self, String, Self::Seed)","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Generate new secure (random) key pair and provide the recovery phrase.","sig":null,"attributes":[{"value":"/ Generate new secure (random) key pair and provide the recovery phrase.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47901,"byte_end":47975,"line_start":926,"line_end":926,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47977,"byte_end":47980,"line_start":927,"line_end":927,"column_start":2,"column_end":5}},{"value":"/ You can recover the same key later with `from_phrase`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":47982,"byte_end":48040,"line_start":928,"line_end":928,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48042,"byte_end":48045,"line_start":929,"line_end":929,"column_start":2,"column_end":5}},{"value":"/ This is generally slower than `generate()`, so prefer that unless you need to persist","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48047,"byte_end":48136,"line_start":930,"line_end":930,"column_start":2,"column_end":91}},{"value":"/ the key from the current session.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48138,"byte_end":48175,"line_start":931,"line_end":931,"column_start":2,"column_end":39}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48177,"byte_end":48200,"line_start":932,"line_end":932,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48401,"byte_end":48412,"line_start":937,"line_end":937,"column_start":5,"column_end":16},"name":"from_phrase","qualname":"::crypto::Pair::from_phrase","value":"pub fn from_phrase(&str, Option<&str>)\n-> Result<(Self, Self::Seed), SecretStringError>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns the KeyPair from the English BIP39 seed `phrase`, or `None` if it's invalid.\n","sig":null,"attributes":[{"value":"/ Returns the KeyPair from the English BIP39 seed `phrase`, or `None` if it's invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48283,"byte_end":48371,"line_start":935,"line_end":935,"column_start":2,"column_end":90}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48373,"byte_end":48396,"line_start":936,"line_end":936,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48564,"byte_end":48570,"line_start":940,"line_end":940,"column_start":5,"column_end":11},"name":"derive","qualname":"::crypto::Pair::derive","value":"pub fn derive<Iter: Iterator<Item =\n              DeriveJunction>>(&Self, Iter, Option<Self::Seed>)\n-> Result<(Self, Option<Self::Seed>), Self::DeriveError>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Derive a child key from a series of given junctions.\n","sig":null,"attributes":[{"value":"/ Derive a child key from a series of given junctions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48503,"byte_end":48559,"line_start":939,"line_end":939,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48923,"byte_end":48932,"line_start":949,"line_end":949,"column_start":5,"column_end":14},"name":"from_seed","qualname":"::crypto::Pair::from_seed","value":"pub fn from_seed(&Self::Seed) -> Self","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Generate new key pair from the provided `seed`.","sig":null,"attributes":[{"value":"/ Generate new key pair from the provided `seed`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48720,"byte_end":48771,"line_start":945,"line_end":945,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48773,"byte_end":48776,"line_start":946,"line_end":946,"column_start":2,"column_end":5}},{"value":"/ @WARNING: THIS WILL ONLY BE SECURE IF THE `seed` IS SECURE. If it can be guessed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48778,"byte_end":48862,"line_start":947,"line_end":947,"column_start":2,"column_end":86}},{"value":"/ by an attacker then they can also derive your key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48864,"byte_end":48918,"line_start":948,"line_end":948,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49231,"byte_end":49246,"line_start":956,"line_end":956,"column_start":5,"column_end":20},"name":"from_seed_slice","qualname":"::crypto::Pair::from_seed_slice","value":"pub fn from_seed_slice(&[u8]) -> Result<Self, SecretStringError>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Make a new key pair from secret seed material. The slice must be the correct size or\n it will return `None`.","sig":null,"attributes":[{"value":"/ Make a new key pair from secret seed material. The slice must be the correct size or","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":48963,"byte_end":49051,"line_start":951,"line_end":951,"column_start":2,"column_end":90}},{"value":"/ it will return `None`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49053,"byte_end":49079,"line_start":952,"line_end":952,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49081,"byte_end":49084,"line_start":953,"line_end":953,"column_start":2,"column_end":5}},{"value":"/ @WARNING: THIS WILL ONLY BE SECURE IF THE `seed` IS SECURE. If it can be guessed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49086,"byte_end":49170,"line_start":954,"line_end":954,"column_start":2,"column_end":86}},{"value":"/ by an attacker then they can also derive your key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49172,"byte_end":49226,"line_start":955,"line_end":955,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49322,"byte_end":49326,"line_start":959,"line_end":959,"column_start":5,"column_end":9},"name":"sign","qualname":"::crypto::Pair::sign","value":"pub fn sign(&Self, &[u8]) -> Self::Signature","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Sign a message.\n","sig":null,"attributes":[{"value":"/ Sign a message.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49298,"byte_end":49317,"line_start":958,"line_end":958,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49452,"byte_end":49458,"line_start":962,"line_end":962,"column_start":5,"column_end":11},"name":"verify","qualname":"::crypto::Pair::verify","value":"pub fn verify<M: AsRef<[u8]>>(&Self::Signature, M, &Self::Public) -> bool","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Verify a signature on a message. Returns true if the signature is good.\n","sig":null,"attributes":[{"value":"/ Verify a signature on a message. Returns true if the signature is good.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49372,"byte_end":49447,"line_start":961,"line_end":961,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49624,"byte_end":49635,"line_start":965,"line_end":965,"column_start":5,"column_end":16},"name":"verify_weak","qualname":"::crypto::Pair::verify_weak","value":"pub fn verify_weak<P: AsRef<[u8]>, M: AsRef<[u8]>>(&[u8], M, P) -> bool","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Verify a signature on a message. Returns true if the signature is good.\n","sig":null,"attributes":[{"value":"/ Verify a signature on a message. Returns true if the signature is good.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49544,"byte_end":49619,"line_start":964,"line_end":964,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49742,"byte_end":49748,"line_start":968,"line_end":968,"column_start":5,"column_end":11},"name":"public","qualname":"::crypto::Pair::public","value":"pub fn public(&Self) -> Self::Public","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Get the public key.\n","sig":null,"attributes":[{"value":"/ Get the public key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49714,"byte_end":49737,"line_start":967,"line_end":967,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":51532,"byte_end":51553,"line_start":999,"line_end":999,"column_start":5,"column_end":26},"name":"from_string_with_seed","qualname":"::crypto::Pair::from_string_with_seed","value":"pub fn from_string_with_seed(&str, Option<&str>)\n-> Result<(Self, Option<Self::Seed>), SecretStringError>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Interprets the string `s` in order to generate a key Pair. Returns both the pair and an optional seed, in the\n case that the pair can be expressed as a direct derivation from a seed (some cases, such as Sr25519 derivations\n with path components, cannot).","sig":null,"attributes":[{"value":"/ Interprets the string `s` in order to generate a key Pair. Returns both the pair and an optional seed, in the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49775,"byte_end":49888,"line_start":970,"line_end":970,"column_start":2,"column_end":115}},{"value":"/ case that the pair can be expressed as a direct derivation from a seed (some cases, such as Sr25519 derivations","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":49890,"byte_end":50005,"line_start":971,"line_end":971,"column_start":2,"column_end":117}},{"value":"/ with path components, cannot).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50007,"byte_end":50041,"line_start":972,"line_end":972,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50043,"byte_end":50046,"line_start":973,"line_end":973,"column_start":2,"column_end":5}},{"value":"/ This takes a helper function to do the key generation from a phrase, password and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50048,"byte_end":50133,"line_start":974,"line_end":974,"column_start":2,"column_end":87}},{"value":"/ junction iterator.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50135,"byte_end":50157,"line_start":975,"line_end":975,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50159,"byte_end":50162,"line_start":976,"line_end":976,"column_start":2,"column_end":5}},{"value":"/ - If `s` is a possibly `0x` prefixed 64-digit hex string, then it will be interpreted","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50164,"byte_end":50253,"line_start":977,"line_end":977,"column_start":2,"column_end":91}},{"value":"/ directly as a `MiniSecretKey` (aka \"seed\" in `subkey`).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50255,"byte_end":50314,"line_start":978,"line_end":978,"column_start":2,"column_end":61}},{"value":"/ - If `s` is a valid BIP-39 key phrase of 12, 15, 18, 21 or 24 words, then the key will","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50316,"byte_end":50406,"line_start":979,"line_end":979,"column_start":2,"column_end":92}},{"value":"/ be derived from it. In this case:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50408,"byte_end":50445,"line_start":980,"line_end":980,"column_start":2,"column_end":39}},{"value":"/   - the phrase may be followed by one or more items delimited by `/` characters.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50447,"byte_end":50531,"line_start":981,"line_end":981,"column_start":2,"column_end":86}},{"value":"/   - the path may be followed by `///`, in which case everything after the `///` is treated","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50533,"byte_end":50627,"line_start":982,"line_end":982,"column_start":2,"column_end":96}},{"value":"/ as a password.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50629,"byte_end":50647,"line_start":983,"line_end":983,"column_start":2,"column_end":20}},{"value":"/ - If `s` begins with a `/` character it is prefixed with the Substrate public `DEV_PHRASE` and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50649,"byte_end":50747,"line_start":984,"line_end":984,"column_start":2,"column_end":100}},{"value":"/ interpreted as above.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50749,"byte_end":50774,"line_start":985,"line_end":985,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50776,"byte_end":50779,"line_start":986,"line_end":986,"column_start":2,"column_end":5}},{"value":"/ In this case they are interpreted as HDKD junctions; purely numeric items are interpreted as","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50781,"byte_end":50877,"line_start":987,"line_end":987,"column_start":2,"column_end":98}},{"value":"/ integers, non-numeric items as strings. Junctions prefixed with `/` are interpreted as soft","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50879,"byte_end":50974,"line_start":988,"line_end":988,"column_start":2,"column_end":97}},{"value":"/ junctions, and with `//` as hard junctions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":50976,"byte_end":51023,"line_start":989,"line_end":989,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":51025,"byte_end":51028,"line_start":990,"line_end":990,"column_start":2,"column_end":5}},{"value":"/ There is no correspondence mapping between SURI strings and the keys they represent.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":51030,"byte_end":51118,"line_start":991,"line_end":991,"column_start":2,"column_end":90}},{"value":"/ Two different non-identical strings can actually lead to the same secret being derived.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":51120,"byte_end":51211,"line_start":992,"line_end":992,"column_start":2,"column_end":93}},{"value":"/ Notably, integer junction indices may be legally prefixed with arbitrary number of zeros.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":51213,"byte_end":51306,"line_start":993,"line_end":993,"column_start":2,"column_end":95}},{"value":"/ Similarly an empty password (ending the SURI with `///`) is perfectly valid and will generally","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":51308,"byte_end":51406,"line_start":994,"line_end":994,"column_start":2,"column_end":100}},{"value":"/ be equivalent to no password at all.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":51408,"byte_end":51448,"line_start":995,"line_end":995,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":51450,"byte_end":51453,"line_start":996,"line_end":996,"column_start":2,"column_end":5}},{"value":"/ `None` is returned if no matches are found.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":51455,"byte_end":51502,"line_start":997,"line_end":997,"column_start":2,"column_end":49}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":51504,"byte_end":51527,"line_start":998,"line_end":998,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53012,"byte_end":53023,"line_start":1037,"line_end":1037,"column_start":5,"column_end":16},"name":"from_string","qualname":"::crypto::Pair::from_string","value":"pub fn from_string(&str, Option<&str>) -> Result<Self, SecretStringError>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Interprets the string `s` in order to generate a key pair.","sig":null,"attributes":[{"value":"/ Interprets the string `s` in order to generate a key pair.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":52817,"byte_end":52879,"line_start":1033,"line_end":1033,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":52881,"byte_end":52884,"line_start":1034,"line_end":1034,"column_start":2,"column_end":5}},{"value":"/ See [`from_string_with_seed`](Pair::from_string_with_seed) for more extensive documentation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":52886,"byte_end":52982,"line_start":1035,"line_end":1035,"column_start":2,"column_end":98}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":52984,"byte_end":53007,"line_start":1036,"line_end":1036,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53216,"byte_end":53226,"line_start":1042,"line_end":1042,"column_start":5,"column_end":15},"name":"to_raw_vec","qualname":"::crypto::Pair::to_raw_vec","value":"pub fn to_raw_vec(&Self) -> Vec<u8>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Return a vec filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a vec filled with raw data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53173,"byte_end":53211,"line_start":1041,"line_end":1041,"column_start":2,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":333},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53295,"byte_end":53306,"line_start":1046,"line_end":1046,"column_start":11,"column_end":22},"name":"IsWrappedBy","qualname":"::crypto::IsWrappedBy","value":"IsWrappedBy<Outer>: From<Outer> + Into<Outer>","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"decl_id":null,"docs":" One type is wrapped by another.\n","sig":null,"attributes":[{"value":"/ One type is wrapped by another.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53249,"byte_end":53284,"line_start":1045,"line_end":1045,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53397,"byte_end":53405,"line_start":1048,"line_end":1048,"column_start":5,"column_end":13},"name":"from_ref","qualname":"::crypto::IsWrappedBy::from_ref","value":"pub fn from_ref(&Outer) -> &Self","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Get a reference to the inner from the outer.\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner from the outer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53344,"byte_end":53392,"line_start":1047,"line_end":1047,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53493,"byte_end":53501,"line_start":1050,"line_end":1050,"column_start":5,"column_end":13},"name":"from_mut","qualname":"::crypto::IsWrappedBy::from_mut","value":"pub fn from_mut(&mut Outer) -> &mut Self","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner from the outer.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner from the outer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53432,"byte_end":53488,"line_start":1049,"line_end":1049,"column_start":2,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":337},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53642,"byte_end":53647,"line_start":1054,"line_end":1054,"column_start":11,"column_end":16},"name":"Wraps","qualname":"::crypto::Wraps","value":"Wraps: Sized","parent":null,"children":[{"krate":0,"index":338}],"decl_id":null,"docs":" Opposite of `IsWrappedBy` - denotes a type which is a simple wrapper around another type.\n","sig":null,"attributes":[{"value":"/ Opposite of `IsWrappedBy` - denotes a type which is a simple wrapper around another type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53538,"byte_end":53631,"line_start":1053,"line_end":1053,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":338},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53699,"byte_end":53704,"line_start":1056,"line_end":1056,"column_start":7,"column_end":12},"name":"Inner","qualname":"::crypto::Wraps::Inner","value":"type Inner: IsWrappedBy<Self>;","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" The inner type it is wrapping.\n","sig":null,"attributes":[{"value":"/ The inner type it is wrapping.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53658,"byte_end":53692,"line_start":1055,"line_end":1055,"column_start":2,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":349},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54379,"byte_end":54389,"line_start":1081,"line_end":1081,"column_start":11,"column_end":21},"name":"CryptoType","qualname":"::crypto::CryptoType","value":"CryptoType","parent":null,"children":[{"krate":0,"index":350}],"decl_id":null,"docs":" Type which has a particular kind of crypto associated with it.\n","sig":null,"attributes":[{"value":"/ Type which has a particular kind of crypto associated with it.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54302,"byte_end":54368,"line_start":1080,"line_end":1080,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":350},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54470,"byte_end":54474,"line_start":1084,"line_end":1084,"column_start":7,"column_end":11},"name":"Pair","qualname":"::crypto::CryptoType::Pair","value":"type Pair: Pair;","parent":{"krate":0,"index":349},"children":[],"decl_id":null,"docs":" The pair key type of this crypto.\n","sig":null,"attributes":[{"value":"/ The pair key type of this crypto.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54393,"byte_end":54430,"line_start":1082,"line_end":1082,"column_start":2,"column_end":39}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54432,"byte_end":54463,"line_start":1083,"line_end":1083,"column_start":2,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2242},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":55014,"byte_end":55023,"line_start":1099,"line_end":1099,"column_start":12,"column_end":21},"name":"KeyTypeId","qualname":"::crypto::KeyTypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for a type of cryptographic key.","sig":null,"attributes":[{"value":"/ An identifier for a type of cryptographic key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54485,"byte_end":54535,"line_start":1087,"line_end":1087,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54536,"byte_end":54539,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ To avoid clashes with other modules when distributing your module publicly, register your","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54540,"byte_end":54633,"line_start":1089,"line_end":1089,"column_start":1,"column_end":94}},{"value":"/ `KeyTypeId` on the list here by making a PR.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54634,"byte_end":54682,"line_start":1090,"line_end":1090,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54683,"byte_end":54686,"line_start":1091,"line_end":1091,"column_start":1,"column_end":4}},{"value":"/ Values whose first character is `_` are reserved for private use and won't conflict with any","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54687,"byte_end":54783,"line_start":1092,"line_end":1092,"column_start":1,"column_end":97}},{"value":"/ public modules.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54784,"byte_end":54803,"line_start":1093,"line_end":1093,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2244},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":55024,"byte_end":55035,"line_start":1099,"line_end":1099,"column_start":22,"column_end":33},"name":"0","qualname":"::crypto::KeyTypeId::0","value":"[u8; 4]","parent":{"krate":0,"index":2242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2328},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":55742,"byte_end":55754,"line_start":1130,"line_end":1130,"column_start":12,"column_end":24},"name":"CryptoTypeId","qualname":"::crypto::CryptoTypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for a specific cryptographic algorithm used by a key pair\n","sig":null,"attributes":[{"value":"/ An identifier for a specific cryptographic algorithm used by a key pair","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":55487,"byte_end":55562,"line_start":1127,"line_end":1127,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2330},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":55755,"byte_end":55766,"line_start":1130,"line_end":1130,"column_start":25,"column_end":36},"name":"0","qualname":"::crypto::CryptoTypeId::0","value":"[u8; 4]","parent":{"krate":0,"index":2328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2403},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":55991,"byte_end":56011,"line_start":1135,"line_end":1135,"column_start":12,"column_end":32},"name":"CryptoTypePublicPair","qualname":"::crypto::CryptoTypePublicPair","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type alias of CryptoTypeId & a public key\n","sig":null,"attributes":[{"value":"/ A type alias of CryptoTypeId & a public key","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":55770,"byte_end":55817,"line_start":1132,"line_end":1132,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2405},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56012,"byte_end":56028,"line_start":1135,"line_end":1135,"column_start":33,"column_end":49},"name":"0","qualname":"::crypto::CryptoTypePublicPair::0","value":"crypto::CryptoTypeId","parent":{"krate":0,"index":2403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2406},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56030,"byte_end":56041,"line_start":1135,"line_end":1135,"column_start":51,"column_end":62},"name":"1","qualname":"::crypto::CryptoTypePublicPair::1","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":361},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56672,"byte_end":56681,"line_start":1155,"line_end":1155,"column_start":9,"column_end":18},"name":"key_types","qualname":"::crypto::key_types","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":3963},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"decl_id":null,"docs":" Known key types; this also functions as a global registry of key types for projects wishing to\n avoid collisions with each other.","sig":null,"attributes":[{"value":"/ Known key types; this also functions as a global registry of key types for projects wishing to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56386,"byte_end":56484,"line_start":1150,"line_end":1150,"column_start":1,"column_end":99}},{"value":"/ avoid collisions with each other.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56485,"byte_end":56522,"line_start":1151,"line_end":1151,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56523,"byte_end":56526,"line_start":1152,"line_end":1152,"column_start":1,"column_end":4}},{"value":"/ It's not universal in the sense that *all* key types need to be mentioned here, it's just a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56527,"byte_end":56622,"line_start":1153,"line_end":1153,"column_start":1,"column_end":96}},{"value":"/ handy place to put common key types.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56623,"byte_end":56663,"line_start":1154,"line_end":1154,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":363},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56782,"byte_end":56786,"line_start":1159,"line_end":1159,"column_start":12,"column_end":16},"name":"BABE","qualname":"::crypto::key_types::BABE","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for Babe module, built-in. Identified as `babe`.\n","sig":null,"attributes":[{"value":"/ Key type for Babe module, built-in. Identified as `babe`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56709,"byte_end":56770,"line_start":1158,"line_end":1158,"column_start":2,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":364},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56898,"byte_end":56905,"line_start":1161,"line_end":1161,"column_start":12,"column_end":19},"name":"GRANDPA","qualname":"::crypto::key_types::GRANDPA","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for Grandpa module, built-in. Identified as `gran`.\n","sig":null,"attributes":[{"value":"/ Key type for Grandpa module, built-in. Identified as `gran`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56822,"byte_end":56886,"line_start":1160,"line_end":1160,"column_start":2,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":365},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57048,"byte_end":57055,"line_start":1163,"line_end":1163,"column_start":12,"column_end":19},"name":"ACCOUNT","qualname":"::crypto::key_types::ACCOUNT","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for controlling an account in a Substrate runtime, built-in. Identified as `acco`.\n","sig":null,"attributes":[{"value":"/ Key type for controlling an account in a Substrate runtime, built-in. Identified as `acco`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56941,"byte_end":57036,"line_start":1162,"line_end":1162,"column_start":2,"column_end":97}}]},{"kind":"Const","id":{"krate":0,"index":366},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57164,"byte_end":57168,"line_start":1165,"line_end":1165,"column_start":12,"column_end":16},"name":"AURA","qualname":"::crypto::key_types::AURA","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for Aura module, built-in. Identified as `aura`.\n","sig":null,"attributes":[{"value":"/ Key type for Aura module, built-in. Identified as `aura`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57091,"byte_end":57152,"line_start":1164,"line_end":1164,"column_start":2,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":367},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57281,"byte_end":57290,"line_start":1167,"line_end":1167,"column_start":12,"column_end":21},"name":"IM_ONLINE","qualname":"::crypto::key_types::IM_ONLINE","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for ImOnline module, built-in. Identified as `imon`.\n","sig":null,"attributes":[{"value":"/ Key type for ImOnline module, built-in. Identified as `imon`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57204,"byte_end":57269,"line_start":1166,"line_end":1166,"column_start":2,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":368},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57413,"byte_end":57432,"line_start":1169,"line_end":1169,"column_start":12,"column_end":31},"name":"AUTHORITY_DISCOVERY","qualname":"::crypto::key_types::AUTHORITY_DISCOVERY","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for AuthorityDiscovery module, built-in. Identified as `audi`.\n","sig":null,"attributes":[{"value":"/ Key type for AuthorityDiscovery module, built-in. Identified as `audi`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57326,"byte_end":57401,"line_start":1168,"line_end":1168,"column_start":2,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":369},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57537,"byte_end":57544,"line_start":1171,"line_end":1171,"column_start":12,"column_end":19},"name":"STAKING","qualname":"::crypto::key_types::STAKING","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for staking, built-in. Identified as `stak`.\n","sig":null,"attributes":[{"value":"/ Key type for staking, built-in. Identified as `stak`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57468,"byte_end":57525,"line_start":1170,"line_end":1170,"column_start":2,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":370},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57664,"byte_end":57673,"line_start":1173,"line_end":1173,"column_start":12,"column_end":21},"name":"REPORTING","qualname":"::crypto::key_types::REPORTING","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for equivocation reporting, built-in. Identified as `fish`.\n","sig":null,"attributes":[{"value":"/ Key type for equivocation reporting, built-in. Identified as `fish`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57580,"byte_end":57652,"line_start":1172,"line_end":1172,"column_start":2,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":371},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57756,"byte_end":57761,"line_start":1175,"line_end":1175,"column_start":12,"column_end":17},"name":"DUMMY","qualname":"::crypto::key_types::DUMMY","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" A key type ID useful for tests.\n","sig":null,"attributes":[{"value":"/ A key type ID useful for tests.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":57709,"byte_end":57744,"line_start":1174,"line_end":1174,"column_start":2,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":372},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"u32_trait","qualname":"::u32_trait","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":809}],"decl_id":null,"docs":" An u32 trait with \"values\" as impl'd types.\n","sig":null,"attributes":[{"value":"/ An u32 trait with \"values\" as impl'd types.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65169,"byte_end":65216,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":373},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65306,"byte_end":65311,"line_start":21,"line_end":21,"column_start":11,"column_end":16},"name":"Value","qualname":"::u32_trait::Value","value":"Value","parent":null,"children":[{"krate":0,"index":374}],"decl_id":null,"docs":" A u32 value, wrapped in a trait because we don't yet have const generics.\n","sig":null,"attributes":[{"value":"/ A u32 value, wrapped in a trait because we don't yet have const generics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65218,"byte_end":65295,"line_start":20,"line_end":20,"column_start":1,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":374},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65377,"byte_end":65382,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"VALUE","qualname":"::u32_trait::Value::VALUE","value":"u32","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" The actual value represented by the impl'ing type.\n","sig":null,"attributes":[{"value":"/ The actual value represented by the impl'ing type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65315,"byte_end":65369,"line_start":22,"line_end":22,"column_start":2,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":375},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65460,"byte_end":65462,"line_start":27,"line_end":27,"column_start":12,"column_end":14},"name":"_0","qualname":"::u32_trait::_0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 0 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 0 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65392,"byte_end":65448,"line_start":26,"line_end":26,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":379},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65576,"byte_end":65578,"line_start":29,"line_end":29,"column_start":12,"column_end":14},"name":"_1","qualname":"::u32_trait::_1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 1 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 1 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65508,"byte_end":65564,"line_start":28,"line_end":28,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":383},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65692,"byte_end":65694,"line_start":31,"line_end":31,"column_start":12,"column_end":14},"name":"_2","qualname":"::u32_trait::_2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 2 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 2 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65624,"byte_end":65680,"line_start":30,"line_end":30,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65808,"byte_end":65810,"line_start":33,"line_end":33,"column_start":12,"column_end":14},"name":"_3","qualname":"::u32_trait::_3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 3 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 3 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65740,"byte_end":65796,"line_start":32,"line_end":32,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":391},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65924,"byte_end":65926,"line_start":35,"line_end":35,"column_start":12,"column_end":14},"name":"_4","qualname":"::u32_trait::_4","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 4 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 4 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65856,"byte_end":65912,"line_start":34,"line_end":34,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":395},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66040,"byte_end":66042,"line_start":37,"line_end":37,"column_start":12,"column_end":14},"name":"_5","qualname":"::u32_trait::_5","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 5 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 5 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65972,"byte_end":66028,"line_start":36,"line_end":36,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":399},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66156,"byte_end":66158,"line_start":39,"line_end":39,"column_start":12,"column_end":14},"name":"_6","qualname":"::u32_trait::_6","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 6 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 6 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66088,"byte_end":66144,"line_start":38,"line_end":38,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":403},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66272,"byte_end":66274,"line_start":41,"line_end":41,"column_start":12,"column_end":14},"name":"_7","qualname":"::u32_trait::_7","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 7 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 7 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66204,"byte_end":66260,"line_start":40,"line_end":40,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66388,"byte_end":66390,"line_start":43,"line_end":43,"column_start":12,"column_end":14},"name":"_8","qualname":"::u32_trait::_8","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 8 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 8 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66320,"byte_end":66376,"line_start":42,"line_end":42,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":411},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66504,"byte_end":66506,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"_9","qualname":"::u32_trait::_9","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 9 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 9 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66436,"byte_end":66492,"line_start":44,"line_end":44,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":415},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66621,"byte_end":66624,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"_10","qualname":"::u32_trait::_10","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 10 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 10 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66552,"byte_end":66609,"line_start":46,"line_end":46,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":419},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66741,"byte_end":66744,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"_11","qualname":"::u32_trait::_11","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 11 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 11 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66672,"byte_end":66729,"line_start":48,"line_end":48,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":423},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66861,"byte_end":66864,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"_12","qualname":"::u32_trait::_12","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 12 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 12 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66792,"byte_end":66849,"line_start":50,"line_end":50,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":427},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66981,"byte_end":66984,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"_13","qualname":"::u32_trait::_13","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 13 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 13 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66912,"byte_end":66969,"line_start":52,"line_end":52,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":431},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67101,"byte_end":67104,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"_14","qualname":"::u32_trait::_14","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 14 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 14 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67032,"byte_end":67089,"line_start":54,"line_end":54,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":435},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67221,"byte_end":67224,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"_15","qualname":"::u32_trait::_15","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 15 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 15 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67152,"byte_end":67209,"line_start":56,"line_end":56,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":439},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67341,"byte_end":67344,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"_16","qualname":"::u32_trait::_16","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 16 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 16 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67272,"byte_end":67329,"line_start":58,"line_end":58,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67461,"byte_end":67464,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"_17","qualname":"::u32_trait::_17","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 17 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 17 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67392,"byte_end":67449,"line_start":60,"line_end":60,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":447},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67581,"byte_end":67584,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"_18","qualname":"::u32_trait::_18","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 18 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 18 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67512,"byte_end":67569,"line_start":62,"line_end":62,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":451},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67701,"byte_end":67704,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"_19","qualname":"::u32_trait::_19","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 19 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 19 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67632,"byte_end":67689,"line_start":64,"line_end":64,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":455},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67821,"byte_end":67824,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"_20","qualname":"::u32_trait::_20","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 20 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 20 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67752,"byte_end":67809,"line_start":66,"line_end":66,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":459},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67941,"byte_end":67944,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"_21","qualname":"::u32_trait::_21","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 21 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 21 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67872,"byte_end":67929,"line_start":68,"line_end":68,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":463},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68061,"byte_end":68064,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"_22","qualname":"::u32_trait::_22","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 22 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 22 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67992,"byte_end":68049,"line_start":70,"line_end":70,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":467},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68181,"byte_end":68184,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"_23","qualname":"::u32_trait::_23","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 23 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 23 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68112,"byte_end":68169,"line_start":72,"line_end":72,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":471},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68301,"byte_end":68304,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"_24","qualname":"::u32_trait::_24","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 24 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 24 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68232,"byte_end":68289,"line_start":74,"line_end":74,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":475},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68421,"byte_end":68424,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"_25","qualname":"::u32_trait::_25","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 25 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 25 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68352,"byte_end":68409,"line_start":76,"line_end":76,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68541,"byte_end":68544,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"_26","qualname":"::u32_trait::_26","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 26 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 26 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68472,"byte_end":68529,"line_start":78,"line_end":78,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":483},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68661,"byte_end":68664,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"_27","qualname":"::u32_trait::_27","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 27 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 27 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68592,"byte_end":68649,"line_start":80,"line_end":80,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":487},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68781,"byte_end":68784,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"_28","qualname":"::u32_trait::_28","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 28 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 28 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68712,"byte_end":68769,"line_start":82,"line_end":82,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":491},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68901,"byte_end":68904,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"_29","qualname":"::u32_trait::_29","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 29 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 29 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68832,"byte_end":68889,"line_start":84,"line_end":84,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":495},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69021,"byte_end":69024,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"_30","qualname":"::u32_trait::_30","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 30 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 30 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68952,"byte_end":69009,"line_start":86,"line_end":86,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":499},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69141,"byte_end":69144,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"_31","qualname":"::u32_trait::_31","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 31 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 31 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69072,"byte_end":69129,"line_start":88,"line_end":88,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":503},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69261,"byte_end":69264,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"_32","qualname":"::u32_trait::_32","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 32 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 32 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69192,"byte_end":69249,"line_start":90,"line_end":90,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":507},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69381,"byte_end":69384,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"_33","qualname":"::u32_trait::_33","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 33 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 33 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69312,"byte_end":69369,"line_start":92,"line_end":92,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69501,"byte_end":69504,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"_34","qualname":"::u32_trait::_34","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 34 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 34 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69432,"byte_end":69489,"line_start":94,"line_end":94,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":515},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69621,"byte_end":69624,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"_35","qualname":"::u32_trait::_35","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 35 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 35 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69552,"byte_end":69609,"line_start":96,"line_end":96,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":519},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69741,"byte_end":69744,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"_36","qualname":"::u32_trait::_36","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 36 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 36 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69672,"byte_end":69729,"line_start":98,"line_end":98,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":523},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69861,"byte_end":69864,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"_37","qualname":"::u32_trait::_37","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 37 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 37 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69792,"byte_end":69849,"line_start":100,"line_end":100,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":527},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69981,"byte_end":69984,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"_38","qualname":"::u32_trait::_38","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 38 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 38 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69912,"byte_end":69969,"line_start":102,"line_end":102,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":531},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70101,"byte_end":70104,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"_39","qualname":"::u32_trait::_39","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 39 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 39 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70032,"byte_end":70089,"line_start":104,"line_end":104,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":535},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70221,"byte_end":70224,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"_40","qualname":"::u32_trait::_40","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 40 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 40 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70152,"byte_end":70209,"line_start":106,"line_end":106,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":539},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70341,"byte_end":70344,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"_41","qualname":"::u32_trait::_41","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 41 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 41 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70272,"byte_end":70329,"line_start":108,"line_end":108,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":543},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70461,"byte_end":70464,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"_42","qualname":"::u32_trait::_42","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 42 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 42 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70392,"byte_end":70449,"line_start":110,"line_end":110,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70581,"byte_end":70584,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"_43","qualname":"::u32_trait::_43","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 43 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 43 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70512,"byte_end":70569,"line_start":112,"line_end":112,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":551},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70701,"byte_end":70704,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"_44","qualname":"::u32_trait::_44","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 44 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 44 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70632,"byte_end":70689,"line_start":114,"line_end":114,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":555},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70821,"byte_end":70824,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"_45","qualname":"::u32_trait::_45","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 45 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 45 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70752,"byte_end":70809,"line_start":116,"line_end":116,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":559},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70941,"byte_end":70944,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"_46","qualname":"::u32_trait::_46","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 46 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 46 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70872,"byte_end":70929,"line_start":118,"line_end":118,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":563},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71061,"byte_end":71064,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"_47","qualname":"::u32_trait::_47","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 47 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 47 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70992,"byte_end":71049,"line_start":120,"line_end":120,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":567},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71181,"byte_end":71184,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"_48","qualname":"::u32_trait::_48","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 48 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 48 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71112,"byte_end":71169,"line_start":122,"line_end":122,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":571},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71301,"byte_end":71304,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"_49","qualname":"::u32_trait::_49","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 49 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 49 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71232,"byte_end":71289,"line_start":124,"line_end":124,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":575},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71421,"byte_end":71424,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"_50","qualname":"::u32_trait::_50","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 50 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 50 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71352,"byte_end":71409,"line_start":126,"line_end":126,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":579},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71541,"byte_end":71544,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"_51","qualname":"::u32_trait::_51","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 51 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 51 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71472,"byte_end":71529,"line_start":128,"line_end":128,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":583},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71661,"byte_end":71664,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"_52","qualname":"::u32_trait::_52","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 52 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 52 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71592,"byte_end":71649,"line_start":130,"line_end":130,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":587},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71781,"byte_end":71784,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"_53","qualname":"::u32_trait::_53","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 53 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 53 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71712,"byte_end":71769,"line_start":132,"line_end":132,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":591},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71901,"byte_end":71904,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"_54","qualname":"::u32_trait::_54","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 54 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 54 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71832,"byte_end":71889,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":595},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72021,"byte_end":72024,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"_55","qualname":"::u32_trait::_55","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 55 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 55 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71952,"byte_end":72009,"line_start":136,"line_end":136,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72141,"byte_end":72144,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"_56","qualname":"::u32_trait::_56","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 56 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 56 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72072,"byte_end":72129,"line_start":138,"line_end":138,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":603},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72261,"byte_end":72264,"line_start":141,"line_end":141,"column_start":12,"column_end":15},"name":"_57","qualname":"::u32_trait::_57","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 57 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 57 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72192,"byte_end":72249,"line_start":140,"line_end":140,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72381,"byte_end":72384,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"_58","qualname":"::u32_trait::_58","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 58 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 58 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72312,"byte_end":72369,"line_start":142,"line_end":142,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72501,"byte_end":72504,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"_59","qualname":"::u32_trait::_59","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 59 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 59 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72432,"byte_end":72489,"line_start":144,"line_end":144,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":615},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72621,"byte_end":72624,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"_60","qualname":"::u32_trait::_60","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 60 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 60 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72552,"byte_end":72609,"line_start":146,"line_end":146,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":619},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72741,"byte_end":72744,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"_61","qualname":"::u32_trait::_61","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 61 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 61 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72672,"byte_end":72729,"line_start":148,"line_end":148,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":623},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72861,"byte_end":72864,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"_62","qualname":"::u32_trait::_62","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 62 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 62 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72792,"byte_end":72849,"line_start":150,"line_end":150,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":627},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72981,"byte_end":72984,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"_63","qualname":"::u32_trait::_63","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 63 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 63 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72912,"byte_end":72969,"line_start":152,"line_end":152,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":631},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73101,"byte_end":73104,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"_64","qualname":"::u32_trait::_64","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 64 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 64 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73032,"byte_end":73089,"line_start":154,"line_end":154,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":635},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73221,"byte_end":73224,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"_65","qualname":"::u32_trait::_65","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 65 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 65 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73152,"byte_end":73209,"line_start":156,"line_end":156,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":639},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73341,"byte_end":73344,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"_66","qualname":"::u32_trait::_66","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 66 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 66 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73272,"byte_end":73329,"line_start":158,"line_end":158,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":643},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73461,"byte_end":73464,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"_67","qualname":"::u32_trait::_67","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 67 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 67 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73392,"byte_end":73449,"line_start":160,"line_end":160,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":647},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73581,"byte_end":73584,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"_68","qualname":"::u32_trait::_68","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 68 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 68 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73512,"byte_end":73569,"line_start":162,"line_end":162,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":651},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73701,"byte_end":73704,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"_69","qualname":"::u32_trait::_69","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 69 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 69 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73632,"byte_end":73689,"line_start":164,"line_end":164,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":655},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73821,"byte_end":73824,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"_70","qualname":"::u32_trait::_70","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 70 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 70 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73752,"byte_end":73809,"line_start":166,"line_end":166,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":659},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73941,"byte_end":73944,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"_71","qualname":"::u32_trait::_71","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 71 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 71 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73872,"byte_end":73929,"line_start":168,"line_end":168,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":663},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74061,"byte_end":74064,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"_72","qualname":"::u32_trait::_72","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 72 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 72 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73992,"byte_end":74049,"line_start":170,"line_end":170,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":667},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74181,"byte_end":74184,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"_73","qualname":"::u32_trait::_73","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 73 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 73 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74112,"byte_end":74169,"line_start":172,"line_end":172,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":671},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74301,"byte_end":74304,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"_74","qualname":"::u32_trait::_74","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 74 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 74 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74232,"byte_end":74289,"line_start":174,"line_end":174,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":675},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74421,"byte_end":74424,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"_75","qualname":"::u32_trait::_75","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 75 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 75 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74352,"byte_end":74409,"line_start":176,"line_end":176,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":679},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74541,"byte_end":74544,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"_76","qualname":"::u32_trait::_76","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 76 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 76 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74472,"byte_end":74529,"line_start":178,"line_end":178,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":683},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74661,"byte_end":74664,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"_77","qualname":"::u32_trait::_77","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 77 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 77 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74592,"byte_end":74649,"line_start":180,"line_end":180,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":687},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74781,"byte_end":74784,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"_78","qualname":"::u32_trait::_78","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 78 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 78 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74712,"byte_end":74769,"line_start":182,"line_end":182,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74901,"byte_end":74904,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"name":"_79","qualname":"::u32_trait::_79","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 79 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 79 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74832,"byte_end":74889,"line_start":184,"line_end":184,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":695},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75021,"byte_end":75024,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"_80","qualname":"::u32_trait::_80","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 80 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 80 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74952,"byte_end":75009,"line_start":186,"line_end":186,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":699},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75141,"byte_end":75144,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"_81","qualname":"::u32_trait::_81","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 81 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 81 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75072,"byte_end":75129,"line_start":188,"line_end":188,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":703},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75261,"byte_end":75264,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"_82","qualname":"::u32_trait::_82","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 82 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 82 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75192,"byte_end":75249,"line_start":190,"line_end":190,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":707},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75381,"byte_end":75384,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"_83","qualname":"::u32_trait::_83","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 83 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 83 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75312,"byte_end":75369,"line_start":192,"line_end":192,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":711},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75501,"byte_end":75504,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"_84","qualname":"::u32_trait::_84","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 84 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 84 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75432,"byte_end":75489,"line_start":194,"line_end":194,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":715},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75621,"byte_end":75624,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"_85","qualname":"::u32_trait::_85","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 85 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 85 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75552,"byte_end":75609,"line_start":196,"line_end":196,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75741,"byte_end":75744,"line_start":199,"line_end":199,"column_start":12,"column_end":15},"name":"_86","qualname":"::u32_trait::_86","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 86 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 86 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75672,"byte_end":75729,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":723},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75861,"byte_end":75864,"line_start":201,"line_end":201,"column_start":12,"column_end":15},"name":"_87","qualname":"::u32_trait::_87","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 87 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 87 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75792,"byte_end":75849,"line_start":200,"line_end":200,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":727},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75981,"byte_end":75984,"line_start":203,"line_end":203,"column_start":12,"column_end":15},"name":"_88","qualname":"::u32_trait::_88","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 88 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 88 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75912,"byte_end":75969,"line_start":202,"line_end":202,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":731},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76101,"byte_end":76104,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"_89","qualname":"::u32_trait::_89","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 89 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 89 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76032,"byte_end":76089,"line_start":204,"line_end":204,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":735},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76221,"byte_end":76224,"line_start":207,"line_end":207,"column_start":12,"column_end":15},"name":"_90","qualname":"::u32_trait::_90","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 90 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 90 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76152,"byte_end":76209,"line_start":206,"line_end":206,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":739},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76341,"byte_end":76344,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"_91","qualname":"::u32_trait::_91","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 91 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 91 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76272,"byte_end":76329,"line_start":208,"line_end":208,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":743},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76461,"byte_end":76464,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"_92","qualname":"::u32_trait::_92","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 92 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 92 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76392,"byte_end":76449,"line_start":210,"line_end":210,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":747},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76581,"byte_end":76584,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"_93","qualname":"::u32_trait::_93","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 93 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 93 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76512,"byte_end":76569,"line_start":212,"line_end":212,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":751},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76701,"byte_end":76704,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"_94","qualname":"::u32_trait::_94","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 94 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 94 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76632,"byte_end":76689,"line_start":214,"line_end":214,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":755},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76821,"byte_end":76824,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"_95","qualname":"::u32_trait::_95","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 95 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 95 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76752,"byte_end":76809,"line_start":216,"line_end":216,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":759},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76941,"byte_end":76944,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"_96","qualname":"::u32_trait::_96","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 96 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 96 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76872,"byte_end":76929,"line_start":218,"line_end":218,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":763},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77061,"byte_end":77064,"line_start":221,"line_end":221,"column_start":12,"column_end":15},"name":"_97","qualname":"::u32_trait::_97","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 97 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 97 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76992,"byte_end":77049,"line_start":220,"line_end":220,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":767},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77181,"byte_end":77184,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"_98","qualname":"::u32_trait::_98","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 98 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 98 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77112,"byte_end":77169,"line_start":222,"line_end":222,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":771},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77301,"byte_end":77304,"line_start":225,"line_end":225,"column_start":12,"column_end":15},"name":"_99","qualname":"::u32_trait::_99","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 99 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 99 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77232,"byte_end":77289,"line_start":224,"line_end":224,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":775},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77422,"byte_end":77426,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"_100","qualname":"::u32_trait::_100","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 100 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 100 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77352,"byte_end":77410,"line_start":226,"line_end":226,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":779},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77546,"byte_end":77550,"line_start":229,"line_end":229,"column_start":12,"column_end":16},"name":"_112","qualname":"::u32_trait::_112","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 112 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 112 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77476,"byte_end":77534,"line_start":228,"line_end":228,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":783},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77670,"byte_end":77674,"line_start":231,"line_end":231,"column_start":12,"column_end":16},"name":"_128","qualname":"::u32_trait::_128","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 128 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 128 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77600,"byte_end":77658,"line_start":230,"line_end":230,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":787},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77794,"byte_end":77798,"line_start":233,"line_end":233,"column_start":12,"column_end":16},"name":"_160","qualname":"::u32_trait::_160","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 160 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 160 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77724,"byte_end":77782,"line_start":232,"line_end":232,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":791},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77918,"byte_end":77922,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"_192","qualname":"::u32_trait::_192","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 192 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 192 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77848,"byte_end":77906,"line_start":234,"line_end":234,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":795},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78042,"byte_end":78046,"line_start":237,"line_end":237,"column_start":12,"column_end":16},"name":"_224","qualname":"::u32_trait::_224","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 224 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 224 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77972,"byte_end":78030,"line_start":236,"line_end":236,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":799},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78166,"byte_end":78170,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"_256","qualname":"::u32_trait::_256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 256 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 256 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78096,"byte_end":78154,"line_start":238,"line_end":238,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":803},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78290,"byte_end":78294,"line_start":241,"line_end":241,"column_start":12,"column_end":16},"name":"_384","qualname":"::u32_trait::_384","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 384 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 384 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78220,"byte_end":78278,"line_start":240,"line_end":240,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":807},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78414,"byte_end":78418,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"_512","qualname":"::u32_trait::_512","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 512 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 512 for the `Value` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78344,"byte_end":78402,"line_start":242,"line_end":242,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":811},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ed25519","qualname":"::ed25519","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":3967},{"krate":0,"index":815},{"krate":0,"index":3969},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":3971},{"krate":0,"index":818},{"krate":0,"index":3973},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":4003},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":4007},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":4011},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":4019},{"krate":0,"index":847},{"krate":0,"index":4021},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":2469},{"krate":0,"index":2522},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2508},{"krate":0,"index":2506},{"krate":0,"index":2503},{"krate":0,"index":2502},{"krate":0,"index":2492},{"krate":0,"index":2486},{"krate":0,"index":2484},{"krate":0,"index":2473},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":2525},{"krate":0,"index":2546},{"krate":0,"index":2540},{"krate":0,"index":2529},{"krate":0,"index":900},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":928},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":2556},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2572},{"krate":0,"index":2570},{"krate":0,"index":2564},{"krate":0,"index":2559},{"krate":0,"index":2581},{"krate":0,"index":2602},{"krate":0,"index":2601},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2593},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":947},{"krate":0,"index":953},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":993},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1002}],"decl_id":null,"docs":" Simple Ed25519 API.\n","sig":null,"attributes":[{"value":"/ Simple Ed25519 API.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":79178,"byte_end":79201,"line_start":19,"line_end":19,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":849},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":80186,"byte_end":80195,"line_start":49,"line_end":49,"column_start":11,"column_end":20},"name":"CRYPTO_ID","qualname":"::ed25519::CRYPTO_ID","value":"CryptoTypeId","parent":null,"children":[],"decl_id":null,"docs":" An identifier used to match public keys against ed25519 keys\n","sig":null,"attributes":[{"value":"/ An identifier used to match public keys against ed25519 keys","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":80111,"byte_end":80175,"line_start":48,"line_end":48,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2469},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":80693,"byte_end":80699,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Public","qualname":"::ed25519::Public","value":"","parent":null,"children":[],"decl_id":null,"docs":" A public key.\n","sig":null,"attributes":[{"value":"/ A public key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":80520,"byte_end":80537,"line_start":57,"line_end":57,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2471},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":80700,"byte_end":80712,"line_start":60,"line_end":60,"column_start":19,"column_end":31},"name":"0","qualname":"::ed25519::Public::0","value":"[u8; 32]","parent":{"krate":0,"index":2469},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":852},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":80775,"byte_end":80779,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"Pair","qualname":"::ed25519::Pair","value":"","parent":null,"children":[],"decl_id":null,"docs":" A key pair.\n","sig":null,"attributes":[{"value":"/ A key pair.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":80716,"byte_end":80731,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":80732,"byte_end":80763,"line_start":63,"line_end":63,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2525},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":83464,"byte_end":83473,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ed25519::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A signature (a 512-bit value).\n","sig":null,"attributes":[{"value":"/ A signature (a 512-bit value).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":83379,"byte_end":83413,"line_start":192,"line_end":192,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2527},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":83474,"byte_end":83486,"line_start":194,"line_end":194,"column_start":22,"column_end":34},"name":"0","qualname":"::ed25519::Signature::0","value":"[u8; 64]","parent":{"krate":0,"index":2525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85864,"byte_end":85872,"line_start":303,"line_end":303,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Signature>::from_raw","value":"pub fn from_raw([u8; ]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 64-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 64-byte `data`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85652,"byte_end":85701,"line_start":299,"line_end":299,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85703,"byte_end":85706,"line_start":300,"line_end":300,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85708,"byte_end":85788,"line_start":301,"line_end":301,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85790,"byte_end":85855,"line_start":302,"line_end":302,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86159,"byte_end":86169,"line_start":311,"line_end":311,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<Signature>::from_slice","value":"pub fn from_slice(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given slice that should be 64 bytes long.","sig":null,"attributes":[{"value":"/ A new instance from the given slice that should be 64 bytes long.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85927,"byte_end":85996,"line_start":307,"line_end":307,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85998,"byte_end":86001,"line_start":308,"line_end":308,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86003,"byte_end":86083,"line_start":309,"line_end":309,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86085,"byte_end":86150,"line_start":310,"line_end":310,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86460,"byte_end":86469,"line_start":321,"line_end":321,"column_start":9,"column_end":18},"name":"from_h512","qualname":"<Signature>::from_h512","value":"pub fn from_h512(H512) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from an H512.","sig":null,"attributes":[{"value":"/ A new instance from an H512.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86265,"byte_end":86297,"line_start":317,"line_end":317,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86299,"byte_end":86302,"line_start":318,"line_end":318,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86304,"byte_end":86384,"line_start":319,"line_end":319,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86386,"byte_end":86451,"line_start":320,"line_end":320,"column_start":2,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2556},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86672,"byte_end":86690,"line_start":329,"line_end":329,"column_start":12,"column_end":30},"name":"LocalizedSignature","qualname":"::ed25519::LocalizedSignature","value":"LocalizedSignature { signer, signature }","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2558}],"decl_id":null,"docs":" A localized signature also contains sender information.\n","sig":null,"attributes":[{"value":"/ A localized signature also contains sender information.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86522,"byte_end":86581,"line_start":326,"line_end":326,"column_start":1,"column_end":60}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86582,"byte_end":86605,"line_start":327,"line_end":327,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2557},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86732,"byte_end":86738,"line_start":331,"line_end":331,"column_start":6,"column_end":12},"name":"signer","qualname":"::ed25519::LocalizedSignature::signer","value":"ed25519::Public","parent":{"krate":0,"index":2556},"children":[],"decl_id":null,"docs":" The signer of the signature.\n","sig":null,"attributes":[{"value":"/ The signer of the signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86694,"byte_end":86726,"line_start":330,"line_end":330,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2558},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86780,"byte_end":86789,"line_start":333,"line_end":333,"column_start":6,"column_end":15},"name":"signature","qualname":"::ed25519::LocalizedSignature::signature","value":"ed25519::Signature","parent":{"krate":0,"index":2556},"children":[],"decl_id":null,"docs":" The signature itself.\n","sig":null,"attributes":[{"value":"/ The signature itself.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86749,"byte_end":86774,"line_start":332,"line_end":332,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2582},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87017,"byte_end":87026,"line_start":342,"line_end":342,"column_start":2,"column_end":11},"name":"BadBase58","qualname":"::ed25519::PublicError::BadBase58","value":"PublicError::BadBase58","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":" Bad alphabet.\n","sig":null,"attributes":[{"value":"/ Bad alphabet.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86953,"byte_end":86970,"line_start":340,"line_end":340,"column_start":2,"column_end":19}},{"value":"error(\"Base 58 requirement is violated\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86972,"byte_end":87015,"line_start":341,"line_end":341,"column_start":2,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2584},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87073,"byte_end":87082,"line_start":345,"line_end":345,"column_start":2,"column_end":11},"name":"BadLength","qualname":"::ed25519::PublicError::BadLength","value":"PublicError::BadLength","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":" Bad length.\n","sig":null,"attributes":[{"value":"/ Bad length.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87029,"byte_end":87044,"line_start":343,"line_end":343,"column_start":2,"column_end":17}},{"value":"error(\"Length is bad\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87046,"byte_end":87071,"line_start":344,"line_end":344,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2586},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87136,"byte_end":87150,"line_start":348,"line_end":348,"column_start":2,"column_end":16},"name":"UnknownVersion","qualname":"::ed25519::PublicError::UnknownVersion","value":"PublicError::UnknownVersion","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":" Unknown version.\n","sig":null,"attributes":[{"value":"/ Unknown version.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87085,"byte_end":87105,"line_start":346,"line_end":346,"column_start":2,"column_end":22}},{"value":"error(\"Unknown version\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87107,"byte_end":87134,"line_start":347,"line_end":347,"column_start":2,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2588},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87206,"byte_end":87221,"line_start":351,"line_end":351,"column_start":2,"column_end":17},"name":"InvalidChecksum","qualname":"::ed25519::PublicError::InvalidChecksum","value":"PublicError::InvalidChecksum","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":" Invalid checksum.\n","sig":null,"attributes":[{"value":"/ Invalid checksum.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87153,"byte_end":87174,"line_start":349,"line_end":349,"column_start":2,"column_end":23}},{"value":"error(\"Invalid checksum\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87176,"byte_end":87204,"line_start":350,"line_end":350,"column_start":2,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2581},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86938,"byte_end":86949,"line_start":339,"line_end":339,"column_start":10,"column_end":21},"name":"PublicError","qualname":"::ed25519::PublicError","value":"pub enum PublicError {\n\n    /// Bad alphabet.\n    #[error(\"Base 58 requirement is violated\")]\n    BadBase58,\n\n    /// Bad length.\n    #[error(\"Length is bad\")]\n    BadLength,\n\n    /// Unknown version.\n    #[error(\"Unknown version\")]\n    UnknownVersion,\n\n    /// Invalid checksum.\n    #[error(\"Invalid checksum\")]\n    InvalidChecksum,\n}","parent":null,"children":[{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2588}],"decl_id":null,"docs":" An error type for SS58 decoding.\n","sig":null,"attributes":[{"value":"/ An error type for SS58 decoding.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86805,"byte_end":86841,"line_start":336,"line_end":336,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":86842,"byte_end":86865,"line_start":337,"line_end":337,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87451,"byte_end":87459,"line_start":359,"line_end":359,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Public>::from_raw","value":"pub fn from_raw([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 32-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 32-byte `data`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87241,"byte_end":87290,"line_start":355,"line_end":355,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87292,"byte_end":87295,"line_start":356,"line_end":356,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87297,"byte_end":87378,"line_start":357,"line_end":357,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87380,"byte_end":87442,"line_start":358,"line_end":358,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87699,"byte_end":87708,"line_start":367,"line_end":367,"column_start":9,"column_end":18},"name":"from_h256","qualname":"<Public>::from_h256","value":"pub fn from_h256(H256) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from an H256.","sig":null,"attributes":[{"value":"/ A new instance from an H256.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87506,"byte_end":87538,"line_start":363,"line_end":363,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87540,"byte_end":87543,"line_start":364,"line_end":364,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87545,"byte_end":87626,"line_start":365,"line_end":365,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87628,"byte_end":87690,"line_start":366,"line_end":366,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87801,"byte_end":87813,"line_start":372,"line_end":372,"column_start":9,"column_end":21},"name":"as_array_ref","qualname":"<Public>::as_array_ref","value":"pub fn as_array_ref(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Return a slice filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a slice filled with raw data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87752,"byte_end":87792,"line_start":371,"line_end":371,"column_start":2,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":967},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":89060,"byte_end":89073,"line_start":421,"line_end":421,"column_start":2,"column_end":15},"name":"SoftKeyInPath","qualname":"::ed25519::DeriveError::SoftKeyInPath","value":"DeriveError::SoftKeyInPath","parent":{"krate":0,"index":966},"children":[],"decl_id":null,"docs":" A soft key was found in the path (and is unsupported).\n","sig":null,"attributes":[{"value":"/ A soft key was found in the path (and is unsupported).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":89000,"byte_end":89058,"line_start":420,"line_end":420,"column_start":2,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":966},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":88985,"byte_end":88996,"line_start":419,"line_end":419,"column_start":10,"column_end":21},"name":"DeriveError","qualname":"::ed25519::DeriveError","value":"pub enum DeriveError {\n\n    /// A soft key was found in the path (and is unsupported).\n    SoftKeyInPath,\n}","parent":null,"children":[{"krate":0,"index":967}],"decl_id":null,"docs":" An error when deriving a key.\n","sig":null,"attributes":[{"value":"/ An error when deriving a key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":88910,"byte_end":88943,"line_start":417,"line_end":417,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":88944,"byte_end":88975,"line_start":418,"line_end":418,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":92929,"byte_end":92933,"line_start":542,"line_end":542,"column_start":9,"column_end":13},"name":"seed","qualname":"<Pair>::seed","value":"pub fn seed(&Self) -> &Seed","parent":null,"children":[],"decl_id":null,"docs":" Get the seed for this key.\n","sig":null,"attributes":[{"value":"/ Get the seed for this key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":92890,"byte_end":92920,"line_start":541,"line_end":541,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":93196,"byte_end":93214,"line_start":549,"line_end":549,"column_start":9,"column_end":27},"name":"from_legacy_string","qualname":"<Pair>::from_legacy_string","value":"pub fn from_legacy_string(&str, Option<&str>) -> Pair","parent":null,"children":[],"decl_id":null,"docs":" Exactly as `from_string` except that if no matches are found then, the the first 32\n characters are taken (padded with spaces as necessary) and used as the MiniSecretKey.\n","sig":null,"attributes":[{"value":"/ Exactly as `from_string` except that if no matches are found then, the the first 32","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":92984,"byte_end":93071,"line_start":546,"line_end":546,"column_start":2,"column_end":89}},{"value":"/ characters are taken (padded with spaces as necessary) and used as the MiniSecretKey.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":93073,"byte_end":93162,"line_start":547,"line_end":547,"column_start":2,"column_end":91}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":93164,"byte_end":93187,"line_start":548,"line_end":548,"column_start":2,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1004},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sr25519","qualname":"::sr25519","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":4041},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":4067},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":4075},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":4077},{"krate":0,"index":1038},{"krate":0,"index":4079},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":4081},{"krate":0,"index":1041},{"krate":0,"index":4083},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":4089},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":4093},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":4101},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":2604},{"krate":0,"index":2657},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2643},{"krate":0,"index":2641},{"krate":0,"index":2638},{"krate":0,"index":2637},{"krate":0,"index":2627},{"krate":0,"index":2621},{"krate":0,"index":2619},{"krate":0,"index":2608},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1084},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":2660},{"krate":0,"index":2681},{"krate":0,"index":2675},{"krate":0,"index":2664},{"krate":0,"index":1102},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":2691},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2696},{"krate":0,"index":2694},{"krate":0,"index":1145},{"krate":0,"index":1151},{"krate":0,"index":1154},{"krate":0,"index":1160},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1209},{"krate":0,"index":1213},{"krate":0,"index":1215},{"krate":0,"index":1217},{"krate":0,"index":1219}],"decl_id":null,"docs":" Simple sr25519 (Schnorr-Ristretto) API.","sig":null,"attributes":[{"value":"/ Simple sr25519 (Schnorr-Ristretto) API.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":99488,"byte_end":99531,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":99532,"byte_end":99535,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note: `CHAIN_CODE_LENGTH` must be equal to `crate::crypto::JUNCTION_ID_LEN`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":99536,"byte_end":99615,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ for this to work.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":99616,"byte_end":99637,"line_start":22,"line_end":22,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1054},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":100873,"byte_end":100882,"line_start":59,"line_end":59,"column_start":11,"column_end":20},"name":"CRYPTO_ID","qualname":"::sr25519::CRYPTO_ID","value":"CryptoTypeId","parent":null,"children":[],"decl_id":null,"docs":" An identifier used to match public keys against sr25519 keys\n","sig":null,"attributes":[{"value":"/ An identifier used to match public keys against sr25519 keys","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":100798,"byte_end":100862,"line_start":58,"line_end":58,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2604},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101138,"byte_end":101144,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"Public","qualname":"::sr25519::Public","value":"","parent":null,"children":[],"decl_id":null,"docs":" An Schnorrkel/Ristretto x25519 (\"sr25519\") public key.\n","sig":null,"attributes":[{"value":"/ An Schnorrkel/Ristretto x25519 (\"sr25519\") public key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":100924,"byte_end":100982,"line_start":61,"line_end":61,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2606},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101145,"byte_end":101157,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"name":"0","qualname":"::sr25519::Public::0","value":"[u8; 32]","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1055},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101261,"byte_end":101265,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"Pair","qualname":"::sr25519::Pair","value":"","parent":null,"children":[],"decl_id":null,"docs":" An Schnorrkel/Ristretto x25519 (\"sr25519\") key pair.\n","sig":null,"attributes":[{"value":"/ An Schnorrkel/Ristretto x25519 (\"sr25519\") key pair.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101161,"byte_end":101217,"line_start":66,"line_end":66,"column_start":1,"column_end":57}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101218,"byte_end":101249,"line_start":67,"line_end":67,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2660},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":103941,"byte_end":103950,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"Signature","qualname":"::sr25519::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An Schnorrkel/Ristretto x25519 (\"sr25519\") signature.","sig":null,"attributes":[{"value":"/ An Schnorrkel/Ristretto x25519 (\"sr25519\") signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":103737,"byte_end":103794,"line_start":189,"line_end":189,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":103795,"byte_end":103798,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ Instead of importing it for the local module, alias it to be available as a public type","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":103799,"byte_end":103890,"line_start":191,"line_end":191,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":2662},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":103951,"byte_end":103963,"line_start":193,"line_end":193,"column_start":22,"column_end":34},"name":"0","qualname":"::sr25519::Signature::0","value":"[u8; 64]","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2691},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106499,"byte_end":106517,"line_start":308,"line_end":308,"column_start":12,"column_end":30},"name":"LocalizedSignature","qualname":"::sr25519::LocalizedSignature","value":"LocalizedSignature { signer, signature }","parent":null,"children":[{"krate":0,"index":2692},{"krate":0,"index":2693}],"decl_id":null,"docs":" A localized signature also contains sender information.\n NOTE: Encode and Decode traits are supported in ed25519 but not possible for now here.\n","sig":null,"attributes":[{"value":"/ A localized signature also contains sender information.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106274,"byte_end":106333,"line_start":304,"line_end":304,"column_start":1,"column_end":60}},{"value":"/ NOTE: Encode and Decode traits are supported in ed25519 but not possible for now here.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106334,"byte_end":106424,"line_start":305,"line_end":305,"column_start":1,"column_end":91}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106425,"byte_end":106448,"line_start":306,"line_end":306,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2692},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106559,"byte_end":106565,"line_start":310,"line_end":310,"column_start":6,"column_end":12},"name":"signer","qualname":"::sr25519::LocalizedSignature::signer","value":"sr25519::Public","parent":{"krate":0,"index":2691},"children":[],"decl_id":null,"docs":" The signer of the signature.\n","sig":null,"attributes":[{"value":"/ The signer of the signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106521,"byte_end":106553,"line_start":309,"line_end":309,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2693},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106607,"byte_end":106616,"line_start":312,"line_end":312,"column_start":6,"column_end":15},"name":"signature","qualname":"::sr25519::LocalizedSignature::signature","value":"sr25519::Signature","parent":{"krate":0,"index":2691},"children":[],"decl_id":null,"docs":" The signature itself.\n","sig":null,"attributes":[{"value":"/ The signature itself.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106576,"byte_end":106601,"line_start":311,"line_end":311,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107012,"byte_end":107020,"line_start":322,"line_end":322,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Signature>::from_raw","value":"pub fn from_raw([u8; ]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 64-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 64-byte `data`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106650,"byte_end":106699,"line_start":316,"line_end":316,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106701,"byte_end":106704,"line_start":317,"line_end":317,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106706,"byte_end":106780,"line_start":318,"line_end":318,"column_start":2,"column_end":76}},{"value":"/ it if you are certain that the array actually is a signature, or if you","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106782,"byte_end":106857,"line_start":319,"line_end":319,"column_start":2,"column_end":77}},{"value":"/ immediately verify the signature.  All functions that verify signatures","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106859,"byte_end":106934,"line_start":320,"line_end":320,"column_start":2,"column_end":77}},{"value":"/ will fail if the `Signature` is not actually a valid signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106936,"byte_end":107003,"line_start":321,"line_end":321,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107307,"byte_end":107317,"line_start":330,"line_end":330,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<Signature>::from_slice","value":"pub fn from_slice(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given slice that should be 64 bytes long.","sig":null,"attributes":[{"value":"/ A new instance from the given slice that should be 64 bytes long.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107075,"byte_end":107144,"line_start":326,"line_end":326,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107146,"byte_end":107149,"line_start":327,"line_end":327,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107151,"byte_end":107231,"line_start":328,"line_end":328,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107233,"byte_end":107298,"line_start":329,"line_end":329,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107608,"byte_end":107617,"line_start":340,"line_end":340,"column_start":9,"column_end":18},"name":"from_h512","qualname":"<Signature>::from_h512","value":"pub fn from_h512(H512) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from an H512.","sig":null,"attributes":[{"value":"/ A new instance from an H512.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107413,"byte_end":107445,"line_start":336,"line_end":336,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107447,"byte_end":107450,"line_start":337,"line_end":337,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107452,"byte_end":107532,"line_start":338,"line_end":338,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107534,"byte_end":107599,"line_start":339,"line_end":339,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108414,"byte_end":108422,"line_start":367,"line_end":367,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Public>::from_raw","value":"pub fn from_raw([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 32-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 32-byte `data`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108204,"byte_end":108253,"line_start":363,"line_end":363,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108255,"byte_end":108258,"line_start":364,"line_end":364,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108260,"byte_end":108341,"line_start":365,"line_end":365,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108343,"byte_end":108405,"line_start":366,"line_end":366,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108662,"byte_end":108671,"line_start":375,"line_end":375,"column_start":9,"column_end":18},"name":"from_h256","qualname":"<Public>::from_h256","value":"pub fn from_h256(H256) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from an H256.","sig":null,"attributes":[{"value":"/ A new instance from an H256.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108469,"byte_end":108501,"line_start":371,"line_end":371,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108503,"byte_end":108506,"line_start":372,"line_end":372,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108508,"byte_end":108589,"line_start":373,"line_end":373,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108591,"byte_end":108653,"line_start":374,"line_end":374,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108764,"byte_end":108776,"line_start":380,"line_end":380,"column_start":9,"column_end":21},"name":"as_array_ref","qualname":"<Public>::as_array_ref","value":"pub fn as_array_ref(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Return a slice filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a slice filled with raw data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108715,"byte_end":108755,"line_start":379,"line_end":379,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":114500,"byte_end":114512,"line_start":581,"line_end":581,"column_start":9,"column_end":21},"name":"from_entropy","qualname":"<Pair>::from_entropy","value":"pub fn from_entropy(&[u8], Option<&str>) -> (Pair, Seed)","parent":null,"children":[],"decl_id":null,"docs":" Make a new key pair from binary data derived from a valid seed phrase.","sig":null,"attributes":[{"value":"/ Make a new key pair from binary data derived from a valid seed phrase.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":114289,"byte_end":114363,"line_start":577,"line_end":577,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":114365,"byte_end":114368,"line_start":578,"line_end":578,"column_start":2,"column_end":5}},{"value":"/ This uses a key derivation function to convert the entropy into a seed, then returns","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":114370,"byte_end":114458,"line_start":579,"line_end":579,"column_start":2,"column_end":90}},{"value":"/ the pair generated from it.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":114460,"byte_end":114491,"line_start":580,"line_end":580,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115005,"byte_end":115022,"line_start":592,"line_end":592,"column_start":9,"column_end":26},"name":"verify_deprecated","qualname":"<Pair>::verify_deprecated","value":"pub fn verify_deprecated<M: AsRef<[u8]>>(&Signature, M, &Public) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify a signature on a message. Returns `true` if the signature is good.\n Supports old 0.1.1 deprecated signatures and should be used only for backward\n compatibility.\n","sig":null,"attributes":[{"value":"/ Verify a signature on a message. Returns `true` if the signature is good.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":114816,"byte_end":114893,"line_start":589,"line_end":589,"column_start":2,"column_end":79}},{"value":"/ Supports old 0.1.1 deprecated signatures and should be used only for backward","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":114895,"byte_end":114976,"line_start":590,"line_end":590,"column_start":2,"column_end":83}},{"value":"/ compatibility.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":114978,"byte_end":114996,"line_start":591,"line_end":591,"column_start":2,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1219},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115878,"byte_end":115890,"line_start":625,"line_end":625,"column_start":8,"column_end":20},"name":"verify_batch","qualname":"::sr25519::verify_batch","value":"pub fn verify_batch(Vec<&[u8]>, Vec<&Signature>, Vec<&Public>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Batch verification.","sig":null,"attributes":[{"value":"/ Batch verification.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115672,"byte_end":115695,"line_start":619,"line_end":619,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115696,"byte_end":115699,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ `messages`, `signatures` and `pub_keys` should all have equal length.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115700,"byte_end":115773,"line_start":621,"line_end":621,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115774,"byte_end":115777,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ Returns `true` if all signatures are correct, `false` otherwise.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115778,"byte_end":115846,"line_start":623,"line_end":623,"column_start":1,"column_end":69}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115847,"byte_end":115870,"line_start":624,"line_end":624,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":1221},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdsa","qualname":"::ecdsa","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":4107},{"krate":0,"index":1226},{"krate":0,"index":4109},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":4137},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":4141},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":4145},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":4153},{"krate":0,"index":1255},{"krate":0,"index":4155},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":2705},{"krate":0,"index":2736},{"krate":0,"index":2726},{"krate":0,"index":2720},{"krate":0,"index":2709},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":2738},{"krate":0,"index":2756},{"krate":0,"index":2755},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2747},{"krate":0,"index":1269},{"krate":0,"index":1275},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1312},{"krate":0,"index":2758},{"krate":0,"index":2779},{"krate":0,"index":2773},{"krate":0,"index":2762},{"krate":0,"index":1315},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1341},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1369},{"krate":0,"index":1373},{"krate":0,"index":2789},{"krate":0,"index":2792},{"krate":0,"index":1376},{"krate":0,"index":1399},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408}],"decl_id":null,"docs":" Simple ECDSA API.\n","sig":null,"attributes":[{"value":"/ Simple ECDSA API.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":125428,"byte_end":125449,"line_start":19,"line_end":19,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1259},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":126374,"byte_end":126383,"line_start":46,"line_end":46,"column_start":11,"column_end":20},"name":"CRYPTO_ID","qualname":"::ecdsa::CRYPTO_ID","value":"CryptoTypeId","parent":null,"children":[],"decl_id":null,"docs":" An identifier used to match public keys against ecdsa keys\n","sig":null,"attributes":[{"value":"/ An identifier used to match public keys against ecdsa keys","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":126301,"byte_end":126363,"line_start":45,"line_end":45,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2705},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":126736,"byte_end":126742,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"Public","qualname":"::ecdsa::Public","value":"","parent":null,"children":[],"decl_id":null,"docs":" The ECDSA compressed public key.\n","sig":null,"attributes":[{"value":"/ The ECDSA compressed public key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":126642,"byte_end":126678,"line_start":54,"line_end":54,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2707},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":126743,"byte_end":126755,"line_start":56,"line_end":56,"column_start":19,"column_end":31},"name":"0","qualname":"::ecdsa::Public::0","value":"[u8; 33]","parent":{"krate":0,"index":2705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2739},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127263,"byte_end":127272,"line_start":83,"line_end":83,"column_start":2,"column_end":11},"name":"BadBase58","qualname":"::ecdsa::PublicError::BadBase58","value":"PublicError::BadBase58","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Bad alphabet.\n","sig":null,"attributes":[{"value":"/ Bad alphabet.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127244,"byte_end":127261,"line_start":82,"line_end":82,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2741},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127292,"byte_end":127301,"line_start":85,"line_end":85,"column_start":2,"column_end":11},"name":"BadLength","qualname":"::ecdsa::PublicError::BadLength","value":"PublicError::BadLength","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Bad length.\n","sig":null,"attributes":[{"value":"/ Bad length.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127275,"byte_end":127290,"line_start":84,"line_end":84,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2743},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127326,"byte_end":127340,"line_start":87,"line_end":87,"column_start":2,"column_end":16},"name":"UnknownVersion","qualname":"::ecdsa::PublicError::UnknownVersion","value":"PublicError::UnknownVersion","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Unknown version.\n","sig":null,"attributes":[{"value":"/ Unknown version.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127304,"byte_end":127324,"line_start":86,"line_end":86,"column_start":2,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2745},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127366,"byte_end":127381,"line_start":89,"line_end":89,"column_start":2,"column_end":17},"name":"InvalidChecksum","qualname":"::ecdsa::PublicError::InvalidChecksum","value":"PublicError::InvalidChecksum","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Invalid checksum.\n","sig":null,"attributes":[{"value":"/ Invalid checksum.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127343,"byte_end":127364,"line_start":88,"line_end":88,"column_start":2,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":2738},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127229,"byte_end":127240,"line_start":81,"line_end":81,"column_start":10,"column_end":21},"name":"PublicError","qualname":"::ecdsa::PublicError","value":"pub enum PublicError {\n\n    /// Bad alphabet.\n    BadBase58,\n\n    /// Bad length.\n    BadLength,\n\n    /// Unknown version.\n    UnknownVersion,\n\n    /// Invalid checksum.\n    InvalidChecksum,\n}","parent":null,"children":[{"krate":0,"index":2739},{"krate":0,"index":2741},{"krate":0,"index":2743},{"krate":0,"index":2745}],"decl_id":null,"docs":" An error type for SS58 decoding.\n","sig":null,"attributes":[{"value":"/ An error type for SS58 decoding.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127114,"byte_end":127150,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127151,"byte_end":127174,"line_start":79,"line_end":79,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127611,"byte_end":127619,"line_start":97,"line_end":97,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Public>::from_raw","value":"pub fn from_raw([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 33-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 33-byte `data`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127401,"byte_end":127450,"line_start":93,"line_end":93,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127452,"byte_end":127455,"line_start":94,"line_end":94,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127457,"byte_end":127538,"line_start":95,"line_end":95,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127540,"byte_end":127602,"line_start":96,"line_end":96,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127831,"byte_end":127840,"line_start":105,"line_end":105,"column_start":9,"column_end":18},"name":"from_full","qualname":"<Public>::from_full","value":"pub fn from_full(&[u8]) -> Result<Self, ()>","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from the given full public key.","sig":null,"attributes":[{"value":"/ Create a new instance from the given full public key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127664,"byte_end":127721,"line_start":101,"line_end":101,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127723,"byte_end":127726,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ This will convert the full public key into the compressed format.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127728,"byte_end":127797,"line_start":103,"line_end":103,"column_start":2,"column_end":71}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127799,"byte_end":127822,"line_start":104,"line_end":104,"column_start":2,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2758},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":130698,"byte_end":130707,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ecdsa::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A signature (a 512-bit value, plus 8 bits for recovery ID).\n","sig":null,"attributes":[{"value":"/ A signature (a 512-bit value, plus 8 bits for recovery ID).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":130584,"byte_end":130647,"line_start":229,"line_end":229,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2760},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":130708,"byte_end":130720,"line_start":231,"line_end":231,"column_start":22,"column_end":34},"name":"0","qualname":"::ecdsa::Signature::0","value":"[u8; 65]","parent":{"krate":0,"index":2758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":133009,"byte_end":133017,"line_start":334,"line_end":334,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Signature>::from_raw","value":"pub fn from_raw([u8; ]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 65-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 65-byte `data`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132797,"byte_end":132846,"line_start":330,"line_end":330,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132848,"byte_end":132851,"line_start":331,"line_end":331,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132853,"byte_end":132933,"line_start":332,"line_end":332,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132935,"byte_end":133000,"line_start":333,"line_end":333,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":133304,"byte_end":133314,"line_start":342,"line_end":342,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<Signature>::from_slice","value":"pub fn from_slice(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given slice that should be 65 bytes long.","sig":null,"attributes":[{"value":"/ A new instance from the given slice that should be 65 bytes long.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":133072,"byte_end":133141,"line_start":338,"line_end":338,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":133143,"byte_end":133146,"line_start":339,"line_end":339,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":133148,"byte_end":133228,"line_start":340,"line_end":340,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":133230,"byte_end":133295,"line_start":341,"line_end":341,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":133513,"byte_end":133520,"line_start":350,"line_end":350,"column_start":9,"column_end":16},"name":"recover","qualname":"<Signature>::recover","value":"pub fn recover<M: AsRef<[u8]>>(&Self, M) -> Option<Public>","parent":null,"children":[],"decl_id":null,"docs":" Recover the public key from this signature and a message.\n","sig":null,"attributes":[{"value":"/ Recover the public key from this signature and a message.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":133410,"byte_end":133471,"line_start":348,"line_end":348,"column_start":2,"column_end":63}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":133473,"byte_end":133504,"line_start":349,"line_end":349,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1374},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":134984,"byte_end":134997,"line_start":394,"line_end":394,"column_start":2,"column_end":15},"name":"SoftKeyInPath","qualname":"::ecdsa::DeriveError::SoftKeyInPath","value":"DeriveError::SoftKeyInPath","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" A soft key was found in the path (and is unsupported).\n","sig":null,"attributes":[{"value":"/ A soft key was found in the path (and is unsupported).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":134924,"byte_end":134982,"line_start":393,"line_end":393,"column_start":2,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":1373},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":134909,"byte_end":134920,"line_start":392,"line_end":392,"column_start":10,"column_end":21},"name":"DeriveError","qualname":"::ecdsa::DeriveError","value":"pub enum DeriveError {\n\n    /// A soft key was found in the path (and is unsupported).\n    SoftKeyInPath,\n}","parent":null,"children":[{"krate":0,"index":1374}],"decl_id":null,"docs":" An error when deriving a key.\n","sig":null,"attributes":[{"value":"/ An error when deriving a key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":134834,"byte_end":134867,"line_start":390,"line_end":390,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":134868,"byte_end":134899,"line_start":391,"line_end":391,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2789},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":135078,"byte_end":135082,"line_start":400,"line_end":400,"column_start":12,"column_end":16},"name":"Pair","qualname":"::ecdsa::Pair","value":"Pair {  }","parent":null,"children":[{"krate":0,"index":2790},{"krate":0,"index":2791}],"decl_id":null,"docs":" A key pair.\n","sig":null,"attributes":[{"value":"/ A key pair.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":135002,"byte_end":135017,"line_start":397,"line_end":397,"column_start":1,"column_end":16}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":135018,"byte_end":135049,"line_start":398,"line_end":398,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":139268,"byte_end":139272,"line_start":519,"line_end":519,"column_start":9,"column_end":13},"name":"seed","qualname":"<Pair>::seed","value":"pub fn seed(&Self) -> Seed","parent":null,"children":[],"decl_id":null,"docs":" Get the seed for this key.\n","sig":null,"attributes":[{"value":"/ Get the seed for this key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":139229,"byte_end":139259,"line_start":518,"line_end":518,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":139533,"byte_end":139551,"line_start":526,"line_end":526,"column_start":9,"column_end":27},"name":"from_legacy_string","qualname":"<Pair>::from_legacy_string","value":"pub fn from_legacy_string(&str, Option<&str>) -> Pair","parent":null,"children":[],"decl_id":null,"docs":" Exactly as `from_string` except that if no matches are found then, the the first 32\n characters are taken (padded with spaces as necessary) and used as the MiniSecretKey.\n","sig":null,"attributes":[{"value":"/ Exactly as `from_string` except that if no matches are found then, the the first 32","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":139321,"byte_end":139408,"line_start":523,"line_end":523,"column_start":2,"column_end":89}},{"value":"/ characters are taken (padded with spaces as necessary) and used as the MiniSecretKey.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":139410,"byte_end":139499,"line_start":524,"line_end":524,"column_start":2,"column_end":91}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":139501,"byte_end":139524,"line_start":525,"line_end":525,"column_start":2,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1410},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash","qualname":"::hash","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":4161},{"krate":0,"index":1413},{"krate":0,"index":4163},{"krate":0,"index":1414},{"krate":0,"index":4165},{"krate":0,"index":1415}],"decl_id":null,"docs":" A fixed hash type.\n","sig":null,"attributes":[{"value":"/ A fixed hash type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","byte_start":148446,"byte_end":148468,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1415},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","byte_start":148708,"byte_end":148720,"line_start":25,"line_end":25,"column_start":8,"column_end":20},"name":"convert_hash","qualname":"::hash::convert_hash","value":"pub fn convert_hash<H1: Default + AsMut<[u8]>, H2: AsRef<[u8]>>(&H2) -> H1","parent":null,"children":[],"decl_id":null,"docs":" Hash conversion. Used to convert between unbound associated hash types in traits,\n implemented by the same hash type.\n Panics if used to convert between different hash types.\n","sig":null,"attributes":[{"value":"/ Hash conversion. Used to convert between unbound associated hash types in traits,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","byte_start":148516,"byte_end":148601,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/ implemented by the same hash type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","byte_start":148602,"byte_end":148640,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ Panics if used to convert between different hash types.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hash.rs","byte_start":148641,"byte_end":148700,"line_start":24,"line_end":24,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2794},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hasher.rs","byte_start":152334,"byte_end":152346,"line_start":27,"line_end":27,"column_start":13,"column_end":25},"name":"Blake2Hasher","qualname":"::hasher::blake2::Blake2Hasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" Concrete implementation of Hasher using Blake2b 256-bit hashes\n","sig":null,"attributes":[{"value":"/ Concrete implementation of Hasher using Blake2b 256-bit hashes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hasher.rs","byte_start":152237,"byte_end":152303,"line_start":25,"line_end":25,"column_start":2,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2798},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hasher.rs","byte_start":152755,"byte_end":152767,"line_start":47,"line_end":47,"column_start":13,"column_end":25},"name":"KeccakHasher","qualname":"::hasher::keccak::KeccakHasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" Concrete implementation of Hasher using Keccak 256-bit hashes\n","sig":null,"attributes":[{"value":"/ Concrete implementation of Hasher using Keccak 256-bit hashes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hasher.rs","byte_start":152659,"byte_end":152724,"line_start":45,"line_end":45,"column_start":2,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":1437},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offchain","qualname":"::offchain","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":4179},{"krate":0,"index":1440},{"krate":0,"index":4181},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":4189},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":4195},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":4199},{"krate":0,"index":1454},{"krate":0,"index":1472},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":2869},{"krate":0,"index":2951},{"krate":0,"index":2950},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2938},{"krate":0,"index":2932},{"krate":0,"index":2930},{"krate":0,"index":2921},{"krate":0,"index":2915},{"krate":0,"index":2876},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":2953},{"krate":0,"index":3001},{"krate":0,"index":3000},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2987},{"krate":0,"index":2985},{"krate":0,"index":2983},{"krate":0,"index":2973},{"krate":0,"index":2968},{"krate":0,"index":2959},{"krate":0,"index":2956},{"krate":0,"index":1550},{"krate":0,"index":3003},{"krate":0,"index":3043},{"krate":0,"index":3042},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3034},{"krate":0,"index":3028},{"krate":0,"index":3022},{"krate":0,"index":3013},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":3045},{"krate":0,"index":3081},{"krate":0,"index":3080},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3071},{"krate":0,"index":3065},{"krate":0,"index":3059},{"krate":0,"index":3055},{"krate":0,"index":1557},{"krate":0,"index":1559},{"krate":0,"index":3083},{"krate":0,"index":3112},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3099},{"krate":0,"index":3094},{"krate":0,"index":3092},{"krate":0,"index":3088},{"krate":0,"index":3086},{"krate":0,"index":3114},{"krate":0,"index":3150},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3133},{"krate":0,"index":3128},{"krate":0,"index":3126},{"krate":0,"index":3117},{"krate":0,"index":1563},{"krate":0,"index":3152},{"krate":0,"index":3199},{"krate":0,"index":3198},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3189},{"krate":0,"index":3183},{"krate":0,"index":3181},{"krate":0,"index":3179},{"krate":0,"index":3170},{"krate":0,"index":3160},{"krate":0,"index":3155},{"krate":0,"index":3201},{"krate":0,"index":3248},{"krate":0,"index":3247},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3238},{"krate":0,"index":3232},{"krate":0,"index":3230},{"krate":0,"index":3228},{"krate":0,"index":3219},{"krate":0,"index":3209},{"krate":0,"index":3204},{"krate":0,"index":1565},{"krate":0,"index":1568},{"krate":0,"index":3250},{"krate":0,"index":3284},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3276},{"krate":0,"index":3275},{"krate":0,"index":3286},{"krate":0,"index":3299},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3290},{"krate":0,"index":3289},{"krate":0,"index":1574},{"krate":0,"index":1580},{"krate":0,"index":1584},{"krate":0,"index":1602},{"krate":0,"index":1621},{"krate":0,"index":1625},{"krate":0,"index":1629},{"krate":0,"index":3301},{"krate":0,"index":3304},{"krate":0,"index":3306},{"krate":0,"index":3309},{"krate":0,"index":3311},{"krate":0,"index":1648},{"krate":0,"index":1651},{"krate":0,"index":3313},{"krate":0,"index":3316},{"krate":0,"index":3318},{"krate":0,"index":3321},{"krate":0,"index":3323},{"krate":0,"index":1653},{"krate":0,"index":3325},{"krate":0,"index":3343},{"krate":0,"index":3341},{"krate":0,"index":3338},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3331},{"krate":0,"index":3332}],"decl_id":null,"docs":" Offchain workers types\n","sig":null,"attributes":[{"value":"/ Offchain workers types","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":153658,"byte_end":153684,"line_start":18,"line_end":18,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":1454},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::offchain::storage","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":2802},{"krate":0,"index":2808},{"krate":0,"index":2806},{"krate":0,"index":2804},{"krate":0,"index":1460},{"krate":0,"index":1467}],"decl_id":null,"docs":" In-memory implementation of offchain workers database.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":153920,"byte_end":153943,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ In-memory implementation of offchain workers database.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":178668,"byte_end":178726,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2802},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":178930,"byte_end":178950,"line_start":26,"line_end":26,"column_start":12,"column_end":32},"name":"InMemOffchainStorage","qualname":"::offchain::storage::InMemOffchainStorage","value":"InMemOffchainStorage {  }","parent":null,"children":[{"krate":0,"index":2803}],"decl_id":null,"docs":" In-memory storage for offchain workers.\n","sig":null,"attributes":[{"value":"/ In-memory storage for offchain workers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":178842,"byte_end":178885,"line_start":24,"line_end":24,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":179101,"byte_end":179110,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"name":"into_iter","qualname":"<InMemOffchainStorage>::into_iter","value":"pub fn into_iter(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume the offchain storage and iterate over all key value pairs.\n","sig":null,"attributes":[{"value":"/ Consume the offchain storage and iterate over all key value pairs.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":179022,"byte_end":179092,"line_start":31,"line_end":31,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":179251,"byte_end":179255,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"name":"iter","qualname":"<InMemOffchainStorage>::iter","value":"pub fn iter<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all key value pairs by reference.\n","sig":null,"attributes":[{"value":"/ Iterate over all key value pairs by reference.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":179192,"byte_end":179242,"line_start":36,"line_end":36,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":179426,"byte_end":179432,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"name":"remove","qualname":"<InMemOffchainStorage>::remove","value":"pub fn remove(&mut Self, &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Remove a key and its associated value from the offchain database.\n","sig":null,"attributes":[{"value":"/ Remove a key and its associated value from the offchain database.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":179348,"byte_end":179417,"line_start":41,"line_end":41,"column_start":2,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":1472},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"testing","qualname":"::offchain::testing","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":4215},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":4225},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":4229},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":2810},{"krate":0,"index":2829},{"krate":0,"index":2827},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2831},{"krate":0,"index":2837},{"krate":0,"index":2835},{"krate":0,"index":2833},{"krate":0,"index":1492},{"krate":0,"index":1498},{"krate":0,"index":2839},{"krate":0,"index":2849},{"krate":0,"index":2847},{"krate":0,"index":1503},{"krate":0,"index":1509},{"krate":0,"index":2851},{"krate":0,"index":2858},{"krate":0,"index":2856},{"krate":0,"index":2854},{"krate":0,"index":1511},{"krate":0,"index":1514},{"krate":0,"index":2860},{"krate":0,"index":2862},{"krate":0,"index":2864},{"krate":0,"index":2867},{"krate":0,"index":1535},{"krate":0,"index":1537}],"decl_id":null,"docs":" Utilities for offchain calls testing.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":153961,"byte_end":153984,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/ Utilities for offchain calls testing.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181292,"byte_end":181333,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181334,"byte_end":181337,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Namely all ExecutionExtensions that allow mocking","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181338,"byte_end":181391,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/ the extra APIs.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181392,"byte_end":181411,"line_start":21,"line_end":21,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2810},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181852,"byte_end":181866,"line_start":46,"line_end":46,"column_start":12,"column_end":26},"name":"PendingRequest","qualname":"::offchain::testing::PendingRequest","value":"PendingRequest { method, uri, meta, headers, body, sent, response, read, response_headers }","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819}],"decl_id":null,"docs":" Pending request.\n","sig":null,"attributes":[{"value":"/ Pending request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181779,"byte_end":181799,"line_start":44,"line_end":44,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2811},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181891,"byte_end":181897,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"name":"method","qualname":"::offchain::testing::PendingRequest::method","value":"std::string::String","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" HTTP method\n","sig":null,"attributes":[{"value":"/ HTTP method","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181870,"byte_end":181885,"line_start":47,"line_end":47,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":2812},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181921,"byte_end":181924,"line_start":50,"line_end":50,"column_start":6,"column_end":9},"name":"uri","qualname":"::offchain::testing::PendingRequest::uri","value":"std::string::String","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" URI\n","sig":null,"attributes":[{"value":"/ URI","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181908,"byte_end":181915,"line_start":49,"line_end":49,"column_start":2,"column_end":9}}]},{"kind":"Field","id":{"krate":0,"index":2813},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181961,"byte_end":181965,"line_start":52,"line_end":52,"column_start":6,"column_end":10},"name":"meta","qualname":"::offchain::testing::PendingRequest::meta","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" Encoded Metadata\n","sig":null,"attributes":[{"value":"/ Encoded Metadata","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181935,"byte_end":181955,"line_start":51,"line_end":51,"column_start":2,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2814},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182002,"byte_end":182009,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"name":"headers","qualname":"::offchain::testing::PendingRequest::headers","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" Request headers\n","sig":null,"attributes":[{"value":"/ Request headers","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":181977,"byte_end":181996,"line_start":53,"line_end":53,"column_start":2,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2815},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182057,"byte_end":182061,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"name":"body","qualname":"::offchain::testing::PendingRequest::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" Request body\n","sig":null,"attributes":[{"value":"/ Request body","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182035,"byte_end":182051,"line_start":55,"line_end":55,"column_start":2,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2816},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182117,"byte_end":182121,"line_start":58,"line_end":58,"column_start":6,"column_end":10},"name":"sent","qualname":"::offchain::testing::PendingRequest::sent","value":"bool","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" Has the request been sent already.\n","sig":null,"attributes":[{"value":"/ Has the request been sent already.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182073,"byte_end":182111,"line_start":57,"line_end":57,"column_start":2,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2817},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182153,"byte_end":182161,"line_start":60,"line_end":60,"column_start":6,"column_end":14},"name":"response","qualname":"::offchain::testing::PendingRequest::response","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" Response body\n","sig":null,"attributes":[{"value":"/ Response body","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182130,"byte_end":182147,"line_start":59,"line_end":59,"column_start":2,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":2818},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182243,"byte_end":182247,"line_start":62,"line_end":62,"column_start":6,"column_end":10},"name":"read","qualname":"::offchain::testing::PendingRequest::read","value":"usize","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" Number of bytes already read from the response body.\n","sig":null,"attributes":[{"value":"/ Number of bytes already read from the response body.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182181,"byte_end":182237,"line_start":61,"line_end":61,"column_start":2,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2819},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182283,"byte_end":182299,"line_start":64,"line_end":64,"column_start":6,"column_end":22},"name":"response_headers","qualname":"::offchain::testing::PendingRequest::response_headers","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" Response headers\n","sig":null,"attributes":[{"value":"/ Response headers","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182257,"byte_end":182277,"line_start":63,"line_end":63,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2831},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182424,"byte_end":182448,"line_start":69,"line_end":69,"column_start":12,"column_end":36},"name":"TestPersistentOffchainDB","qualname":"::offchain::testing::TestPersistentOffchainDB","value":"TestPersistentOffchainDB {  }","parent":null,"children":[{"krate":0,"index":2832}],"decl_id":null,"docs":" Sharable \"persistent\" offchain storage for test.\n","sig":null,"attributes":[{"value":"/ Sharable \"persistent\" offchain storage for test.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182327,"byte_end":182379,"line_start":67,"line_end":67,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182648,"byte_end":182651,"line_start":77,"line_end":77,"column_start":9,"column_end":12},"name":"new","qualname":"<TestPersistentOffchainDB>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new and empty offchain storage db for persistent items\n","sig":null,"attributes":[{"value":"/ Create a new and empty offchain storage db for persistent items","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182572,"byte_end":182639,"line_start":76,"line_end":76,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182826,"byte_end":182848,"line_start":84,"line_end":84,"column_start":9,"column_end":31},"name":"apply_offchain_changes","qualname":"<TestPersistentOffchainDB>::apply_offchain_changes","value":"pub fn apply_offchain_changes<impl Iterator<Item = ((Vec<u8>, Vec<u8>), OffchainOverlayedChange)>: Iterator<Item\n                              =\n                              ((Vec<u8>, Vec<u8>),\n                               OffchainOverlayedChange)>>(&mut Self,\n                                                          impl Iterator<Item = ((Vec<u8>, Vec<u8>), OffchainOverlayedChange)>)","parent":null,"children":[],"decl_id":null,"docs":" Apply a set of off-chain changes directly to the test backend\n","sig":null,"attributes":[{"value":"/ Apply a set of off-chain changes directly to the test backend","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182752,"byte_end":182817,"line_start":83,"line_end":83,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":183312,"byte_end":183315,"line_start":98,"line_end":98,"column_start":9,"column_end":12},"name":"get","qualname":"<TestPersistentOffchainDB>::get","value":"pub fn get(&Self, &[u8]) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a key from the test backend.\n","sig":null,"attributes":[{"value":"/ Retrieve a key from the test backend.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":183262,"byte_end":183303,"line_start":97,"line_end":97,"column_start":2,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2839},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184159,"byte_end":184172,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"OffchainState","qualname":"::offchain::testing::OffchainState","value":"OffchainState { requests, persistent_storage, local_storage, seed, timestamp }","parent":null,"children":[{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2846}],"decl_id":null,"docs":" Internal state of the externalities.","sig":null,"attributes":[{"value":"/ Internal state of the externalities.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184000,"byte_end":184040,"line_start":128,"line_end":128,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184041,"byte_end":184044,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This can be used in tests to respond or assert stuff about interactions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184045,"byte_end":184121,"line_start":130,"line_end":130,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2840},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184213,"byte_end":184221,"line_start":134,"line_end":134,"column_start":6,"column_end":14},"name":"requests","qualname":"::offchain::testing::OffchainState::requests","value":"std::collections::BTreeMap<offchain::HttpRequestId, offchain::testing::PendingRequest>","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":" A list of pending requests.\n","sig":null,"attributes":[{"value":"/ A list of pending requests.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184176,"byte_end":184207,"line_start":133,"line_end":133,"column_start":2,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2842},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184412,"byte_end":184430,"line_start":138,"line_end":138,"column_start":6,"column_end":24},"name":"persistent_storage","qualname":"::offchain::testing::OffchainState::persistent_storage","value":"offchain::testing::TestPersistentOffchainDB","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":" Persistent local storage\n","sig":null,"attributes":[{"value":"/ Persistent local storage","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184378,"byte_end":184406,"line_start":137,"line_end":137,"column_start":2,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2843},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184482,"byte_end":184495,"line_start":140,"line_end":140,"column_start":6,"column_end":19},"name":"local_storage","qualname":"::offchain::testing::OffchainState::local_storage","value":"offchain::storage::InMemOffchainStorage","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":" Local storage\n","sig":null,"attributes":[{"value":"/ Local storage","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184459,"byte_end":184476,"line_start":139,"line_end":139,"column_start":2,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":2844},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184555,"byte_end":184559,"line_start":142,"line_end":142,"column_start":6,"column_end":10},"name":"seed","qualname":"::offchain::testing::OffchainState::seed","value":"[u8; 32]","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":" A supposedly random seed.\n","sig":null,"attributes":[{"value":"/ A supposedly random seed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184520,"byte_end":184549,"line_start":141,"line_end":141,"column_start":2,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2846},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184622,"byte_end":184631,"line_start":144,"line_end":144,"column_start":6,"column_end":15},"name":"timestamp","qualname":"::offchain::testing::OffchainState::timestamp","value":"offchain::Timestamp","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":" A timestamp simulating the current time.\n","sig":null,"attributes":[{"value":"/ A timestamp simulating the current time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184572,"byte_end":184616,"line_start":143,"line_end":143,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184754,"byte_end":184777,"line_start":149,"line_end":149,"column_start":9,"column_end":32},"name":"fulfill_pending_request","qualname":"<OffchainState>::fulfill_pending_request","value":"pub fn fulfill_pending_request<impl Into<Vec<u8>>: Into<Vec<u8>>,\n                               impl IntoIterator<Item = (String, String)>: IntoIterator<Item\n                               =\n                               (String,\n                                String)>>(&mut Self, u16, PendingRequest,\n                                          impl Into<Vec<u8>>,\n                                          impl IntoIterator<Item = (String, String)>)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that pending request has been submitted and fills it's response.\n","sig":null,"attributes":[{"value":"/ Asserts that pending request has been submitted and fills it's response.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184669,"byte_end":184745,"line_start":148,"line_end":148,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":186041,"byte_end":186055,"line_start":186,"line_end":186,"column_start":9,"column_end":23},"name":"expect_request","qualname":"<OffchainState>::expect_request","value":"pub fn expect_request(&mut Self, PendingRequest)","parent":null,"children":[],"decl_id":null,"docs":" Add expected HTTP request.","sig":null,"attributes":[{"value":"/ Add expected HTTP request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":185575,"byte_end":185605,"line_start":179,"line_end":179,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":185607,"byte_end":185610,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ This method can be used to initialize expected HTTP requests and their responses","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":185612,"byte_end":185696,"line_start":181,"line_end":181,"column_start":2,"column_end":86}},{"value":"/ before running the actual code that utilizes them (for instance before calling into runtime).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":185698,"byte_end":185795,"line_start":182,"line_end":182,"column_start":2,"column_end":99}},{"value":"/ Expected request has to be fulfilled before this struct is dropped,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":185797,"byte_end":185868,"line_start":183,"line_end":183,"column_start":2,"column_end":73}},{"value":"/ the `response` and `response_headers` fields will be used to return results to the callers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":185870,"byte_end":185965,"line_start":184,"line_end":184,"column_start":2,"column_end":97}},{"value":"/ Requests are expected to be performed in the insertion order.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":185967,"byte_end":186032,"line_start":185,"line_end":185,"column_start":2,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2851},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":186650,"byte_end":186665,"line_start":205,"line_end":205,"column_start":12,"column_end":27},"name":"TestOffchainExt","qualname":"::offchain::testing::TestOffchainExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of offchain externalities used for tests.\n","sig":null,"attributes":[{"value":"/ Implementation of offchain externalities used for tests.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":186545,"byte_end":186605,"line_start":203,"line_end":203,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":2853},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":186666,"byte_end":186696,"line_start":205,"line_end":205,"column_start":28,"column_end":58},"name":"0","qualname":"::offchain::testing::TestOffchainExt::0","value":"std::sync::Arc<parking_lot::lock_api::RwLock<parking_lot::RawRwLock, offchain::testing::OffchainState>>","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":186804,"byte_end":186807,"line_start":209,"line_end":209,"column_start":9,"column_end":12},"name":"new","qualname":"<TestOffchainExt>::new","value":"pub fn new() -> (Self, Arc<RwLock<OffchainState>>)","parent":null,"children":[],"decl_id":null,"docs":" Create new `TestOffchainExt` and a reference to the internal state.\n","sig":null,"attributes":[{"value":"/ Create new `TestOffchainExt` and a reference to the internal state.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":186724,"byte_end":186795,"line_start":208,"line_end":208,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":187008,"byte_end":187024,"line_start":216,"line_end":216,"column_start":9,"column_end":25},"name":"with_offchain_db","qualname":"<TestOffchainExt>::with_offchain_db","value":"pub fn with_offchain_db(TestPersistentOffchainDB)\n-> (Self, Arc<RwLock<OffchainState>>)","parent":null,"children":[],"decl_id":null,"docs":" Create new `TestOffchainExt` and a reference to the internal state.\n","sig":null,"attributes":[{"value":"/ Create new `TestOffchainExt` and a reference to the internal state.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":186928,"byte_end":186999,"line_start":215,"line_end":215,"column_start":2,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":2860},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":191691,"byte_end":191700,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"PoolState","qualname":"::offchain::testing::PoolState","value":"PoolState { transactions }","parent":null,"children":[{"krate":0,"index":2861}],"decl_id":null,"docs":" The internal state of the fake transaction pool.\n","sig":null,"attributes":[{"value":"/ The internal state of the fake transaction pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":191608,"byte_end":191660,"line_start":396,"line_end":396,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2861},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":191766,"byte_end":191778,"line_start":400,"line_end":400,"column_start":6,"column_end":18},"name":"transactions","qualname":"::offchain::testing::PoolState::transactions","value":"std::vec::Vec<std::vec::Vec<u8>>","parent":{"krate":0,"index":2860},"children":[],"decl_id":null,"docs":" A vector of transactions submitted from the runtime.\n","sig":null,"attributes":[{"value":"/ A vector of transactions submitted from the runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":191704,"byte_end":191760,"line_start":399,"line_end":399,"column_start":2,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2864},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":192194,"byte_end":192216,"line_start":413,"line_end":413,"column_start":12,"column_end":34},"name":"TestTransactionPoolExt","qualname":"::offchain::testing::TestTransactionPoolExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of transaction pool used for test.","sig":null,"attributes":[{"value":"/ Implementation of transaction pool used for test.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":191797,"byte_end":191850,"line_start":403,"line_end":403,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":191851,"byte_end":191854,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation does not verify correctness","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":191855,"byte_end":191916,"line_start":405,"line_end":405,"column_start":1,"column_end":62}},{"value":"/ of sent extrinsics. It's meant to be used in contexts","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":191917,"byte_end":191974,"line_start":406,"line_end":406,"column_start":1,"column_end":58}},{"value":"/ where an actual runtime is not known.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":191975,"byte_end":192016,"line_start":407,"line_end":407,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":192017,"byte_end":192020,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ It's advised to write integration tests that include the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":192021,"byte_end":192081,"line_start":409,"line_end":409,"column_start":1,"column_end":61}},{"value":"/ actual transaction pool to make sure the produced","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":192082,"byte_end":192135,"line_start":410,"line_end":410,"column_start":1,"column_end":54}},{"value":"/ transactions are valid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":192136,"byte_end":192163,"line_start":411,"line_end":411,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":192361,"byte_end":192364,"line_start":417,"line_end":417,"column_start":9,"column_end":12},"name":"new","qualname":"<TestTransactionPoolExt>::new","value":"pub fn new() -> (Self, Arc<RwLock<PoolState>>)","parent":null,"children":[],"decl_id":null,"docs":" Create new `TestTransactionPoolExt` and a reference to the internal state.\n","sig":null,"attributes":[{"value":"/ Create new `TestTransactionPoolExt` and a reference to the internal state.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":192274,"byte_end":192352,"line_start":416,"line_end":416,"column_start":2,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":1539},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154073,"byte_end":154087,"line_start":33,"line_end":33,"column_start":11,"column_end":25},"name":"STORAGE_PREFIX","qualname":"::offchain::STORAGE_PREFIX","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Local storage prefix used by the Offchain Worker API to\n","sig":null,"attributes":[{"value":"/ Local storage prefix used by the Offchain Worker API to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154003,"byte_end":154062,"line_start":32,"line_end":32,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1540},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154165,"byte_end":154180,"line_start":36,"line_end":36,"column_start":11,"column_end":26},"name":"OffchainStorage","qualname":"::offchain::OffchainStorage","value":"OffchainStorage: Clone + Send + Sync","parent":null,"children":[{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544}],"decl_id":null,"docs":" Offchain workers local storage.\n","sig":null,"attributes":[{"value":"/ Offchain workers local storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154119,"byte_end":154154,"line_start":35,"line_end":35,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154268,"byte_end":154271,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"name":"set","qualname":"::offchain::OffchainStorage::set","value":"pub fn set(&mut Self, &[u8], &[u8], &[u8])","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":" Persist a value in storage under given key and prefix.\n","sig":null,"attributes":[{"value":"/ Persist a value in storage under given key and prefix.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154205,"byte_end":154263,"line_start":37,"line_end":37,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154385,"byte_end":154391,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"remove","qualname":"::offchain::OffchainStorage::remove","value":"pub fn remove(&mut Self, &[u8], &[u8])","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":" Clear a storage entry under given key and prefix.\n","sig":null,"attributes":[{"value":"/ Clear a storage entry under given key and prefix.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154327,"byte_end":154380,"line_start":40,"line_end":40,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154499,"byte_end":154502,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"get","qualname":"::offchain::OffchainStorage::get","value":"pub fn get(&Self, &[u8], &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":" Retrieve a value from storage under given key and prefix.\n","sig":null,"attributes":[{"value":"/ Retrieve a value from storage under given key and prefix.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154433,"byte_end":154494,"line_start":43,"line_end":43,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154712,"byte_end":154727,"line_start":49,"line_end":49,"column_start":5,"column_end":20},"name":"compare_and_set","qualname":"::offchain::OffchainStorage::compare_and_set","value":"pub fn compare_and_set(&mut Self, &[u8], &[u8], Option<&[u8]>, &[u8]) -> bool","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":" Replace the value in storage if given old_value matches the current one.","sig":null,"attributes":[{"value":"/ Replace the value in storage if given old_value matches the current one.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154559,"byte_end":154635,"line_start":46,"line_end":46,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154637,"byte_end":154640,"line_start":47,"line_end":47,"column_start":2,"column_end":5}},{"value":"/ Returns `true` if the value has been set and false otherwise.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154642,"byte_end":154707,"line_start":48,"line_end":48,"column_start":2,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2870},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155476,"byte_end":155486,"line_start":69,"line_end":69,"column_start":2,"column_end":12},"name":"PERSISTENT","qualname":"::offchain::StorageKind::PERSISTENT","value":"StorageKind::PERSISTENT","parent":{"krate":0,"index":2869},"children":[],"decl_id":null,"docs":" Persistent storage is non-revertible and not fork-aware. It means that any value\n set by the offchain worker triggered at block `N(hash1)` is persisted even\n if that block is reverted as non-canonical and is available for the worker\n that is re-run at block `N(hash2)`.\n This storage can be used by offchain workers to handle forks\n and coordinate offchain workers running on different forks.\n","sig":null,"attributes":[{"value":"/ Persistent storage is non-revertible and not fork-aware. It means that any value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155058,"byte_end":155142,"line_start":63,"line_end":63,"column_start":2,"column_end":86}},{"value":"/ set by the offchain worker triggered at block `N(hash1)` is persisted even","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155144,"byte_end":155222,"line_start":64,"line_end":64,"column_start":2,"column_end":80}},{"value":"/ if that block is reverted as non-canonical and is available for the worker","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155224,"byte_end":155302,"line_start":65,"line_end":65,"column_start":2,"column_end":80}},{"value":"/ that is re-run at block `N(hash2)`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155304,"byte_end":155343,"line_start":66,"line_end":66,"column_start":2,"column_end":41}},{"value":"/ This storage can be used by offchain workers to handle forks","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155345,"byte_end":155409,"line_start":67,"line_end":67,"column_start":2,"column_end":66}},{"value":"/ and coordinate offchain workers running on different forks.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155411,"byte_end":155474,"line_start":68,"line_end":68,"column_start":2,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2873},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155765,"byte_end":155770,"line_start":74,"line_end":74,"column_start":2,"column_end":7},"name":"LOCAL","qualname":"::offchain::StorageKind::LOCAL","value":"StorageKind::LOCAL","parent":{"krate":0,"index":2869},"children":[],"decl_id":null,"docs":" Local storage is revertible and fork-aware. It means that any value\n set by the offchain worker triggered at block `N(hash1)` is reverted\n if that block is reverted as non-canonical and is NOT available for the worker\n that is re-run at block `N(hash2)`.\n","sig":null,"attributes":[{"value":"/ Local storage is revertible and fork-aware. It means that any value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155493,"byte_end":155564,"line_start":70,"line_end":70,"column_start":2,"column_end":73}},{"value":"/ set by the offchain worker triggered at block `N(hash1)` is reverted","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155566,"byte_end":155638,"line_start":71,"line_end":71,"column_start":2,"column_end":74}},{"value":"/ if that block is reverted as non-canonical and is NOT available for the worker","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155640,"byte_end":155722,"line_start":72,"line_end":72,"column_start":2,"column_end":84}},{"value":"/ that is re-run at block `N(hash2)`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155724,"byte_end":155763,"line_start":73,"line_end":73,"column_start":2,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2869},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155043,"byte_end":155054,"line_start":62,"line_end":62,"column_start":10,"column_end":21},"name":"StorageKind","qualname":"::offchain::StorageKind","value":"pub enum StorageKind {\n\n    /// Persistent storage is non-revertible and not fork-aware. It means that any value\n    /// set by the offchain worker triggered at block `N(hash1)` is persisted even\n    /// if that block is reverted as non-canonical and is available for the worker\n    /// that is re-run at block `N(hash2)`.\n    /// This storage can be used by offchain workers to handle forks\n    /// and coordinate offchain workers running on different forks.\n    PERSISTENT = ,\n\n    /// Local storage is revertible and fork-aware. It means that any value\n    /// set by the offchain worker triggered at block `N(hash1)` is reverted\n    /// if that block is reverted as non-canonical and is NOT available for the worker\n    /// that is re-run at block `N(hash2)`.\n    LOCAL = ,\n}","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2873}],"decl_id":null,"docs":" A type of supported crypto.\n","sig":null,"attributes":[{"value":"/ A type of supported crypto.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154836,"byte_end":154867,"line_start":58,"line_end":58,"column_start":1,"column_end":32}},{"value":"repr(C)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155023,"byte_end":155033,"line_start":61,"line_end":61,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":2953},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156380,"byte_end":156393,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"name":"HttpRequestId","qualname":"::offchain::HttpRequestId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Opaque type for offchain http requests.\n","sig":null,"attributes":[{"value":"/ Opaque type for offchain http requests.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156184,"byte_end":156227,"line_start":95,"line_end":95,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2955},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156394,"byte_end":156401,"line_start":98,"line_end":98,"column_start":26,"column_end":33},"name":"0","qualname":"::offchain::HttpRequestId::0","value":"u16","parent":{"krate":0,"index":2953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3004},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156727,"byte_end":156742,"line_start":111,"line_end":111,"column_start":2,"column_end":17},"name":"DeadlineReached","qualname":"::offchain::HttpError::DeadlineReached","value":"HttpError::DeadlineReached","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":" The requested action couldn't been completed within a deadline.\n","sig":null,"attributes":[{"value":"/ The requested action couldn't been completed within a deadline.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156658,"byte_end":156725,"line_start":110,"line_end":110,"column_start":2,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3007},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156806,"byte_end":156813,"line_start":113,"line_end":113,"column_start":2,"column_end":9},"name":"IoError","qualname":"::offchain::HttpError::IoError","value":"HttpError::IoError","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":" There was an IO Error while processing the request.\n","sig":null,"attributes":[{"value":"/ There was an IO Error while processing the request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156749,"byte_end":156804,"line_start":112,"line_end":112,"column_start":2,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3010},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156875,"byte_end":156882,"line_start":115,"line_end":115,"column_start":2,"column_end":9},"name":"Invalid","qualname":"::offchain::HttpError::Invalid","value":"HttpError::Invalid","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":" The ID of the request is invalid in this context.\n","sig":null,"attributes":[{"value":"/ The ID of the request is invalid in this context.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156820,"byte_end":156873,"line_start":114,"line_end":114,"column_start":2,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":3003},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156645,"byte_end":156654,"line_start":109,"line_end":109,"column_start":10,"column_end":19},"name":"HttpError","qualname":"::offchain::HttpError","value":"pub enum HttpError {\n\n    /// The requested action couldn't been completed within a deadline.\n    DeadlineReached = ,\n\n    /// There was an IO Error while processing the request.\n    IoError = ,\n\n    /// The ID of the request is invalid in this context.\n    Invalid = ,\n}","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":3010}],"decl_id":null,"docs":" An error enum returned by some http methods.\n","sig":null,"attributes":[{"value":"/ An error enum returned by some http methods.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156496,"byte_end":156544,"line_start":106,"line_end":106,"column_start":1,"column_end":49}},{"value":"repr(C)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156625,"byte_end":156635,"line_start":108,"line_end":108,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3046},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157698,"byte_end":157713,"line_start":144,"line_end":144,"column_start":2,"column_end":17},"name":"DeadlineReached","qualname":"::offchain::HttpRequestStatus::DeadlineReached","value":"HttpRequestStatus::DeadlineReached","parent":{"krate":0,"index":3045},"children":[],"decl_id":null,"docs":" Deadline was reached while we waited for this request to finish.","sig":null,"attributes":[{"value":"/ Deadline was reached while we waited for this request to finish.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157503,"byte_end":157571,"line_start":140,"line_end":140,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157573,"byte_end":157576,"line_start":141,"line_end":141,"column_start":2,"column_end":5}},{"value":"/ Note the deadline is controlled by the calling part, it not necessarily","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157578,"byte_end":157653,"line_start":142,"line_end":142,"column_start":2,"column_end":77}},{"value":"/ means that the request has timed out.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157655,"byte_end":157696,"line_start":143,"line_end":143,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3048},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157936,"byte_end":157943,"line_start":150,"line_end":150,"column_start":2,"column_end":9},"name":"IoError","qualname":"::offchain::HttpRequestStatus::IoError","value":"HttpRequestStatus::IoError","parent":{"krate":0,"index":3045},"children":[],"decl_id":null,"docs":" An error has occurred during the request, for example a timeout or the\n remote has closed our socket.","sig":null,"attributes":[{"value":"/ An error has occurred during the request, for example a timeout or the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157716,"byte_end":157790,"line_start":145,"line_end":145,"column_start":2,"column_end":76}},{"value":"/ remote has closed our socket.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157792,"byte_end":157825,"line_start":146,"line_end":146,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157827,"byte_end":157830,"line_start":147,"line_end":147,"column_start":2,"column_end":5}},{"value":"/ The request is now considered destroyed. To retry the request you need","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157832,"byte_end":157906,"line_start":148,"line_end":148,"column_start":2,"column_end":76}},{"value":"/ to construct it again.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157908,"byte_end":157934,"line_start":149,"line_end":149,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3050},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157993,"byte_end":158000,"line_start":152,"line_end":152,"column_start":2,"column_end":9},"name":"Invalid","qualname":"::offchain::HttpRequestStatus::Invalid","value":"HttpRequestStatus::Invalid","parent":{"krate":0,"index":3045},"children":[],"decl_id":null,"docs":" The passed ID is invalid in this context.\n","sig":null,"attributes":[{"value":"/ The passed ID is invalid in this context.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157946,"byte_end":157991,"line_start":151,"line_end":151,"column_start":2,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3052},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":158057,"byte_end":158065,"line_start":154,"line_end":154,"column_start":2,"column_end":10},"name":"Finished","qualname":"::offchain::HttpRequestStatus::Finished","value":"HttpRequestStatus::Finished(u16)","parent":{"krate":0,"index":3045},"children":[],"decl_id":null,"docs":" The request has finished with given status code.\n","sig":null,"attributes":[{"value":"/ The request has finished with given status code.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":158003,"byte_end":158055,"line_start":153,"line_end":153,"column_start":2,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":3045},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157482,"byte_end":157499,"line_start":139,"line_end":139,"column_start":10,"column_end":27},"name":"HttpRequestStatus","qualname":"::offchain::HttpRequestStatus","value":"pub enum HttpRequestStatus {\n\n    /// Deadline was reached while we waited for this request to finish.\n    ///\n    /// Note the deadline is controlled by the calling part, it not necessarily\n    /// means that the request has timed out.\n    DeadlineReached,\n\n    /// An error has occurred during the request, for example a timeout or the\n    /// remote has closed our socket.\n    ///\n    /// The request is now considered destroyed. To retry the request you need\n    /// to construct it again.\n    IoError,\n\n    /// The passed ID is invalid in this context.\n    Invalid,\n\n    /// The request has finished with given status code.\n    Finished(u16),\n}","parent":null,"children":[{"krate":0,"index":3046},{"krate":0,"index":3048},{"krate":0,"index":3050},{"krate":0,"index":3052}],"decl_id":null,"docs":" Status of the HTTP request\n","sig":null,"attributes":[{"value":"/ Status of the HTTP request","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":157361,"byte_end":157391,"line_start":137,"line_end":137,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3083},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":158980,"byte_end":158998,"line_start":186,"line_end":186,"column_start":12,"column_end":30},"name":"OpaqueNetworkState","qualname":"::offchain::OpaqueNetworkState","value":"OpaqueNetworkState { peer_id, external_addresses }","parent":null,"children":[{"krate":0,"index":3084},{"krate":0,"index":3085}],"decl_id":null,"docs":" A blob to hold information about the local node's network state\n without committing to its format.\n","sig":null,"attributes":[{"value":"/ A blob to hold information about the local node's network state","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":158742,"byte_end":158809,"line_start":182,"line_end":182,"column_start":1,"column_end":68}},{"value":"/ without committing to its format.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":158810,"byte_end":158847,"line_start":183,"line_end":183,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3084},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159054,"byte_end":159061,"line_start":188,"line_end":188,"column_start":6,"column_end":13},"name":"peer_id","qualname":"::offchain::OpaqueNetworkState::peer_id","value":"OpaquePeerId","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" PeerId of the local node in SCALE encoded.\n","sig":null,"attributes":[{"value":"/ PeerId of the local node in SCALE encoded.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159002,"byte_end":159048,"line_start":187,"line_end":187,"column_start":2,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3085},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159142,"byte_end":159160,"line_start":190,"line_end":190,"column_start":6,"column_end":24},"name":"external_addresses","qualname":"::offchain::OpaqueNetworkState::external_addresses","value":"std::vec::Vec<offchain::OpaqueMultiaddr>","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" List of addresses the node knows it can be reached as.\n","sig":null,"attributes":[{"value":"/ List of addresses the node knows it can be reached as.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159078,"byte_end":159136,"line_start":189,"line_end":189,"column_start":2,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3114},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159345,"byte_end":159360,"line_start":195,"line_end":195,"column_start":12,"column_end":27},"name":"OpaqueMultiaddr","qualname":"::offchain::OpaqueMultiaddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple blob to hold a `Multiaddr` without committing to its format.\n","sig":null,"attributes":[{"value":"/ Simple blob to hold a `Multiaddr` without committing to its format.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159187,"byte_end":159258,"line_start":193,"line_end":193,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3116},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159361,"byte_end":159372,"line_start":195,"line_end":195,"column_start":28,"column_end":39},"name":"0","qualname":"::offchain::OpaqueMultiaddr::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159441,"byte_end":159444,"line_start":199,"line_end":199,"column_start":9,"column_end":12},"name":"new","qualname":"<OpaqueMultiaddr>::new","value":"pub fn new(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `OpaqueMultiaddr`\n","sig":null,"attributes":[{"value":"/ Create new `OpaqueMultiaddr`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159400,"byte_end":159432,"line_start":198,"line_end":198,"column_start":2,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3152},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159642,"byte_end":159651,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::offchain::Timestamp","value":"","parent":null,"children":[],"decl_id":null,"docs":" Opaque timestamp type\n","sig":null,"attributes":[{"value":"/ Opaque timestamp type","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159498,"byte_end":159523,"line_start":204,"line_end":204,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3201},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159795,"byte_end":159803,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"Duration","qualname":"::offchain::Duration","value":"","parent":null,"children":[],"decl_id":null,"docs":" Duration type\n","sig":null,"attributes":[{"value":"/ Duration type","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159659,"byte_end":159676,"line_start":208,"line_end":208,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159909,"byte_end":159920,"line_start":214,"line_end":214,"column_start":15,"column_end":26},"name":"from_millis","qualname":"<Duration>::from_millis","value":"pub const fn from_millis(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new duration representing given number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create new duration representing given number of milliseconds.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159828,"byte_end":159894,"line_start":213,"line_end":213,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160037,"byte_end":160043,"line_start":219,"line_end":219,"column_start":9,"column_end":15},"name":"millis","qualname":"<Duration>::millis","value":"pub fn millis(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns number of milliseconds this Duration represents.\n","sig":null,"attributes":[{"value":"/ Returns number of milliseconds this Duration represents.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159968,"byte_end":160028,"line_start":218,"line_end":218,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160167,"byte_end":160183,"line_start":226,"line_end":226,"column_start":9,"column_end":25},"name":"from_unix_millis","qualname":"<Timestamp>::from_unix_millis","value":"pub fn from_unix_millis(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Timestamp` given unix timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"/ Creates new `Timestamp` given unix timestamp in milliseconds.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160093,"byte_end":160158,"line_start":225,"line_end":225,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160288,"byte_end":160291,"line_start":231,"line_end":231,"column_start":9,"column_end":12},"name":"add","qualname":"<Timestamp>::add","value":"pub fn add(&Self, Duration) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":" Increase the timestamp by given `Duration`.\n","sig":null,"attributes":[{"value":"/ Increase the timestamp by given `Duration`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160232,"byte_end":160279,"line_start":230,"line_end":230,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160441,"byte_end":160444,"line_start":236,"line_end":236,"column_start":9,"column_end":12},"name":"sub","qualname":"<Timestamp>::sub","value":"pub fn sub(&Self, Duration) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":" Decrease the timestamp by given `Duration`\n","sig":null,"attributes":[{"value":"/ Decrease the timestamp by given `Duration`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160386,"byte_end":160432,"line_start":235,"line_end":235,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160617,"byte_end":160621,"line_start":241,"line_end":241,"column_start":9,"column_end":13},"name":"diff","qualname":"<Timestamp>::diff","value":"pub fn diff(&Self, &Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns a saturated difference (Duration) between two Timestamps.\n","sig":null,"attributes":[{"value":"/ Returns a saturated difference (Duration) between two Timestamps.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160539,"byte_end":160608,"line_start":240,"line_end":240,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160765,"byte_end":160776,"line_start":246,"line_end":246,"column_start":9,"column_end":20},"name":"unix_millis","qualname":"<Timestamp>::unix_millis","value":"pub fn unix_millis(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return number of milliseconds since UNIX epoch.\n","sig":null,"attributes":[{"value":"/ Return number of milliseconds since UNIX epoch.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160705,"byte_end":160756,"line_start":245,"line_end":245,"column_start":2,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3251},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160963,"byte_end":160978,"line_start":256,"line_end":256,"column_start":2,"column_end":17},"name":"TransactionPool","qualname":"::offchain::Capability::TransactionPool","value":"Capability::TransactionPool","parent":{"krate":0,"index":3250},"children":[],"decl_id":null,"docs":" Access to transaction pool.\n","sig":null,"attributes":[{"value":"/ Access to transaction pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160930,"byte_end":160961,"line_start":255,"line_end":255,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3254},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161011,"byte_end":161015,"line_start":258,"line_end":258,"column_start":2,"column_end":6},"name":"Http","qualname":"::offchain::Capability::Http","value":"Capability::Http","parent":{"krate":0,"index":3250},"children":[],"decl_id":null,"docs":" External http calls.\n","sig":null,"attributes":[{"value":"/ External http calls.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160985,"byte_end":161009,"line_start":257,"line_end":257,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3257},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161044,"byte_end":161052,"line_start":260,"line_end":260,"column_start":2,"column_end":10},"name":"Keystore","qualname":"::offchain::Capability::Keystore","value":"Capability::Keystore","parent":{"krate":0,"index":3250},"children":[],"decl_id":null,"docs":" Keystore access.\n","sig":null,"attributes":[{"value":"/ Keystore access.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161022,"byte_end":161042,"line_start":259,"line_end":259,"column_start":2,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3260},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161083,"byte_end":161093,"line_start":262,"line_end":262,"column_start":2,"column_end":12},"name":"Randomness","qualname":"::offchain::Capability::Randomness","value":"Capability::Randomness","parent":{"krate":0,"index":3250},"children":[],"decl_id":null,"docs":" Randomness source.\n","sig":null,"attributes":[{"value":"/ Randomness source.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161059,"byte_end":161081,"line_start":261,"line_end":261,"column_start":2,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3263},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161137,"byte_end":161149,"line_start":264,"line_end":264,"column_start":2,"column_end":14},"name":"NetworkState","qualname":"::offchain::Capability::NetworkState","value":"Capability::NetworkState","parent":{"krate":0,"index":3250},"children":[],"decl_id":null,"docs":" Access to opaque network state.\n","sig":null,"attributes":[{"value":"/ Access to opaque network state.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161100,"byte_end":161135,"line_start":263,"line_end":263,"column_start":2,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3266},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161204,"byte_end":161224,"line_start":266,"line_end":266,"column_start":2,"column_end":22},"name":"OffchainWorkerDbRead","qualname":"::offchain::Capability::OffchainWorkerDbRead","value":"Capability::OffchainWorkerDbRead","parent":{"krate":0,"index":3250},"children":[],"decl_id":null,"docs":" Access to offchain worker DB (read only).\n","sig":null,"attributes":[{"value":"/ Access to offchain worker DB (read only).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161157,"byte_end":161202,"line_start":265,"line_end":265,"column_start":2,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3269},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161276,"byte_end":161297,"line_start":268,"line_end":268,"column_start":2,"column_end":23},"name":"OffchainWorkerDbWrite","qualname":"::offchain::Capability::OffchainWorkerDbWrite","value":"Capability::OffchainWorkerDbWrite","parent":{"krate":0,"index":3250},"children":[],"decl_id":null,"docs":" Access to offchain worker DB (writes).\n","sig":null,"attributes":[{"value":"/ Access to offchain worker DB (writes).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161232,"byte_end":161274,"line_start":267,"line_end":267,"column_start":2,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3272},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161338,"byte_end":161355,"line_start":270,"line_end":270,"column_start":2,"column_end":19},"name":"NodeAuthorization","qualname":"::offchain::Capability::NodeAuthorization","value":"Capability::NodeAuthorization","parent":{"krate":0,"index":3250},"children":[],"decl_id":null,"docs":" Manage the authorized nodes\n","sig":null,"attributes":[{"value":"/ Manage the authorized nodes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161305,"byte_end":161336,"line_start":269,"line_end":269,"column_start":2,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":3250},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160916,"byte_end":160926,"line_start":254,"line_end":254,"column_start":10,"column_end":20},"name":"Capability","qualname":"::offchain::Capability","value":"pub enum Capability {\n\n    /// Access to transaction pool.\n    TransactionPool = ,\n\n    /// External http calls.\n    Http = ,\n\n    /// Keystore access.\n    Keystore = ,\n\n    /// Randomness source.\n    Randomness = ,\n\n    /// Access to opaque network state.\n    NetworkState = ,\n\n    /// Access to offchain worker DB (read only).\n    OffchainWorkerDbRead = ,\n\n    /// Access to offchain worker DB (writes).\n    OffchainWorkerDbWrite = ,\n\n    /// Manage the authorized nodes\n    NodeAuthorization = ,\n}","parent":null,"children":[{"krate":0,"index":3251},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":3272}],"decl_id":null,"docs":" Execution context extra capabilities.\n","sig":null,"attributes":[{"value":"/ Execution context extra capabilities.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160808,"byte_end":160849,"line_start":251,"line_end":251,"column_start":1,"column_end":42}},{"value":"repr(u8)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160895,"byte_end":160906,"line_start":253,"line_end":253,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3286},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161448,"byte_end":161460,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"Capabilities","qualname":"::offchain::Capabilities","value":"","parent":null,"children":[],"decl_id":null,"docs":" A set of capabilities\n","sig":null,"attributes":[{"value":"/ A set of capabilities","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161366,"byte_end":161391,"line_start":273,"line_end":273,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161560,"byte_end":161564,"line_start":279,"line_end":279,"column_start":9,"column_end":13},"name":"none","qualname":"<Capabilities>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return an object representing an empty set of capabilities.\n","sig":null,"attributes":[{"value":"/ Return an object representing an empty set of capabilities.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161488,"byte_end":161551,"line_start":278,"line_end":278,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161660,"byte_end":161663,"line_start":284,"line_end":284,"column_start":9,"column_end":12},"name":"all","qualname":"<Capabilities>::all","value":"pub fn all() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return an object representing all capabilities enabled.\n","sig":null,"attributes":[{"value":"/ Return an object representing all capabilities enabled.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161592,"byte_end":161651,"line_start":283,"line_end":283,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161894,"byte_end":161912,"line_start":292,"line_end":292,"column_start":9,"column_end":27},"name":"rich_offchain_call","qualname":"<Capabilities>::rich_offchain_call","value":"pub fn rich_offchain_call() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return capabilities for rich offchain calls.","sig":null,"attributes":[{"value":"/ Return capabilities for rich offchain calls.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161705,"byte_end":161753,"line_start":288,"line_end":288,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161755,"byte_end":161758,"line_start":289,"line_end":289,"column_start":2,"column_end":5}},{"value":"/ Those calls should be allowed to sign and submit transactions","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161760,"byte_end":161825,"line_start":290,"line_end":290,"column_start":2,"column_end":67}},{"value":"/ and access offchain workers database (but read only!).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161827,"byte_end":161885,"line_start":291,"line_end":291,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162098,"byte_end":162101,"line_start":301,"line_end":301,"column_start":9,"column_end":12},"name":"has","qualname":"<Capabilities>::has","value":"pub fn has(&Self, Capability) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if particular capability is enabled.\n","sig":null,"attributes":[{"value":"/ Check if particular capability is enabled.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162043,"byte_end":162089,"line_start":300,"line_end":300,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162254,"byte_end":162261,"line_start":306,"line_end":306,"column_start":9,"column_end":16},"name":"has_all","qualname":"<Capabilities>::has_all","value":"pub fn has_all(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this capability object represents all capabilities.\n","sig":null,"attributes":[{"value":"/ Check if this capability object represents all capabilities.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162181,"byte_end":162245,"line_start":305,"line_end":305,"column_start":2,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":1584},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162538,"byte_end":162551,"line_start":318,"line_end":318,"column_start":11,"column_end":24},"name":"Externalities","qualname":"::offchain::Externalities","value":"Externalities: Send","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601}],"decl_id":null,"docs":" An extended externalities for offchain workers.\n","sig":null,"attributes":[{"value":"/ An extended externalities for offchain workers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162476,"byte_end":162527,"line_start":317,"line_end":317,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162771,"byte_end":162783,"line_start":323,"line_end":323,"column_start":5,"column_end":17},"name":"is_validator","qualname":"::offchain::Externalities::is_validator","value":"pub fn is_validator(&Self) -> bool","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Returns if the local node is a potential validator.","sig":null,"attributes":[{"value":"/ Returns if the local node is a potential validator.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162561,"byte_end":162616,"line_start":319,"line_end":319,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162618,"byte_end":162621,"line_start":320,"line_end":320,"column_start":2,"column_end":5}},{"value":"/ Even if this function returns `true`, it does not mean that any keys are configured","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162623,"byte_end":162710,"line_start":321,"line_end":321,"column_start":2,"column_end":89}},{"value":"/ and that the validator is registered in the chain.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162712,"byte_end":162766,"line_start":322,"line_end":322,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162868,"byte_end":162881,"line_start":326,"line_end":326,"column_start":5,"column_end":18},"name":"network_state","qualname":"::offchain::Externalities::network_state","value":"pub fn network_state(&Self) -> Result<OpaqueNetworkState, ()>","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Returns information about the local node's network state.\n","sig":null,"attributes":[{"value":"/ Returns information about the local node's network state.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162802,"byte_end":162863,"line_start":325,"line_end":325,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162977,"byte_end":162986,"line_start":329,"line_end":329,"column_start":5,"column_end":14},"name":"timestamp","qualname":"::offchain::Externalities::timestamp","value":"pub fn timestamp(&mut Self) -> Timestamp","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Returns current UNIX timestamp (in millis)\n","sig":null,"attributes":[{"value":"/ Returns current UNIX timestamp (in millis)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162926,"byte_end":162972,"line_start":328,"line_end":328,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163071,"byte_end":163082,"line_start":332,"line_end":332,"column_start":5,"column_end":16},"name":"sleep_until","qualname":"::offchain::Externalities::sleep_until","value":"pub fn sleep_until(&mut Self, Timestamp)","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Pause the execution until `deadline` is reached.\n","sig":null,"attributes":[{"value":"/ Pause the execution until `deadline` is reached.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163014,"byte_end":163066,"line_start":331,"line_end":331,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163289,"byte_end":163300,"line_start":338,"line_end":338,"column_start":5,"column_end":16},"name":"random_seed","qualname":"::offchain::Externalities::random_seed","value":"pub fn random_seed(&mut Self) -> [u8; ]","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Returns a random seed.","sig":null,"attributes":[{"value":"/ Returns a random seed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163118,"byte_end":163144,"line_start":334,"line_end":334,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163146,"byte_end":163149,"line_start":335,"line_end":335,"column_start":2,"column_end":5}},{"value":"/ This is a truly random non deterministic seed generated by host environment.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163151,"byte_end":163231,"line_start":336,"line_end":336,"column_start":2,"column_end":82}},{"value":"/ Obviously fine in the off-chain worker context.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163233,"byte_end":163284,"line_start":337,"line_end":337,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163540,"byte_end":163557,"line_start":344,"line_end":344,"column_start":5,"column_end":22},"name":"local_storage_set","qualname":"::offchain::Externalities::local_storage_set","value":"pub fn local_storage_set(&mut Self, StorageKind, &[u8], &[u8])","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Sets a value in the local storage.","sig":null,"attributes":[{"value":"/ Sets a value in the local storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163327,"byte_end":163365,"line_start":340,"line_end":340,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163367,"byte_end":163370,"line_start":341,"line_end":341,"column_start":2,"column_end":5}},{"value":"/ Note this storage is not part of the consensus, it's only accessible by","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163372,"byte_end":163447,"line_start":342,"line_end":342,"column_start":2,"column_end":77}},{"value":"/ offchain worker tasks running on the same machine. It _is_ persisted between runs.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163449,"byte_end":163535,"line_start":343,"line_end":343,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163833,"byte_end":163852,"line_start":350,"line_end":350,"column_start":5,"column_end":24},"name":"local_storage_clear","qualname":"::offchain::Externalities::local_storage_clear","value":"pub fn local_storage_clear(&mut Self, StorageKind, &[u8])","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Removes a value in the local storage.","sig":null,"attributes":[{"value":"/ Removes a value in the local storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163617,"byte_end":163658,"line_start":346,"line_end":346,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163660,"byte_end":163663,"line_start":347,"line_end":347,"column_start":2,"column_end":5}},{"value":"/ Note this storage is not part of the consensus, it's only accessible by","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163665,"byte_end":163740,"line_start":348,"line_end":348,"column_start":2,"column_end":77}},{"value":"/ offchain worker tasks running on the same machine. It _is_ persisted between runs.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163742,"byte_end":163828,"line_start":349,"line_end":349,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164344,"byte_end":164373,"line_start":361,"line_end":361,"column_start":5,"column_end":34},"name":"local_storage_compare_and_set","qualname":"::offchain::Externalities::local_storage_compare_and_set","value":"pub fn local_storage_compare_and_set(&mut Self, StorageKind, &[u8],\n                                     Option<&[u8]>, &[u8]) -> bool","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Sets a value in the local storage if it matches current value.","sig":null,"attributes":[{"value":"/ Sets a value in the local storage if it matches current value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163898,"byte_end":163964,"line_start":352,"line_end":352,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163966,"byte_end":163969,"line_start":353,"line_end":353,"column_start":2,"column_end":5}},{"value":"/ Since multiple offchain workers may be running concurrently, to prevent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":163971,"byte_end":164046,"line_start":354,"line_end":354,"column_start":2,"column_end":77}},{"value":"/ data races use CAS to coordinate between them.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164048,"byte_end":164098,"line_start":355,"line_end":355,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164100,"byte_end":164103,"line_start":356,"line_end":356,"column_start":2,"column_end":5}},{"value":"/ Returns `true` if the value has been set, `false` otherwise.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164105,"byte_end":164169,"line_start":357,"line_end":357,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164171,"byte_end":164174,"line_start":358,"line_end":358,"column_start":2,"column_end":5}},{"value":"/ Note this storage is not part of the consensus, it's only accessible by","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164176,"byte_end":164251,"line_start":359,"line_end":359,"column_start":2,"column_end":77}},{"value":"/ offchain worker tasks running on the same machine. It _is_ persisted between runs.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164253,"byte_end":164339,"line_start":360,"line_end":360,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164773,"byte_end":164790,"line_start":374,"line_end":374,"column_start":5,"column_end":22},"name":"local_storage_get","qualname":"::offchain::Externalities::local_storage_get","value":"pub fn local_storage_get(&mut Self, StorageKind, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Gets a value from the local storage.","sig":null,"attributes":[{"value":"/ Gets a value from the local storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164485,"byte_end":164525,"line_start":369,"line_end":369,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164527,"byte_end":164530,"line_start":370,"line_end":370,"column_start":2,"column_end":5}},{"value":"/ If the value does not exist in the storage `None` will be returned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164532,"byte_end":164603,"line_start":371,"line_end":371,"column_start":2,"column_end":73}},{"value":"/ Note this storage is not part of the consensus, it's only accessible by","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164605,"byte_end":164680,"line_start":372,"line_end":372,"column_start":2,"column_end":77}},{"value":"/ offchain worker tasks running on the same machine. It _is_ persisted between runs.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164682,"byte_end":164768,"line_start":373,"line_end":373,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165209,"byte_end":165227,"line_start":385,"line_end":385,"column_start":5,"column_end":23},"name":"http_request_start","qualname":"::offchain::Externalities::http_request_start","value":"pub fn http_request_start(&mut Self, &str, &str, &[u8])\n-> Result<HttpRequestId, ()>","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Initiates a http request given HTTP verb and the URL.","sig":null,"attributes":[{"value":"/ Initiates a http request given HTTP verb and the URL.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164855,"byte_end":164912,"line_start":376,"line_end":376,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164914,"byte_end":164917,"line_start":377,"line_end":377,"column_start":2,"column_end":5}},{"value":"/ Meta is a future-reserved field containing additional, parity-scale-codec encoded parameters.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":164919,"byte_end":165016,"line_start":378,"line_end":378,"column_start":2,"column_end":99}},{"value":"/ Returns the id of newly started request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165018,"byte_end":165062,"line_start":379,"line_end":379,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165064,"byte_end":165067,"line_start":380,"line_end":380,"column_start":2,"column_end":5}},{"value":"/ Returns an error if:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165069,"byte_end":165093,"line_start":381,"line_end":381,"column_start":2,"column_end":26}},{"value":"/ - No new request identifier could be allocated.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165095,"byte_end":165146,"line_start":382,"line_end":382,"column_start":2,"column_end":53}},{"value":"/ - The method or URI contain invalid characters.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165148,"byte_end":165199,"line_start":383,"line_end":383,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165201,"byte_end":165204,"line_start":384,"line_end":384,"column_start":2,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165819,"byte_end":165842,"line_start":405,"line_end":405,"column_start":5,"column_end":28},"name":"http_request_add_header","qualname":"::offchain::Externalities::http_request_add_header","value":"pub fn http_request_add_header(&mut Self, HttpRequestId, &str, &str)\n-> Result<(), ()>","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Append header to the request.","sig":null,"attributes":[{"value":"/ Append header to the request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165320,"byte_end":165353,"line_start":392,"line_end":392,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165355,"byte_end":165358,"line_start":393,"line_end":393,"column_start":2,"column_end":5}},{"value":"/ Calling this function multiple times with the same header name continues appending new","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165360,"byte_end":165450,"line_start":394,"line_end":394,"column_start":2,"column_end":92}},{"value":"/ headers. In other words, headers are never replaced.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165452,"byte_end":165508,"line_start":395,"line_end":395,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165510,"byte_end":165513,"line_start":396,"line_end":396,"column_start":2,"column_end":5}},{"value":"/ Returns an error if:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165515,"byte_end":165539,"line_start":397,"line_end":397,"column_start":2,"column_end":26}},{"value":"/ - The request identifier is invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165541,"byte_end":165581,"line_start":398,"line_end":398,"column_start":2,"column_end":42}},{"value":"/ - You have called `http_request_write_body` on that request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165583,"byte_end":165647,"line_start":399,"line_end":399,"column_start":2,"column_end":66}},{"value":"/ - The name or value contain invalid characters.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165649,"byte_end":165700,"line_start":400,"line_end":400,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165702,"byte_end":165705,"line_start":401,"line_end":401,"column_start":2,"column_end":5}},{"value":"/ An error doesn't poison the request, and you can continue as if the call had never been","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165707,"byte_end":165798,"line_start":402,"line_end":402,"column_start":2,"column_end":93}},{"value":"/ made.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165800,"byte_end":165809,"line_start":403,"line_end":403,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165811,"byte_end":165814,"line_start":404,"line_end":404,"column_start":2,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166581,"byte_end":166604,"line_start":427,"line_end":427,"column_start":5,"column_end":28},"name":"http_request_write_body","qualname":"::offchain::Externalities::http_request_write_body","value":"pub fn http_request_write_body(&mut Self, HttpRequestId, &[u8],\n                               Option<Timestamp>) -> Result<(), HttpError>","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Write a chunk of request body.","sig":null,"attributes":[{"value":"/ Write a chunk of request body.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165938,"byte_end":165972,"line_start":412,"line_end":412,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165974,"byte_end":165977,"line_start":413,"line_end":413,"column_start":2,"column_end":5}},{"value":"/ Calling this function with a non-empty slice may or may not start the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":165979,"byte_end":166052,"line_start":414,"line_end":414,"column_start":2,"column_end":75}},{"value":"/ HTTP request. Calling this function with an empty chunks finalizes the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166054,"byte_end":166128,"line_start":415,"line_end":415,"column_start":2,"column_end":76}},{"value":"/ request and always starts it. It is no longer valid to write more data","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166130,"byte_end":166204,"line_start":416,"line_end":416,"column_start":2,"column_end":76}},{"value":"/ afterwards.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166206,"byte_end":166221,"line_start":417,"line_end":417,"column_start":2,"column_end":17}},{"value":"/ Passing `None` as deadline blocks forever.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166223,"byte_end":166269,"line_start":418,"line_end":418,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166271,"byte_end":166274,"line_start":419,"line_end":419,"column_start":2,"column_end":5}},{"value":"/ Returns an error if:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166276,"byte_end":166300,"line_start":420,"line_end":420,"column_start":2,"column_end":26}},{"value":"/ - The request identifier is invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166302,"byte_end":166342,"line_start":421,"line_end":421,"column_start":2,"column_end":42}},{"value":"/ - `http_response_wait` has already been called on this request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166344,"byte_end":166411,"line_start":422,"line_end":422,"column_start":2,"column_end":69}},{"value":"/ - The deadline is reached.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166413,"byte_end":166443,"line_start":423,"line_end":423,"column_start":2,"column_end":32}},{"value":"/ - An I/O error has happened, for example the remote has closed our","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166445,"byte_end":166515,"line_start":424,"line_end":424,"column_start":2,"column_end":72}},{"value":"/   request. The request is then considered invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166517,"byte_end":166571,"line_start":425,"line_end":425,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166573,"byte_end":166576,"line_start":426,"line_end":426,"column_start":2,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167175,"byte_end":167193,"line_start":444,"line_end":444,"column_start":5,"column_end":23},"name":"http_response_wait","qualname":"::offchain::Externalities::http_response_wait","value":"pub fn http_response_wait(&mut Self, &[HttpRequestId], Option<Timestamp>)\n-> Vec<HttpRequestStatus>","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Block and wait for the responses for given requests.","sig":null,"attributes":[{"value":"/ Block and wait for the responses for given requests.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166725,"byte_end":166781,"line_start":434,"line_end":434,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166783,"byte_end":166786,"line_start":435,"line_end":435,"column_start":2,"column_end":5}},{"value":"/ Returns a vector of request statuses (the len is the same as ids).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166788,"byte_end":166858,"line_start":436,"line_end":436,"column_start":2,"column_end":72}},{"value":"/ Note that if deadline is not provided the method will block indefinitely,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166860,"byte_end":166937,"line_start":437,"line_end":437,"column_start":2,"column_end":79}},{"value":"/ otherwise unready responses will produce `DeadlineReached` status.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":166939,"byte_end":167009,"line_start":438,"line_end":438,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167011,"byte_end":167014,"line_start":439,"line_end":439,"column_start":2,"column_end":5}},{"value":"/ If a response returns an `IoError`, it is then considered destroyed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167016,"byte_end":167088,"line_start":440,"line_end":440,"column_start":2,"column_end":74}},{"value":"/ Its id is then invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167090,"byte_end":167117,"line_start":441,"line_end":441,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167119,"byte_end":167122,"line_start":442,"line_end":442,"column_start":2,"column_end":5}},{"value":"/ Passing `None` as deadline blocks forever.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167124,"byte_end":167170,"line_start":443,"line_end":443,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167654,"byte_end":167675,"line_start":459,"line_end":459,"column_start":5,"column_end":26},"name":"http_response_headers","qualname":"::offchain::Externalities::http_response_headers","value":"pub fn http_response_headers(&mut Self, HttpRequestId)\n-> Vec<(Vec<u8>, Vec<u8>)>","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Read all response headers.","sig":null,"attributes":[{"value":"/ Read all response headers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167295,"byte_end":167325,"line_start":450,"line_end":450,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167327,"byte_end":167330,"line_start":451,"line_end":451,"column_start":2,"column_end":5}},{"value":"/ Returns a vector of pairs `(HeaderKey, HeaderValue)`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167332,"byte_end":167389,"line_start":452,"line_end":452,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167391,"byte_end":167394,"line_start":453,"line_end":453,"column_start":2,"column_end":5}},{"value":"/ Dispatches the request if it hasn't been done yet. It is no longer","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167396,"byte_end":167466,"line_start":454,"line_end":454,"column_start":2,"column_end":72}},{"value":"/ valid to modify the headers or write data to the request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167468,"byte_end":167529,"line_start":455,"line_end":455,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167531,"byte_end":167534,"line_start":456,"line_end":456,"column_start":2,"column_end":5}},{"value":"/ Returns an empty list if the identifier is unknown/invalid, hasn't","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167536,"byte_end":167606,"line_start":457,"line_end":457,"column_start":2,"column_end":72}},{"value":"/ received a response, or has finished.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167608,"byte_end":167649,"line_start":458,"line_end":458,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168543,"byte_end":168566,"line_start":483,"line_end":483,"column_start":5,"column_end":28},"name":"http_response_read_body","qualname":"::offchain::Externalities::http_response_read_body","value":"pub fn http_response_read_body(&mut Self, HttpRequestId, &mut [u8],\n                               Option<Timestamp>) -> Result<usize, HttpError>","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Read a chunk of body response to given buffer.","sig":null,"attributes":[{"value":"/ Read a chunk of body response to given buffer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167751,"byte_end":167801,"line_start":464,"line_end":464,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167803,"byte_end":167806,"line_start":465,"line_end":465,"column_start":2,"column_end":5}},{"value":"/ Dispatches the request if it hasn't been done yet. It is no longer","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167808,"byte_end":167878,"line_start":466,"line_end":466,"column_start":2,"column_end":72}},{"value":"/ valid to modify the headers or write data to the request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167880,"byte_end":167941,"line_start":467,"line_end":467,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167943,"byte_end":167946,"line_start":468,"line_end":468,"column_start":2,"column_end":5}},{"value":"/ Returns the number of bytes written or an error in case a deadline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":167948,"byte_end":168018,"line_start":469,"line_end":469,"column_start":2,"column_end":72}},{"value":"/ is reached or server closed the connection.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168020,"byte_end":168067,"line_start":470,"line_end":470,"column_start":2,"column_end":49}},{"value":"/ Passing `None` as a deadline blocks forever.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168069,"byte_end":168117,"line_start":471,"line_end":471,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168119,"byte_end":168122,"line_start":472,"line_end":472,"column_start":2,"column_end":5}},{"value":"/ If `Ok(0)` or `Err(IoError)` is returned, the request is considered","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168124,"byte_end":168195,"line_start":473,"line_end":473,"column_start":2,"column_end":73}},{"value":"/ destroyed. Doing another read or getting the response's headers, for","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168197,"byte_end":168269,"line_start":474,"line_end":474,"column_start":2,"column_end":74}},{"value":"/ example, is then invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168271,"byte_end":168300,"line_start":475,"line_end":475,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168302,"byte_end":168305,"line_start":476,"line_end":476,"column_start":2,"column_end":5}},{"value":"/ Returns an error if:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168307,"byte_end":168331,"line_start":477,"line_end":477,"column_start":2,"column_end":26}},{"value":"/ - The request identifier is invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168333,"byte_end":168373,"line_start":478,"line_end":478,"column_start":2,"column_end":42}},{"value":"/ - The deadline is reached.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168375,"byte_end":168405,"line_start":479,"line_end":479,"column_start":2,"column_end":32}},{"value":"/ - An I/O error has happened, for example the remote has closed our","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168407,"byte_end":168477,"line_start":480,"line_end":480,"column_start":2,"column_end":72}},{"value":"/   request. The request is then considered invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168479,"byte_end":168533,"line_start":481,"line_end":481,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168535,"byte_end":168538,"line_start":482,"line_end":482,"column_start":2,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":169267,"byte_end":169287,"line_start":500,"line_end":500,"column_start":5,"column_end":25},"name":"set_authorized_nodes","qualname":"::offchain::Externalities::set_authorized_nodes","value":"pub fn set_authorized_nodes(&mut Self, Vec<OpaquePeerId>, bool)","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" Set the authorized nodes from runtime.","sig":null,"attributes":[{"value":"/ Set the authorized nodes from runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168695,"byte_end":168737,"line_start":490,"line_end":490,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168739,"byte_end":168742,"line_start":491,"line_end":491,"column_start":2,"column_end":5}},{"value":"/ In a permissioned network, the connections between nodes need to reach a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168744,"byte_end":168820,"line_start":492,"line_end":492,"column_start":2,"column_end":78}},{"value":"/ consensus between participants.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168822,"byte_end":168857,"line_start":493,"line_end":493,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168859,"byte_end":168862,"line_start":494,"line_end":494,"column_start":2,"column_end":5}},{"value":"/ - `nodes`: a set of nodes which are allowed to connect for the local node.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168864,"byte_end":168942,"line_start":495,"line_end":495,"column_start":2,"column_end":80}},{"value":"/ each one is identified with an `OpaquePeerId`, here it just use plain bytes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":168944,"byte_end":169023,"line_start":496,"line_end":496,"column_start":2,"column_end":81}},{"value":"/ without any encoding. Invalid `OpaquePeerId`s are silently ignored.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":169025,"byte_end":169096,"line_start":497,"line_end":497,"column_start":2,"column_end":73}},{"value":"/ - `authorized_only`: if true, only the authorized nodes are allowed to connect,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":169098,"byte_end":169181,"line_start":498,"line_end":498,"column_start":2,"column_end":85}},{"value":"/ otherwise unauthorized nodes can also be connected through other mechanism.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":169183,"byte_end":169262,"line_start":499,"line_end":499,"column_start":2,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1621},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":171769,"byte_end":171789,"line_start":586,"line_end":586,"column_start":12,"column_end":32},"name":"LimitedExternalities","qualname":"::offchain::LimitedExternalities","value":"LimitedExternalities {  }","parent":null,"children":[{"krate":0,"index":1623},{"krate":0,"index":1624}],"decl_id":null,"docs":" An `OffchainExternalities` implementation with limited capabilities.\n","sig":null,"attributes":[{"value":"/ An `OffchainExternalities` implementation with limited capabilities.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":171685,"byte_end":171757,"line_start":585,"line_end":585,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":171951,"byte_end":171954,"line_start":593,"line_end":593,"column_start":9,"column_end":12},"name":"new","qualname":"<LimitedExternalities<T>>::new","value":"pub fn new(Capabilities, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new externalities limited to given `capabilities`.\n","sig":null,"attributes":[{"value":"/ Create new externalities limited to given `capabilities`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":171881,"byte_end":171942,"line_start":592,"line_end":592,"column_start":2,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3301},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":175882,"byte_end":175893,"line_start":711,"line_end":711,"column_start":13,"column_end":24},"name":"OffchainExt","qualname":"::offchain::OffchainExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The offchain extension that will be registered at the Substrate externalities.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176011,"byte_end":176014,"line_start":717,"line_end":717,"column_start":9,"column_end":12},"name":"new","qualname":"<OffchainExt>::new","value":"pub fn new<O: Externalities + 'static>(O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Self`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":175966,"byte_end":176002,"line_start":716,"line_end":716,"column_start":2,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":1651},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176368,"byte_end":176383,"line_start":728,"line_end":728,"column_start":11,"column_end":26},"name":"TransactionPool","qualname":"::offchain::TransactionPool","value":"TransactionPool","parent":null,"children":[{"krate":0,"index":1652}],"decl_id":null,"docs":" Abstraction over transaction pool.","sig":null,"attributes":[{"value":"/ Abstraction over transaction pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176099,"byte_end":176137,"line_start":722,"line_end":722,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176138,"byte_end":176141,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ This trait is currently used within the `ExternalitiesExtension`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176142,"byte_end":176210,"line_start":724,"line_end":724,"column_start":1,"column_end":69}},{"value":"/ to provide offchain calls with access to the transaction pool without","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176211,"byte_end":176284,"line_start":725,"line_end":725,"column_start":1,"column_end":74}},{"value":"/ tight coupling with any pool implementation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176285,"byte_end":176333,"line_start":726,"line_end":726,"column_start":1,"column_end":49}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176334,"byte_end":176357,"line_start":727,"line_end":727,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176494,"byte_end":176512,"line_start":732,"line_end":732,"column_start":5,"column_end":23},"name":"submit_transaction","qualname":"::offchain::TransactionPool::submit_transaction","value":"pub fn submit_transaction(&mut Self, Vec<u8>) -> Result<(), ()>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Submit transaction.","sig":null,"attributes":[{"value":"/ Submit transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176387,"byte_end":176410,"line_start":729,"line_end":729,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176412,"byte_end":176415,"line_start":730,"line_end":730,"column_start":2,"column_end":5}},{"value":"/ The transaction will end up in the pool and be propagated to others.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176417,"byte_end":176489,"line_start":731,"line_end":731,"column_start":2,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3313},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176706,"byte_end":176724,"line_start":738,"line_end":738,"column_start":13,"column_end":31},"name":"TransactionPoolExt","qualname":"::offchain::TransactionPoolExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" An externalities extension to submit transactions to the pool.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176872,"byte_end":176875,"line_start":744,"line_end":744,"column_start":9,"column_end":12},"name":"new","qualname":"<TransactionPoolExt>::new","value":"pub fn new<O: TransactionPool + Send + 'static>(O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `TransactionPoolExt`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `TransactionPoolExt`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176813,"byte_end":176863,"line_start":743,"line_end":743,"column_start":2,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3326},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":177159,"byte_end":177165,"line_start":753,"line_end":753,"column_start":2,"column_end":8},"name":"Remove","qualname":"::offchain::OffchainOverlayedChange::Remove","value":"OffchainOverlayedChange::Remove","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":" Remove the data associated with the key\n","sig":null,"attributes":[{"value":"/ Remove the data associated with the key","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":177114,"byte_end":177157,"line_start":752,"line_end":752,"column_start":2,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3328},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":177214,"byte_end":177222,"line_start":755,"line_end":755,"column_start":2,"column_end":10},"name":"SetValue","qualname":"::offchain::OffchainOverlayedChange::SetValue","value":"OffchainOverlayedChange::SetValue(Vec<u8>)","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":" Overwrite the value of an associated key\n","sig":null,"attributes":[{"value":"/ Overwrite the value of an associated key","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":177168,"byte_end":177212,"line_start":754,"line_end":754,"column_start":2,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3325},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":177087,"byte_end":177110,"line_start":751,"line_end":751,"column_start":10,"column_end":33},"name":"OffchainOverlayedChange","qualname":"::offchain::OffchainOverlayedChange","value":"pub enum OffchainOverlayedChange {\n\n    /// Remove the data associated with the key\n    Remove,\n\n    /// Overwrite the value of an associated key\n    SetValue(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3328}],"decl_id":null,"docs":" Change to be applied to the offchain worker db in regards to a key.\n","sig":null,"attributes":[{"value":"/ Change to be applied to the offchain worker db in regards to a key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176961,"byte_end":177032,"line_start":749,"line_end":749,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":1656},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sandbox","qualname":"::sandbox","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":4241},{"krate":0,"index":1659},{"krate":0,"index":4243},{"krate":0,"index":1660},{"krate":0,"index":3345},{"krate":0,"index":3354},{"krate":0,"index":3349},{"krate":0,"index":3347},{"krate":0,"index":3360},{"krate":0,"index":3388},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3375},{"krate":0,"index":3369},{"krate":0,"index":3367},{"krate":0,"index":3390},{"krate":0,"index":3414},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3401},{"krate":0,"index":3396},{"krate":0,"index":3394},{"krate":0,"index":3416},{"krate":0,"index":3442},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3425},{"krate":0,"index":3420},{"krate":0,"index":3418},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665}],"decl_id":null,"docs":" Definition of a sandbox environment.\n","sig":null,"attributes":[{"value":"/ Definition of a sandbox environment.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":193354,"byte_end":193394,"line_start":18,"line_end":18,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3345},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":193573,"byte_end":193582,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"HostError","qualname":"::sandbox::HostError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error error that can be returned from host function.\n","sig":null,"attributes":[{"value":"/ Error error that can be returned from host function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":193448,"byte_end":193504,"line_start":23,"line_end":23,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3361},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":193882,"byte_end":193890,"line_start":35,"line_end":35,"column_start":2,"column_end":10},"name":"Function","qualname":"::sandbox::ExternEntity::Function","value":"ExternEntity::Function(u32)","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":" Function that is specified by an index in a default table of\n a module that creates the sandbox.\n","sig":null,"attributes":[{"value":"/ Function that is specified by an index in a default table of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":193755,"byte_end":193819,"line_start":32,"line_end":32,"column_start":2,"column_end":66}},{"value":"/ a module that creates the sandbox.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":193821,"byte_end":193859,"line_start":33,"line_end":33,"column_start":2,"column_end":40}},{"value":"codec(index = 1)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":193861,"byte_end":193880,"line_start":34,"line_end":34,"column_start":2,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3364},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194044,"byte_end":194050,"line_start":40,"line_end":40,"column_start":2,"column_end":8},"name":"Memory","qualname":"::sandbox::ExternEntity::Memory","value":"ExternEntity::Memory(u32)","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":" Linear memory that is specified by some identifier returned by sandbox\n module upon creation new sandboxed memory.\n","sig":null,"attributes":[{"value":"/ Linear memory that is specified by some identifier returned by sandbox","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":193899,"byte_end":193973,"line_start":37,"line_end":37,"column_start":2,"column_end":76}},{"value":"/ module upon creation new sandboxed memory.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":193975,"byte_end":194021,"line_start":38,"line_end":38,"column_start":2,"column_end":48}},{"value":"codec(index = 2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194023,"byte_end":194042,"line_start":39,"line_end":39,"column_start":2,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":3360},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":193739,"byte_end":193751,"line_start":31,"line_end":31,"column_start":10,"column_end":22},"name":"ExternEntity","qualname":"::sandbox::ExternEntity","value":"pub enum ExternEntity {\n\n    /// Function that is specified by an index in a default table of\n    /// a module that creates the sandbox.\n    #[codec(index = 1)]\n    Function(u32),\n\n    /// Linear memory that is specified by some identifier returned by sandbox\n    /// module upon creation new sandboxed memory.\n    #[codec(index = 2)]\n    Memory(u32),\n}","parent":null,"children":[{"krate":0,"index":3361},{"krate":0,"index":3364}],"decl_id":null,"docs":" Describes an entity to define or import into the environment.\n","sig":null,"attributes":[{"value":"/ Describes an entity to define or import into the environment.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":193585,"byte_end":193650,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3390},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194286,"byte_end":194291,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"Entry","qualname":"::sandbox::Entry","value":"Entry { module_name, field_name, entity }","parent":null,"children":[{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393}],"decl_id":null,"docs":" An entry in a environment definition table.","sig":null,"attributes":[{"value":"/ An entry in a environment definition table.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194060,"byte_end":194107,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194108,"byte_end":194111,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Each entry has a two-level name and description of an entity","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194112,"byte_end":194176,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/ being defined.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194177,"byte_end":194195,"line_start":46,"line_end":46,"column_start":1,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3391},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194361,"byte_end":194372,"line_start":51,"line_end":51,"column_start":6,"column_end":17},"name":"module_name","qualname":"::sandbox::Entry::module_name","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":" Module name of which corresponding entity being defined.\n","sig":null,"attributes":[{"value":"/ Module name of which corresponding entity being defined.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194295,"byte_end":194355,"line_start":50,"line_end":50,"column_start":2,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3392},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194449,"byte_end":194459,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"name":"field_name","qualname":"::sandbox::Entry::field_name","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":" Field name in which corresponding entity being defined.\n","sig":null,"attributes":[{"value":"/ Field name in which corresponding entity being defined.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194384,"byte_end":194443,"line_start":52,"line_end":52,"column_start":2,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3393},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194511,"byte_end":194517,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"name":"entity","qualname":"::sandbox::Entry::entity","value":"sandbox::ExternEntity","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":" External entity being defined.\n","sig":null,"attributes":[{"value":"/ External entity being defined.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194471,"byte_end":194505,"line_start":54,"line_end":54,"column_start":2,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3416},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194690,"byte_end":194711,"line_start":61,"line_end":61,"column_start":12,"column_end":33},"name":"EnvironmentDefinition","qualname":"::sandbox::EnvironmentDefinition","value":"EnvironmentDefinition { entries }","parent":null,"children":[{"krate":0,"index":3417}],"decl_id":null,"docs":" Definition of runtime that could be used by sandboxed code.\n","sig":null,"attributes":[{"value":"/ Definition of runtime that could be used by sandboxed code.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194536,"byte_end":194599,"line_start":58,"line_end":58,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3417},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194777,"byte_end":194784,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"name":"entries","qualname":"::sandbox::EnvironmentDefinition::entries","value":"std::vec::Vec<sandbox::Entry>","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" Vector of all entries in the environment definition.\n","sig":null,"attributes":[{"value":"/ Vector of all entries in the environment definition.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194715,"byte_end":194771,"line_start":62,"line_end":62,"column_start":2,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":1661},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194913,"byte_end":194926,"line_start":68,"line_end":68,"column_start":11,"column_end":24},"name":"MEM_UNLIMITED","qualname":"::sandbox::MEM_UNLIMITED","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Constant for specifying no limit when creating a sandboxed\n memory instance. For FFI purposes.\n","sig":null,"attributes":[{"value":"/ Constant for specifying no limit when creating a sandboxed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194801,"byte_end":194863,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/ memory instance. For FFI purposes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194864,"byte_end":194902,"line_start":67,"line_end":67,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1662},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195008,"byte_end":195014,"line_start":73,"line_end":73,"column_start":11,"column_end":17},"name":"ERR_OK","qualname":"::sandbox::ERR_OK","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" No error happened.","sig":null,"attributes":[{"value":"/ No error happened.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194949,"byte_end":194971,"line_start":70,"line_end":70,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194972,"byte_end":194975,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For FFI purposes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":194976,"byte_end":194997,"line_start":72,"line_end":72,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1663},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195158,"byte_end":195168,"line_start":79,"line_end":79,"column_start":11,"column_end":21},"name":"ERR_MODULE","qualname":"::sandbox::ERR_MODULE","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Validation or instantiation error occurred when creating new\n sandboxed module instance.","sig":null,"attributes":[{"value":"/ Validation or instantiation error occurred when creating new","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195026,"byte_end":195090,"line_start":75,"line_end":75,"column_start":1,"column_end":65}},{"value":"/ sandboxed module instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195091,"byte_end":195121,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195122,"byte_end":195125,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ For FFI purposes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195126,"byte_end":195147,"line_start":78,"line_end":78,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1664},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195284,"byte_end":195301,"line_start":84,"line_end":84,"column_start":11,"column_end":28},"name":"ERR_OUT_OF_BOUNDS","qualname":"::sandbox::ERR_OUT_OF_BOUNDS","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Out-of-bounds access attempted with memory or table.","sig":null,"attributes":[{"value":"/ Out-of-bounds access attempted with memory or table.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195191,"byte_end":195247,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195248,"byte_end":195251,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ For FFI purposes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195252,"byte_end":195273,"line_start":83,"line_end":83,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1665},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195407,"byte_end":195420,"line_start":89,"line_end":89,"column_start":11,"column_end":24},"name":"ERR_EXECUTION","qualname":"::sandbox::ERR_EXECUTION","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Execution error occurred (typically trap).","sig":null,"attributes":[{"value":"/ Execution error occurred (typically trap).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195324,"byte_end":195370,"line_start":86,"line_end":86,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195371,"byte_end":195374,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ For FFI purposes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sandbox.rs","byte_start":195375,"byte_end":195396,"line_start":88,"line_end":88,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1666},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/uint.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uint","qualname":"::uint","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/uint.rs","parent":null,"children":[{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":4247},{"krate":0,"index":1669},{"krate":0,"index":4249}],"decl_id":null,"docs":" An unsigned fixed-size integer.\n","sig":null,"attributes":[{"value":"/ An unsigned fixed-size integer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/uint.rs","byte_start":196861,"byte_end":196896,"line_start":18,"line_end":18,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3444},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200252,"byte_end":200276,"line_start":28,"line_end":28,"column_start":12,"column_end":36},"name":"ChangesTrieConfiguration","qualname":"::changes_trie::ChangesTrieConfiguration","value":"ChangesTrieConfiguration { digest_interval, digest_levels }","parent":null,"children":[{"krate":0,"index":3445},{"krate":0,"index":3446}],"decl_id":null,"docs":" Substrate changes trie configuration.\n","sig":null,"attributes":[{"value":"/ Substrate changes trie configuration.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200032,"byte_end":200073,"line_start":25,"line_end":25,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3445},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200409,"byte_end":200424,"line_start":31,"line_end":31,"column_start":6,"column_end":21},"name":"digest_interval","qualname":"::changes_trie::ChangesTrieConfiguration::digest_interval","value":"u32","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":" Interval (in blocks) at which level1-digests are created. Digests are not\n created when this is less or equal to 1.\n","sig":null,"attributes":[{"value":"/ Interval (in blocks) at which level1-digests are created. Digests are not","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200280,"byte_end":200357,"line_start":29,"line_end":29,"column_start":2,"column_end":79}},{"value":"/ created when this is less or equal to 1.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200359,"byte_end":200403,"line_start":30,"line_end":30,"column_start":2,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3446},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200958,"byte_end":200971,"line_start":39,"line_end":39,"column_start":6,"column_end":19},"name":"digest_levels","qualname":"::changes_trie::ChangesTrieConfiguration::digest_levels","value":"u32","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":" Maximal number of digest levels in hierarchy. 0 means that digests are not\n created at all (even level1 digests). 1 means only level1-digests are created.\n 2 means that every digest_interval^2 there will be a level2-digest, and so on.\n Please ensure that maximum digest interval (i.e. digest_interval^digest_levels)\n is within `u32` limits. Otherwise you'll never see digests covering such intervals\n && maximal digests interval will be truncated to the last interval that fits\n `u32` limits.\n","sig":null,"attributes":[{"value":"/ Maximal number of digest levels in hierarchy. 0 means that digests are not","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200432,"byte_end":200510,"line_start":32,"line_end":32,"column_start":2,"column_end":80}},{"value":"/ created at all (even level1 digests). 1 means only level1-digests are created.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200512,"byte_end":200594,"line_start":33,"line_end":33,"column_start":2,"column_end":84}},{"value":"/ 2 means that every digest_interval^2 there will be a level2-digest, and so on.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200596,"byte_end":200678,"line_start":34,"line_end":34,"column_start":2,"column_end":84}},{"value":"/ Please ensure that maximum digest interval (i.e. digest_interval^digest_levels)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200680,"byte_end":200763,"line_start":35,"line_end":35,"column_start":2,"column_end":85}},{"value":"/ is within `u32` limits. Otherwise you'll never see digests covering such intervals","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200765,"byte_end":200851,"line_start":36,"line_end":36,"column_start":2,"column_end":88}},{"value":"/ && maximal digests interval will be truncated to the last interval that fits","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200853,"byte_end":200933,"line_start":37,"line_end":37,"column_start":2,"column_end":82}},{"value":"/ `u32` limits.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200935,"byte_end":200952,"line_start":38,"line_end":38,"column_start":2,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":3522},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201079,"byte_end":201108,"line_start":44,"line_end":44,"column_start":12,"column_end":41},"name":"ChangesTrieConfigurationRange","qualname":"::changes_trie::ChangesTrieConfigurationRange","value":"ChangesTrieConfigurationRange { zero, end, config }","parent":null,"children":[{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527}],"decl_id":null,"docs":" Substrate changes trie configuration range.\n","sig":null,"attributes":[{"value":"/ Substrate changes trie configuration range.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":200981,"byte_end":201028,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3525},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201164,"byte_end":201168,"line_start":46,"line_end":46,"column_start":6,"column_end":10},"name":"zero","qualname":"::changes_trie::ChangesTrieConfigurationRange::zero","value":"(Number, Hash)","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Zero block of configuration.\n","sig":null,"attributes":[{"value":"/ Zero block of configuration.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201126,"byte_end":201158,"line_start":45,"line_end":45,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3526},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201279,"byte_end":201282,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"name":"end","qualname":"::changes_trie::ChangesTrieConfigurationRange::end","value":"std::option::Option<(Number, Hash)>","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Last block of configuration (if configuration has been deactivated at some point).\n","sig":null,"attributes":[{"value":"/ Last block of configuration (if configuration has been deactivated at some point).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201187,"byte_end":201273,"line_start":47,"line_end":47,"column_start":2,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":3527},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201395,"byte_end":201401,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"name":"config","qualname":"::changes_trie::ChangesTrieConfigurationRange::config","value":"std::option::Option<changes_trie::ChangesTrieConfiguration>","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" The configuration itself. None if changes tries were disabled in this range.\n","sig":null,"attributes":[{"value":"/ The configuration itself. None if changes tries were disabled in this range.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201309,"byte_end":201389,"line_start":49,"line_end":49,"column_start":2,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201544,"byte_end":201547,"line_start":55,"line_end":55,"column_start":9,"column_end":12},"name":"new","qualname":"<ChangesTrieConfiguration>::new","value":"pub fn new(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new configuration given digest interval and levels.\n","sig":null,"attributes":[{"value":"/ Create new configuration given digest interval and levels.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201473,"byte_end":201535,"line_start":54,"line_end":54,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201684,"byte_end":201707,"line_start":60,"line_end":60,"column_start":9,"column_end":32},"name":"is_digest_build_enabled","qualname":"<ChangesTrieConfiguration>::is_digest_build_enabled","value":"pub fn is_digest_build_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is digest build enabled?\n","sig":null,"attributes":[{"value":"/ Is digest build enabled?","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201647,"byte_end":201675,"line_start":59,"line_end":59,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201838,"byte_end":201871,"line_start":65,"line_end":65,"column_start":9,"column_end":42},"name":"is_digest_build_required_at_block","qualname":"<ChangesTrieConfiguration>::is_digest_build_required_at_block","value":"pub fn is_digest_build_required_at_block<Number>(&Self, Number, Number)\n-> bool where Number: From<u32> + PartialEq + ::sp_std::ops::Rem<Output =\nNumber> + ::sp_std::ops::Sub<Output = Number> + ::sp_std::cmp::PartialOrd +\nZero","parent":null,"children":[],"decl_id":null,"docs":" Do we need to build digest at given block?\n","sig":null,"attributes":[{"value":"/ Do we need to build digest at given block?","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201783,"byte_end":201829,"line_start":64,"line_end":64,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":202292,"byte_end":202311,"line_start":81,"line_end":81,"column_start":9,"column_end":28},"name":"max_digest_interval","qualname":"<ChangesTrieConfiguration>::max_digest_interval","value":"pub fn max_digest_interval(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns max digest interval. One if digests are not created at all.\n","sig":null,"attributes":[{"value":"/ Returns max digest interval. One if digests are not created at all.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":202212,"byte_end":202283,"line_start":80,"line_end":80,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":202861,"byte_end":202888,"line_start":100,"line_end":100,"column_start":9,"column_end":36},"name":"prev_max_level_digest_block","qualname":"<ChangesTrieConfiguration>::prev_max_level_digest_block","value":"pub fn prev_max_level_digest_block<Number>(&Self, Number, Number)\n-> Option<Number> where Number: Clone + From<u32> + PartialOrd + PartialEq +\n::sp_std::ops::Add<Output = Number> + ::sp_std::ops::Sub<Output = Number> +\n::sp_std::ops::Div<Output = Number> + ::sp_std::ops::Mul<Output = Number> +\nZero","parent":null,"children":[],"decl_id":null,"docs":" Returns max level digest block number that has been created at block <= passed block number.","sig":null,"attributes":[{"value":"/ Returns max level digest block number that has been created at block <= passed block number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":202698,"byte_end":202794,"line_start":97,"line_end":97,"column_start":2,"column_end":98}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":202796,"byte_end":202799,"line_start":98,"line_end":98,"column_start":2,"column_end":5}},{"value":"/ Returns None if digests are not created at all.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":202801,"byte_end":202852,"line_start":99,"line_end":99,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":203858,"byte_end":203885,"line_start":134,"line_end":134,"column_start":9,"column_end":36},"name":"next_max_level_digest_range","qualname":"<ChangesTrieConfiguration>::next_max_level_digest_range","value":"pub fn next_max_level_digest_range<Number>(&Self, Number, Number)\n-> Option<(Number, Number)> where Number: Clone + From<u32> + PartialOrd +\nPartialEq + ::sp_std::ops::Add<Output = Number> + ::sp_std::ops::Sub<Output =\nNumber> + ::sp_std::ops::Div<Output = Number> + ::sp_std::ops::Mul<Output =\nNumber>","parent":null,"children":[],"decl_id":null,"docs":" Returns max level digest blocks range (inclusive) which includes passed block.","sig":null,"attributes":[{"value":"/ Returns max level digest blocks range (inclusive) which includes passed block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":203641,"byte_end":203723,"line_start":130,"line_end":130,"column_start":2,"column_end":84}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":203725,"byte_end":203728,"line_start":131,"line_end":131,"column_start":2,"column_end":5}},{"value":"/ Returns None if digests are not created at all.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":203730,"byte_end":203781,"line_start":132,"line_end":132,"column_start":2,"column_end":53}},{"value":"/ It will return the first max-level digest if block is <= zero.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":203783,"byte_end":203849,"line_start":133,"line_end":133,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":205121,"byte_end":205142,"line_start":172,"line_end":172,"column_start":9,"column_end":30},"name":"digest_level_at_block","qualname":"<ChangesTrieConfiguration>::digest_level_at_block","value":"pub fn digest_level_at_block<Number>(&Self, Number, Number)\n-> Option<(u32, u32, u32)> where Number: Clone + From<u32> + PartialEq +\n::sp_std::ops::Rem<Output = Number> + ::sp_std::ops::Sub<Output = Number> +\n::sp_std::cmp::PartialOrd + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns Some if digest must be built at given block number.\n The tuple is:\n (\n  digest level\n  digest interval (in blocks)\n  step between blocks we're interested in when digest is built\n )\n","sig":null,"attributes":[{"value":"/ Returns Some if digest must be built at given block number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":204896,"byte_end":204959,"line_start":165,"line_end":165,"column_start":2,"column_end":65}},{"value":"/ The tuple is:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":204961,"byte_end":204978,"line_start":166,"line_end":166,"column_start":2,"column_end":19}},{"value":"/ (","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":204980,"byte_end":204985,"line_start":167,"line_end":167,"column_start":2,"column_end":7}},{"value":"/  digest level","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":204987,"byte_end":205004,"line_start":168,"line_end":168,"column_start":2,"column_end":19}},{"value":"/  digest interval (in blocks)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":205006,"byte_end":205038,"line_start":169,"line_end":169,"column_start":2,"column_end":34}},{"value":"/  step between blocks we're interested in when digest is built","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":205040,"byte_end":205105,"line_start":170,"line_end":170,"column_start":2,"column_end":67}},{"value":"/ )","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":205107,"byte_end":205112,"line_start":171,"line_end":171,"column_start":2,"column_end":7}}]},{"kind":"Mod","id":{"krate":0,"index":1690},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":4263},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1705},{"krate":0,"index":1708},{"krate":0,"index":1712},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":3551},{"krate":0,"index":3556},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1727},{"krate":0,"index":3559},{"krate":0,"index":3561},{"krate":0,"index":1731},{"krate":0,"index":3563},{"krate":0,"index":3571},{"krate":0,"index":3570},{"krate":0,"index":3568},{"krate":0,"index":1733},{"krate":0,"index":1735},{"krate":0,"index":3573},{"krate":0,"index":3576},{"krate":0,"index":3578},{"krate":0,"index":3581},{"krate":0,"index":3583},{"krate":0,"index":1737},{"krate":0,"index":3585},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3593},{"krate":0,"index":3595},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":3597},{"krate":0,"index":3600},{"krate":0,"index":3602},{"krate":0,"index":3605},{"krate":0,"index":3607},{"krate":0,"index":3609},{"krate":0,"index":3612},{"krate":0,"index":3615},{"krate":0,"index":3618},{"krate":0,"index":3621},{"krate":0,"index":1746}],"decl_id":null,"docs":" Shareable Substrate traits.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1906,"byte_end":1929,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/ Shareable Substrate traits.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211461,"byte_end":211492,"line_start":18,"line_end":18,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":1700},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211666,"byte_end":211678,"line_start":29,"line_end":29,"column_start":11,"column_end":23},"name":"CodeExecutor","qualname":"::traits::CodeExecutor","value":"CodeExecutor: Sized + Send + Sync + CallInWasm + Clone + 'static","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702}],"decl_id":null,"docs":" Code execution engine.\n","sig":null,"attributes":[{"value":"/ Code execution engine.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211629,"byte_end":211655,"line_start":28,"line_end":28,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":1701},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211770,"byte_end":211775,"line_start":31,"line_end":31,"column_start":7,"column_end":12},"name":"Error","qualname":"::traits::CodeExecutor::Error","value":"type Error: Display + Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1700},"children":[],"decl_id":null,"docs":" Externalities error type.\n","sig":null,"attributes":[{"value":"/ Externalities error type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211734,"byte_end":211763,"line_start":30,"line_end":30,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212014,"byte_end":212018,"line_start":35,"line_end":35,"column_start":5,"column_end":9},"name":"call","qualname":"::traits::CodeExecutor::call","value":"pub fn call<R: codec::Codec + PartialEq, NC: FnOnce() -> Result<R, String> +\n            UnwindSafe>(&Self, &mut Externalities, &RuntimeCode, &str, &[u8],\n                        bool, Option<NC>)\n-> (Result<crate::NativeOrEncoded<R>, Self::Error>, bool)","parent":{"krate":0,"index":1700},"children":[],"decl_id":null,"docs":" Call a given method in the runtime. Returns a tuple of the result (either the output data\n or an execution error) together with a `bool`, which is true if native execution was used.\n","sig":null,"attributes":[{"value":"/ Call a given method in the runtime. Returns a tuple of the result (either the output data","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211820,"byte_end":211913,"line_start":33,"line_end":33,"column_start":2,"column_end":95}},{"value":"/ or an execution error) together with a `bool`, which is true if native execution was used.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211915,"byte_end":212009,"line_start":34,"line_end":34,"column_start":2,"column_end":96}}]},{"kind":"Trait","id":{"krate":0,"index":1705},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212378,"byte_end":212394,"line_start":50,"line_end":50,"column_start":11,"column_end":27},"name":"FetchRuntimeCode","qualname":"::traits::FetchRuntimeCode","value":"FetchRuntimeCode","parent":null,"children":[{"krate":0,"index":1706}],"decl_id":null,"docs":" Something that can fetch the runtime `:code`.\n","sig":null,"attributes":[{"value":"/ Something that can fetch the runtime `:code`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212318,"byte_end":212367,"line_start":49,"line_end":49,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212519,"byte_end":212537,"line_start":54,"line_end":54,"column_start":5,"column_end":23},"name":"fetch_runtime_code","qualname":"::traits::FetchRuntimeCode::fetch_runtime_code","value":"pub fn fetch_runtime_code<'a>(&'a Self) -> Option<Cow>","parent":{"krate":0,"index":1705},"children":[],"decl_id":null,"docs":" Fetch the runtime `:code`.","sig":null,"attributes":[{"value":"/ Fetch the runtime `:code`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212398,"byte_end":212428,"line_start":51,"line_end":51,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212430,"byte_end":212433,"line_start":52,"line_end":52,"column_start":2,"column_end":5}},{"value":"/ If the `:code` could not be found/not available, `None` should be returned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212435,"byte_end":212514,"line_start":53,"line_end":53,"column_start":2,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1708},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212658,"byte_end":212676,"line_start":58,"line_end":58,"column_start":12,"column_end":30},"name":"WrappedRuntimeCode","qualname":"::traits::WrappedRuntimeCode","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper to use a `u8` slice or `Vec` as [`FetchRuntimeCode`].\n","sig":null,"attributes":[{"value":"/ Wrapper to use a `u8` slice or `Vec` as [`FetchRuntimeCode`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212581,"byte_end":212646,"line_start":57,"line_end":57,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1711},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212681,"byte_end":212711,"line_start":58,"line_end":58,"column_start":35,"column_end":65},"name":"0","qualname":"::traits::WrappedRuntimeCode::0","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1716},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212955,"byte_end":212975,"line_start":67,"line_end":67,"column_start":12,"column_end":32},"name":"NoneFetchRuntimeCode","qualname":"::traits::NoneFetchRuntimeCode","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type that implements [`FetchRuntimeCode`] and always returns `None`.\n","sig":null,"attributes":[{"value":"/ Type that implements [`FetchRuntimeCode`] and always returns `None`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212871,"byte_end":212943,"line_start":66,"line_end":66,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3551},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213174,"byte_end":213185,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"RuntimeCode","qualname":"::traits::RuntimeCode","value":"RuntimeCode { code_fetcher, heap_pages, hash }","parent":null,"children":[{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555}],"decl_id":null,"docs":" The Wasm code of a Substrate runtime.\n","sig":null,"attributes":[{"value":"/ The Wasm code of a Substrate runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213104,"byte_end":213145,"line_start":75,"line_end":75,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3553},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213262,"byte_end":213274,"line_start":79,"line_end":79,"column_start":6,"column_end":18},"name":"code_fetcher","qualname":"::traits::RuntimeCode::code_fetcher","value":"&'a (dyn traits::FetchRuntimeCode + 'a)","parent":{"krate":0,"index":3551},"children":[],"decl_id":null,"docs":" The code fetcher that can be used to lazily fetch the code.\n","sig":null,"attributes":[{"value":"/ The code fetcher that can be used to lazily fetch the code.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213193,"byte_end":213256,"line_start":78,"line_end":78,"column_start":2,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3554},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213452,"byte_end":213462,"line_start":83,"line_end":83,"column_start":6,"column_end":16},"name":"heap_pages","qualname":"::traits::RuntimeCode::heap_pages","value":"std::option::Option<u64>","parent":{"krate":0,"index":3551},"children":[],"decl_id":null,"docs":" The optional heap pages this `code` should be executed with.","sig":null,"attributes":[{"value":"/ The optional heap pages this `code` should be executed with.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213303,"byte_end":213367,"line_start":80,"line_end":80,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213369,"byte_end":213372,"line_start":81,"line_end":81,"column_start":2,"column_end":5}},{"value":"/ If `None` are given, the default value of the executor will be used.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213374,"byte_end":213446,"line_start":82,"line_end":82,"column_start":2,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":3555},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213632,"byte_end":213636,"line_start":88,"line_end":88,"column_start":6,"column_end":10},"name":"hash","qualname":"::traits::RuntimeCode::hash","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3551},"children":[],"decl_id":null,"docs":" The SCALE encoded hash of `code`.","sig":null,"attributes":[{"value":"/ The SCALE encoded hash of `code`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213478,"byte_end":213515,"line_start":84,"line_end":84,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213517,"byte_end":213520,"line_start":85,"line_end":85,"column_start":2,"column_end":5}},{"value":"/ The hashing algorithm isn't that important, as long as all runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213522,"byte_end":213592,"line_start":86,"line_end":86,"column_start":2,"column_end":72}},{"value":"/ code instances use the same.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213594,"byte_end":213626,"line_start":87,"line_end":87,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213904,"byte_end":213909,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"name":"empty","qualname":"<RuntimeCode>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty instance.","sig":null,"attributes":[{"value":"/ Create an empty instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213789,"byte_end":213818,"line_start":98,"line_end":98,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213820,"byte_end":213823,"line_start":99,"line_end":99,"column_start":2,"column_end":5}},{"value":"/ This is only useful for tests that don't want to execute any code.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213825,"byte_end":213895,"line_start":100,"line_end":100,"column_start":2,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3559},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214302,"byte_end":214314,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"CodeNotFound","qualname":"::traits::CodeNotFound","value":"","parent":null,"children":[],"decl_id":null,"docs":" Could not find the `:code` in the externalities while initializing the [`RuntimeCode`].\n","sig":null,"attributes":[{"value":"/ Could not find the `:code` in the externalities while initializing the [`RuntimeCode`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214182,"byte_end":214273,"line_start":116,"line_end":116,"column_start":1,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3564},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214753,"byte_end":214758,"line_start":131,"line_end":131,"column_start":2,"column_end":7},"name":"Allow","qualname":"::traits::MissingHostFunctions::Allow","value":"MissingHostFunctions::Allow","parent":{"krate":0,"index":3563},"children":[],"decl_id":null,"docs":" Any missing host function will be replaced by a stub that returns an error when\n being called.\n","sig":null,"attributes":[{"value":"/ Any missing host function will be replaced by a stub that returns an error when","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214649,"byte_end":214732,"line_start":129,"line_end":129,"column_start":2,"column_end":85}},{"value":"/ being called.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214734,"byte_end":214751,"line_start":130,"line_end":130,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3566},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214851,"byte_end":214859,"line_start":133,"line_end":133,"column_start":2,"column_end":10},"name":"Disallow","qualname":"::traits::MissingHostFunctions::Disallow","value":"MissingHostFunctions::Disallow","parent":{"krate":0,"index":3563},"children":[],"decl_id":null,"docs":" Any missing host function will result in an error while instantiating the WASM blob,\n","sig":null,"attributes":[{"value":"/ Any missing host function will result in an error while instantiating the WASM blob,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214761,"byte_end":214849,"line_start":132,"line_end":132,"column_start":2,"column_end":90}}]},{"kind":"Enum","id":{"krate":0,"index":3563},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214625,"byte_end":214645,"line_start":128,"line_end":128,"column_start":10,"column_end":30},"name":"MissingHostFunctions","qualname":"::traits::MissingHostFunctions","value":"pub enum MissingHostFunctions {\n\n    /// Any missing host function will be replaced by a stub that returns an error when\n    /// being called.\n    Allow,\n\n    /// Any missing host function will result in an error while instantiating the WASM blob,\n    Disallow,\n}","parent":null,"children":[{"krate":0,"index":3564},{"krate":0,"index":3566}],"decl_id":null,"docs":" `Allow` or `Disallow` missing host functions when instantiating a WASM blob.\n","sig":null,"attributes":[{"value":"/ `Allow` or `Disallow` missing host functions when instantiating a WASM blob.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214505,"byte_end":214585,"line_start":126,"line_end":126,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214941,"byte_end":214948,"line_start":138,"line_end":138,"column_start":9,"column_end":16},"name":"allowed","qualname":"<MissingHostFunctions>::allowed","value":"pub fn allowed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are missing host functions allowed?\n","sig":null,"attributes":[{"value":"/ Are missing host functions allowed?","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214893,"byte_end":214932,"line_start":137,"line_end":137,"column_start":2,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":1735},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215064,"byte_end":215074,"line_start":144,"line_end":144,"column_start":11,"column_end":21},"name":"CallInWasm","qualname":"::traits::CallInWasm","value":"CallInWasm: Send + Sync","parent":null,"children":[{"krate":0,"index":1736}],"decl_id":null,"docs":" Something that can call a method in a WASM blob.\n","sig":null,"attributes":[{"value":"/ Something that can call a method in a WASM blob.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215001,"byte_end":215053,"line_start":143,"line_end":143,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215468,"byte_end":215480,"line_start":154,"line_end":154,"column_start":5,"column_end":17},"name":"call_in_wasm","qualname":"::traits::CallInWasm::call_in_wasm","value":"pub fn call_in_wasm(&Self, &[u8], Option<Vec<u8>>, &str, &[u8],\n                    &mut Externalities, MissingHostFunctions)\n-> Result<Vec<u8>, String>","parent":{"krate":0,"index":1735},"children":[],"decl_id":null,"docs":" Call the given `method` in the given `wasm_blob` using `call_data` (SCALE encoded arguments)\n to decode the arguments for the method.","sig":null,"attributes":[{"value":"/ Call the given `method` in the given `wasm_blob` using `call_data` (SCALE encoded arguments)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215091,"byte_end":215187,"line_start":145,"line_end":145,"column_start":2,"column_end":98}},{"value":"/ to decode the arguments for the method.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215189,"byte_end":215232,"line_start":146,"line_end":146,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215234,"byte_end":215237,"line_start":147,"line_end":147,"column_start":2,"column_end":5}},{"value":"/ Returns the SCALE encoded return value of the method.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215239,"byte_end":215296,"line_start":148,"line_end":148,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215298,"byte_end":215301,"line_start":149,"line_end":149,"column_start":2,"column_end":5}},{"value":"/ # Note","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215303,"byte_end":215313,"line_start":150,"line_end":150,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215315,"byte_end":215318,"line_start":151,"line_end":151,"column_start":2,"column_end":5}},{"value":"/ If `code_hash` is `Some(_)` the `wasm_code` module and instance will be cached internally,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215320,"byte_end":215414,"line_start":152,"line_end":152,"column_start":2,"column_end":96}},{"value":"/ otherwise it is thrown away after the call.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215416,"byte_end":215463,"line_start":153,"line_end":153,"column_start":2,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3573},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215815,"byte_end":215828,"line_start":167,"line_end":167,"column_start":13,"column_end":26},"name":"CallInWasmExt","qualname":"::traits::CallInWasmExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The call-in-wasm extension to register/retrieve from the externalities.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215922,"byte_end":215925,"line_start":172,"line_end":172,"column_start":9,"column_end":12},"name":"new","qualname":"<CallInWasmExt>::new","value":"pub fn new<T: CallInWasm + 'static>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `Self`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215876,"byte_end":215913,"line_start":171,"line_end":171,"column_start":2,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3585},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216079,"byte_end":216094,"line_start":179,"line_end":179,"column_start":13,"column_end":28},"name":"TaskExecutorExt","qualname":"::traits::TaskExecutorExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Task executor extension.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216197,"byte_end":216200,"line_start":184,"line_end":184,"column_start":9,"column_end":12},"name":"new","qualname":"<TaskExecutorExt>::new","value":"pub fn new<impl SpawnNamed + Send + 'static: SpawnNamed + Send +\n           'static>(impl SpawnNamed + Send + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" New instance of task executor extension.\n","sig":null,"attributes":[{"value":"/ New instance of task executor extension.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216144,"byte_end":216188,"line_start":183,"line_end":183,"column_start":2,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":1743},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216335,"byte_end":216347,"line_start":190,"line_end":190,"column_start":11,"column_end":23},"name":"RuntimeSpawn","qualname":"::traits::RuntimeSpawn","value":"RuntimeSpawn: Send","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745}],"decl_id":null,"docs":" Runtime spawn extension.\n","sig":null,"attributes":[{"value":"/ Runtime spawn extension.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216296,"byte_end":216324,"line_start":189,"line_end":189,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216577,"byte_end":216587,"line_start":196,"line_end":196,"column_start":5,"column_end":15},"name":"spawn_call","qualname":"::traits::RuntimeSpawn::spawn_call","value":"pub fn spawn_call(&Self, u32, u32, Vec<u8>) -> u64","parent":{"krate":0,"index":1743},"children":[],"decl_id":null,"docs":" Create new runtime instance and use dynamic dispatch to invoke with specified payload.","sig":null,"attributes":[{"value":"/ Create new runtime instance and use dynamic dispatch to invoke with specified payload.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216357,"byte_end":216447,"line_start":191,"line_end":191,"column_start":2,"column_end":92}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216449,"byte_end":216452,"line_start":192,"line_end":192,"column_start":2,"column_end":5}},{"value":"/ Returns handle of the spawned task.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216454,"byte_end":216493,"line_start":193,"line_end":193,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216495,"byte_end":216498,"line_start":194,"line_end":194,"column_start":2,"column_end":5}},{"value":"/ Function pointers (`dispatcher_ref`, `func`) are WASM pointer types.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216500,"byte_end":216572,"line_start":195,"line_end":195,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216730,"byte_end":216734,"line_start":199,"line_end":199,"column_start":5,"column_end":9},"name":"join","qualname":"::traits::RuntimeSpawn::join","value":"pub fn join(&Self, u64) -> Vec<u8>","parent":{"krate":0,"index":1743},"children":[],"decl_id":null,"docs":" Join the result of previously created runtime instance invocation.\n","sig":null,"attributes":[{"value":"/ Join the result of previously created runtime instance invocation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216655,"byte_end":216725,"line_start":198,"line_end":198,"column_start":2,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3597},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216922,"byte_end":216937,"line_start":205,"line_end":205,"column_start":13,"column_end":28},"name":"RuntimeSpawnExt","qualname":"::traits::RuntimeSpawnExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Extension that supports spawning extra runtime instances in externalities.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3609},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":217089,"byte_end":217099,"line_start":210,"line_end":210,"column_start":11,"column_end":21},"name":"SpawnNamed","qualname":"::traits::SpawnNamed","value":"SpawnNamed: dyn_clonable::dyn_clone::DynClone + Send + Sync","parent":null,"children":[{"krate":0,"index":3610},{"krate":0,"index":3611}],"decl_id":null,"docs":" Something that can spawn futures (blocking and non-blocking) with an assigned name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":217235,"byte_end":217249,"line_start":214,"line_end":214,"column_start":5,"column_end":19},"name":"spawn_blocking","qualname":"::traits::SpawnNamed::spawn_blocking","value":"pub fn spawn_blocking(&Self, &'static str, futures::future::BoxFuture)","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" Spawn the given blocking future.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":217443,"byte_end":217448,"line_start":218,"line_end":218,"column_start":5,"column_end":10},"name":"spawn","qualname":"::traits::SpawnNamed::spawn","value":"pub fn spawn(&Self, &'static str, futures::future::BoxFuture)","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" Spawn the given non-blocking future.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1749},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"testing","qualname":"::testing","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":4273},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":3624},{"krate":0,"index":3627},{"krate":0,"index":1755},{"krate":0,"index":1757}],"decl_id":null,"docs":" Types that should only be used for testing!\n","sig":null,"attributes":[{"value":"/ Types that should only be used for testing!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":218523,"byte_end":218570,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":1751},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":218651,"byte_end":218658,"line_start":23,"line_end":23,"column_start":11,"column_end":18},"name":"ED25519","qualname":"::testing::ED25519","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for generic Ed25519 key.\n","sig":null,"attributes":[{"value":"/ Key type for generic Ed25519 key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":218603,"byte_end":218640,"line_start":22,"line_end":22,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":1752},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":218742,"byte_end":218749,"line_start":25,"line_end":25,"column_start":11,"column_end":18},"name":"SR25519","qualname":"::testing::SR25519","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for generic Sr 25519 key.\n","sig":null,"attributes":[{"value":"/ Key type for generic Sr 25519 key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":218693,"byte_end":218731,"line_start":24,"line_end":24,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1753},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":218833,"byte_end":218838,"line_start":27,"line_end":27,"column_start":11,"column_end":16},"name":"ECDSA","qualname":"::testing::ECDSA","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for generic Sr 25519 key.\n","sig":null,"attributes":[{"value":"/ Key type for generic Sr 25519 key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":218784,"byte_end":218822,"line_start":26,"line_end":26,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3624},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":221609,"byte_end":221621,"line_start":135,"line_end":135,"column_start":12,"column_end":24},"name":"TaskExecutor","qualname":"::testing::TaskExecutor","value":"","parent":null,"children":[],"decl_id":null,"docs":" A task executor that can be used in tests.","sig":null,"attributes":[{"value":"/ A task executor that can be used in tests.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":221344,"byte_end":221390,"line_start":129,"line_end":129,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":221391,"byte_end":221394,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Internally this just wraps a `ThreadPool` with a pool size of `8`. This","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":221395,"byte_end":221470,"line_start":131,"line_end":131,"column_start":1,"column_end":76}},{"value":"/ should ensure that we have enough threads in tests for spawning blocking futures.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":221471,"byte_end":221556,"line_start":132,"line_end":132,"column_start":1,"column_end":86}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":221557,"byte_end":221580,"line_start":133,"line_end":133,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":221745,"byte_end":221748,"line_start":140,"line_end":140,"column_start":9,"column_end":12},"name":"new","qualname":"<TaskExecutor>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Self`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":221700,"byte_end":221736,"line_start":139,"line_end":139,"column_start":2,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1781},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2600,"byte_end":2609,"line_start":96,"line_end":96,"column_start":2,"column_end":11},"name":"Importing","qualname":"::ExecutionContext::Importing","value":"ExecutionContext::Importing","parent":{"krate":0,"index":1780},"children":[],"decl_id":null,"docs":" Context used for general block import (including locally authored blocks).\n","sig":null,"attributes":[{"value":"/ Context used for general block import (including locally authored blocks).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2520,"byte_end":2598,"line_start":95,"line_end":95,"column_start":2,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1783},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3190,"byte_end":3197,"line_start":105,"line_end":105,"column_start":2,"column_end":9},"name":"Syncing","qualname":"::ExecutionContext::Syncing","value":"ExecutionContext::Syncing","parent":{"krate":0,"index":1780},"children":[],"decl_id":null,"docs":" Context used for importing blocks as part of an initial sync of the blockchain.","sig":null,"attributes":[{"value":"/ Context used for importing blocks as part of an initial sync of the blockchain.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2612,"byte_end":2695,"line_start":97,"line_end":97,"column_start":2,"column_end":85}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2697,"byte_end":2700,"line_start":98,"line_end":98,"column_start":2,"column_end":5}},{"value":"/ We distinguish between major sync and import so that validators who are running","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2702,"byte_end":2785,"line_start":99,"line_end":99,"column_start":2,"column_end":85}},{"value":"/ their initial sync (or catching up after some time offline) can use the faster","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2787,"byte_end":2869,"line_start":100,"line_end":100,"column_start":2,"column_end":84}},{"value":"/ native runtime (since we can reasonably assume the network as a whole has already","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2871,"byte_end":2956,"line_start":101,"line_end":101,"column_start":2,"column_end":87}},{"value":"/ come to a broad conensus on the block and it probably hasn't been crafted","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2958,"byte_end":3035,"line_start":102,"line_end":102,"column_start":2,"column_end":79}},{"value":"/ specifically to attack this node), but when importing blocks at the head of the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3037,"byte_end":3120,"line_start":103,"line_end":103,"column_start":2,"column_end":85}},{"value":"/ chain in normal operation they can use the safer Wasm version.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3122,"byte_end":3188,"line_start":104,"line_end":104,"column_start":2,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1785},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3242,"byte_end":3259,"line_start":107,"line_end":107,"column_start":2,"column_end":19},"name":"BlockConstruction","qualname":"::ExecutionContext::BlockConstruction","value":"ExecutionContext::BlockConstruction","parent":{"krate":0,"index":1780},"children":[],"decl_id":null,"docs":" Context used for block construction.\n","sig":null,"attributes":[{"value":"/ Context used for block construction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3200,"byte_end":3240,"line_start":106,"line_end":106,"column_start":2,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1787},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3389,"byte_end":3401,"line_start":111,"line_end":111,"column_start":2,"column_end":14},"name":"OffchainCall","qualname":"::ExecutionContext::OffchainCall","value":"ExecutionContext::OffchainCall(Option<(Box<offchain::Externalities>, offchain::Capabilities)>)","parent":{"krate":0,"index":1780},"children":[],"decl_id":null,"docs":" Context used for offchain calls.","sig":null,"attributes":[{"value":"/ Context used for offchain calls.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3262,"byte_end":3298,"line_start":108,"line_end":108,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3300,"byte_end":3303,"line_start":109,"line_end":109,"column_start":2,"column_end":5}},{"value":"/ This allows passing offchain extension and customizing available capabilities.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3305,"byte_end":3387,"line_start":110,"line_end":110,"column_start":2,"column_end":84}}]},{"kind":"Enum","id":{"krate":0,"index":1780},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2500,"byte_end":2516,"line_start":94,"line_end":94,"column_start":10,"column_end":26},"name":"ExecutionContext","qualname":"::ExecutionContext","value":"pub enum ExecutionContext {\n\n    /// Context used for general block import (including locally authored blocks).\n    Importing,\n\n    /// Context used for importing blocks as part of an initial sync of the blockchain.\n    ///\n    /// We distinguish between major sync and import so that validators who are running\n    /// their initial sync (or catching up after some time offline) can use the faster\n    /// native runtime (since we can reasonably assume the network as a whole has already\n    /// come to a broad conensus on the block and it probably hasn't been crafted\n    /// specifically to attack this node), but when importing blocks at the head of the\n    /// chain in normal operation they can use the safer Wasm version.\n    Syncing,\n\n    /// Context used for block construction.\n    BlockConstruction,\n\n    /// Context used for offchain calls.\n    ///\n    /// This allows passing offchain extension and customizing available capabilities.\n    OffchainCall(Option<(Box<offchain::Externalities>,\n                         offchain::Capabilities)>),\n}","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1783},{"krate":0,"index":1785},{"krate":0,"index":1787}],"decl_id":null,"docs":" Context for executing a call into the runtime.\n","sig":null,"attributes":[{"value":"/ Context for executing a call into the runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":2440,"byte_end":2490,"line_start":93,"line_end":93,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3559,"byte_end":3571,"line_start":116,"line_end":116,"column_start":9,"column_end":21},"name":"capabilities","qualname":"<ExecutionContext>::capabilities","value":"pub fn capabilities(&Self) -> offchain::Capabilities","parent":null,"children":[],"decl_id":null,"docs":" Returns the capabilities of particular context.\n","sig":null,"attributes":[{"value":"/ Returns the capabilities of particular context.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3499,"byte_end":3550,"line_start":115,"line_end":115,"column_start":2,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3629},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4178,"byte_end":4183,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::Bytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hex-serialized shim for `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Hex-serialized shim for `Vec<u8>`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3998,"byte_end":4036,"line_start":132,"line_end":132,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3631},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4234,"byte_end":4245,"line_start":135,"line_end":135,"column_start":68,"column_end":79},"name":"0","qualname":"::Bytes::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3629},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(with = \"bytes\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4212,"byte_end":4231,"line_start":135,"line_end":135,"column_start":46,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3697},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4816,"byte_end":4830,"line_start":161,"line_end":161,"column_start":12,"column_end":26},"name":"OpaqueMetadata","qualname":"::OpaqueMetadata","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stores the encoded `RuntimeMetadata` for the native side as opaque type.\n","sig":null,"attributes":[{"value":"/ Stores the encoded `RuntimeMetadata` for the native side as opaque type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4691,"byte_end":4767,"line_start":159,"line_end":159,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4930,"byte_end":4933,"line_start":165,"line_end":165,"column_start":9,"column_end":12},"name":"new","qualname":"<OpaqueMetadata>::new","value":"pub fn new(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance with the given metadata blob.\n","sig":null,"attributes":[{"value":"/ Creates a new instance with the given metadata blob.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4865,"byte_end":4921,"line_start":164,"line_end":164,"column_start":2,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3719},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5360,"byte_end":5372,"line_start":181,"line_end":181,"column_start":12,"column_end":24},"name":"OpaquePeerId","qualname":"::OpaquePeerId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple blob to hold a `PeerId` without committing to its format.\n","sig":null,"attributes":[{"value":"/ Simple blob to hold a `PeerId` without committing to its format.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5118,"byte_end":5186,"line_start":178,"line_end":178,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3721},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5373,"byte_end":5384,"line_start":181,"line_end":181,"column_start":25,"column_end":36},"name":"0","qualname":"::OpaquePeerId::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5447,"byte_end":5450,"line_start":185,"line_end":185,"column_start":9,"column_end":12},"name":"new","qualname":"<OpaquePeerId>::new","value":"pub fn new(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `OpaquePeerId`\n","sig":null,"attributes":[{"value":"/ Create new `OpaquePeerId`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5409,"byte_end":5438,"line_start":184,"line_end":184,"column_start":2,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1812},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5647,"byte_end":5653,"line_start":194,"line_end":194,"column_start":2,"column_end":8},"name":"Native","qualname":"::NativeOrEncoded::Native","value":"NativeOrEncoded::Native(R)","parent":{"krate":0,"index":1810},"children":[],"decl_id":null,"docs":" The native representation.\n","sig":null,"attributes":[{"value":"/ The native representation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5615,"byte_end":5645,"line_start":193,"line_end":193,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1815},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5692,"byte_end":5699,"line_start":196,"line_end":196,"column_start":2,"column_end":9},"name":"Encoded","qualname":"::NativeOrEncoded::Encoded","value":"NativeOrEncoded::Encoded(Vec<u8>)","parent":{"krate":0,"index":1810},"children":[],"decl_id":null,"docs":" The encoded representation.\n","sig":null,"attributes":[{"value":"/ The encoded representation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5659,"byte_end":5690,"line_start":195,"line_end":195,"column_start":2,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1810},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5593,"byte_end":5608,"line_start":192,"line_end":192,"column_start":10,"column_end":25},"name":"NativeOrEncoded","qualname":"::NativeOrEncoded","value":"pub enum NativeOrEncoded<R> {\n\n    /// The native representation.\n    Native(R),\n\n    /// The encoded representation.\n    Encoded(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":1812},{"krate":0,"index":1815}],"decl_id":null,"docs":" Something that is either a native or an encoded value.\n","sig":null,"attributes":[{"value":"/ Something that is either a native or an encoded value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5501,"byte_end":5559,"line_start":190,"line_end":190,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5560,"byte_end":5583,"line_start":191,"line_end":191,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":6187,"byte_end":6197,"line_start":216,"line_end":216,"column_start":9,"column_end":19},"name":"as_encoded","qualname":"<NativeOrEncoded<R>>::as_encoded","value":"pub fn as_encoded(&Self) -> Cow<, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the value as the encoded format.\n","sig":null,"attributes":[{"value":"/ Return the value as the encoded format.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":6135,"byte_end":6178,"line_start":215,"line_end":215,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":6420,"byte_end":6432,"line_start":224,"line_end":224,"column_start":9,"column_end":21},"name":"into_encoded","qualname":"<NativeOrEncoded<R>>::into_encoded","value":"pub fn into_encoded(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return the value as the encoded format.\n","sig":null,"attributes":[{"value":"/ Return the value as the encoded format.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":6368,"byte_end":6411,"line_start":223,"line_end":223,"column_start":2,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":3792},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7235,"byte_end":7251,"line_start":249,"line_end":249,"column_start":10,"column_end":26},"name":"NeverNativeValue","qualname":"::NeverNativeValue","value":"pub enum NeverNativeValue { }","parent":null,"children":[],"decl_id":null,"docs":" A value that is never in a native representation.\n This is type is useful in conjunction with `NativeOrEncoded`.\n","sig":null,"attributes":[{"value":"/ A value that is never in a native representation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7061,"byte_end":7114,"line_start":245,"line_end":245,"column_start":1,"column_end":54}},{"value":"/ This is type is useful in conjunction with `NativeOrEncoded`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7115,"byte_end":7180,"line_start":246,"line_end":246,"column_start":1,"column_end":66}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7181,"byte_end":7204,"line_start":247,"line_end":247,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":1837},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7790,"byte_end":7796,"line_start":270,"line_end":270,"column_start":11,"column_end":17},"name":"TypeId","qualname":"::TypeId","value":"TypeId","parent":null,"children":[{"krate":0,"index":1838}],"decl_id":null,"docs":" Provide a simple 4 byte identifier for a type.\n","sig":null,"attributes":[{"value":"/ Provide a simple 4 byte identifier for a type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7729,"byte_end":7779,"line_start":269,"line_end":269,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":1838},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7837,"byte_end":7844,"line_start":272,"line_end":272,"column_start":8,"column_end":15},"name":"TYPE_ID","qualname":"::TypeId::TYPE_ID","value":"[u8; ]","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" Simple 4 byte identifier.\n","sig":null,"attributes":[{"value":"/ Simple 4 byte identifier.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7800,"byte_end":7829,"line_start":271,"line_end":271,"column_start":2,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3797},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8053,"byte_end":8058,"line_start":281,"line_end":281,"column_start":2,"column_end":7},"name":"Error","qualname":"::LogLevel::Error","value":"LogLevel::Error","parent":{"krate":0,"index":3796},"children":[],"decl_id":null,"docs":" `Error` log level.\n","sig":null,"attributes":[{"value":"/ `Error` log level.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8029,"byte_end":8051,"line_start":280,"line_end":280,"column_start":2,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3800},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8088,"byte_end":8092,"line_start":283,"line_end":283,"column_start":2,"column_end":6},"name":"Warn","qualname":"::LogLevel::Warn","value":"LogLevel::Warn","parent":{"krate":0,"index":3796},"children":[],"decl_id":null,"docs":" `Warn` log level.\n","sig":null,"attributes":[{"value":"/ `Warn` log level.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8065,"byte_end":8086,"line_start":282,"line_end":282,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3803},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8122,"byte_end":8126,"line_start":285,"line_end":285,"column_start":2,"column_end":6},"name":"Info","qualname":"::LogLevel::Info","value":"LogLevel::Info","parent":{"krate":0,"index":3796},"children":[],"decl_id":null,"docs":" `Info` log level.\n","sig":null,"attributes":[{"value":"/ `Info` log level.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8099,"byte_end":8120,"line_start":284,"line_end":284,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3806},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8157,"byte_end":8162,"line_start":287,"line_end":287,"column_start":2,"column_end":7},"name":"Debug","qualname":"::LogLevel::Debug","value":"LogLevel::Debug","parent":{"krate":0,"index":3796},"children":[],"decl_id":null,"docs":" `Debug` log level.\n","sig":null,"attributes":[{"value":"/ `Debug` log level.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8133,"byte_end":8155,"line_start":286,"line_end":286,"column_start":2,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3809},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8193,"byte_end":8198,"line_start":289,"line_end":289,"column_start":2,"column_end":7},"name":"Trace","qualname":"::LogLevel::Trace","value":"LogLevel::Trace","parent":{"krate":0,"index":3796},"children":[],"decl_id":null,"docs":" `Trace` log level.\n","sig":null,"attributes":[{"value":"/ `Trace` log level.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8169,"byte_end":8191,"line_start":288,"line_end":288,"column_start":2,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":3796},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8017,"byte_end":8025,"line_start":279,"line_end":279,"column_start":10,"column_end":18},"name":"LogLevel","qualname":"::LogLevel","value":"pub enum LogLevel {\n\n    /// `Error` log level.\n    Error = ,\n\n    /// `Warn` log level.\n    Warn = ,\n\n    /// `Info` log level.\n    Info = ,\n\n    /// `Debug` log level.\n    Debug = ,\n\n    /// `Trace` log level.\n    Trace = ,\n}","parent":null,"children":[{"krate":0,"index":3797},{"krate":0,"index":3800},{"krate":0,"index":3803},{"krate":0,"index":3806},{"krate":0,"index":3809}],"decl_id":null,"docs":" A log level matching the one from `log` crate.","sig":null,"attributes":[{"value":"/ A log level matching the one from `log` crate.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7858,"byte_end":7908,"line_start":275,"line_end":275,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7909,"byte_end":7912,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ Used internally by `sp_io::log` method.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7913,"byte_end":7956,"line_start":277,"line_end":277,"column_start":1,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3836},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":10020,"byte_end":10024,"line_start":355,"line_end":355,"column_start":10,"column_end":14},"name":"Void","qualname":"::Void","value":"pub enum Void { }","parent":null,"children":[],"decl_id":null,"docs":" The void type - it cannot exist.\n","sig":null,"attributes":[{"value":"/ The void type - it cannot exist.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":9881,"byte_end":9917,"line_start":352,"line_end":352,"column_start":1,"column_end":37}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":17201,"byte_end":17211,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":17413,"byte_end":17423,"line_start":28,"line_end":28,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":17889,"byte_end":17899,"line_start":47,"line_end":47,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":18408,"byte_end":18411,"line_start":70,"line_end":70,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22078,"byte_end":22079,"line_start":82,"line_end":82,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23373,"byte_end":23387,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25179,"byte_end":25193,"line_start":180,"line_end":180,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":38959,"byte_end":38960,"line_start":599,"line_end":599,"column_start":77,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41666,"byte_end":41677,"line_start":688,"line_end":688,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41984,"byte_end":41995,"line_start":698,"line_end":698,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42122,"byte_end":42133,"line_start":705,"line_end":705,"column_start":20,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42159,"byte_end":42170,"line_start":707,"line_end":707,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42243,"byte_end":42254,"line_start":713,"line_end":713,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42343,"byte_end":42354,"line_start":719,"line_end":719,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42431,"byte_end":42442,"line_start":725,"line_end":725,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42530,"byte_end":42541,"line_start":731,"line_end":731,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42645,"byte_end":42656,"line_start":737,"line_end":737,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42980,"byte_end":42991,"line_start":756,"line_end":756,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":43083,"byte_end":43094,"line_start":762,"line_end":762,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":43206,"byte_end":43217,"line_start":769,"line_end":769,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":43359,"byte_end":43370,"line_start":775,"line_end":775,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":43754,"byte_end":43765,"line_start":789,"line_end":789,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":43980,"byte_end":43991,"line_start":796,"line_end":796,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":44279,"byte_end":44290,"line_start":804,"line_end":804,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":44969,"byte_end":44974,"line_start":831,"line_end":831,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":45044,"byte_end":45049,"line_start":835,"line_end":835,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":45240,"byte_end":45245,"line_start":844,"line_end":844,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":45358,"byte_end":45363,"line_start":852,"line_end":852,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":45408,"byte_end":45413,"line_start":856,"line_end":856,"column_start":18,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":45435,"byte_end":45440,"line_start":858,"line_end":858,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":45761,"byte_end":45766,"line_start":870,"line_end":870,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53766,"byte_end":53767,"line_start":1059,"line_end":1059,"column_start":39,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54116,"byte_end":54121,"line_start":1070,"line_end":1070,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":55058,"byte_end":55067,"line_start":1101,"line_end":1101,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":55253,"byte_end":55262,"line_start":1113,"line_end":1113,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56099,"byte_end":56119,"line_start":1138,"line_end":1138,"column_start":31,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65479,"byte_end":65481,"line_start":27,"line_end":27,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65595,"byte_end":65597,"line_start":29,"line_end":29,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65711,"byte_end":65713,"line_start":31,"line_end":31,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65827,"byte_end":65829,"line_start":33,"line_end":33,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65943,"byte_end":65945,"line_start":35,"line_end":35,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66059,"byte_end":66061,"line_start":37,"line_end":37,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66175,"byte_end":66177,"line_start":39,"line_end":39,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66291,"byte_end":66293,"line_start":41,"line_end":41,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66407,"byte_end":66409,"line_start":43,"line_end":43,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66523,"byte_end":66525,"line_start":45,"line_end":45,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66641,"byte_end":66644,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66761,"byte_end":66764,"line_start":49,"line_end":49,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66881,"byte_end":66884,"line_start":51,"line_end":51,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67001,"byte_end":67004,"line_start":53,"line_end":53,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67121,"byte_end":67124,"line_start":55,"line_end":55,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67241,"byte_end":67244,"line_start":57,"line_end":57,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67361,"byte_end":67364,"line_start":59,"line_end":59,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67481,"byte_end":67484,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67601,"byte_end":67604,"line_start":63,"line_end":63,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67721,"byte_end":67724,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67841,"byte_end":67844,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67961,"byte_end":67964,"line_start":69,"line_end":69,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68081,"byte_end":68084,"line_start":71,"line_end":71,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68201,"byte_end":68204,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68321,"byte_end":68324,"line_start":75,"line_end":75,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68441,"byte_end":68444,"line_start":77,"line_end":77,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68561,"byte_end":68564,"line_start":79,"line_end":79,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68681,"byte_end":68684,"line_start":81,"line_end":81,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68801,"byte_end":68804,"line_start":83,"line_end":83,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68921,"byte_end":68924,"line_start":85,"line_end":85,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69041,"byte_end":69044,"line_start":87,"line_end":87,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69161,"byte_end":69164,"line_start":89,"line_end":89,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69281,"byte_end":69284,"line_start":91,"line_end":91,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69401,"byte_end":69404,"line_start":93,"line_end":93,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69521,"byte_end":69524,"line_start":95,"line_end":95,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69641,"byte_end":69644,"line_start":97,"line_end":97,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69761,"byte_end":69764,"line_start":99,"line_end":99,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69881,"byte_end":69884,"line_start":101,"line_end":101,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70001,"byte_end":70004,"line_start":103,"line_end":103,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70121,"byte_end":70124,"line_start":105,"line_end":105,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70241,"byte_end":70244,"line_start":107,"line_end":107,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70361,"byte_end":70364,"line_start":109,"line_end":109,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70481,"byte_end":70484,"line_start":111,"line_end":111,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70601,"byte_end":70604,"line_start":113,"line_end":113,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70721,"byte_end":70724,"line_start":115,"line_end":115,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70841,"byte_end":70844,"line_start":117,"line_end":117,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70961,"byte_end":70964,"line_start":119,"line_end":119,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71081,"byte_end":71084,"line_start":121,"line_end":121,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71201,"byte_end":71204,"line_start":123,"line_end":123,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71321,"byte_end":71324,"line_start":125,"line_end":125,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71441,"byte_end":71444,"line_start":127,"line_end":127,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71561,"byte_end":71564,"line_start":129,"line_end":129,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71681,"byte_end":71684,"line_start":131,"line_end":131,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71801,"byte_end":71804,"line_start":133,"line_end":133,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71921,"byte_end":71924,"line_start":135,"line_end":135,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72041,"byte_end":72044,"line_start":137,"line_end":137,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72161,"byte_end":72164,"line_start":139,"line_end":139,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72281,"byte_end":72284,"line_start":141,"line_end":141,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72401,"byte_end":72404,"line_start":143,"line_end":143,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72521,"byte_end":72524,"line_start":145,"line_end":145,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72641,"byte_end":72644,"line_start":147,"line_end":147,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72761,"byte_end":72764,"line_start":149,"line_end":149,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72881,"byte_end":72884,"line_start":151,"line_end":151,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73001,"byte_end":73004,"line_start":153,"line_end":153,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73121,"byte_end":73124,"line_start":155,"line_end":155,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73241,"byte_end":73244,"line_start":157,"line_end":157,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73361,"byte_end":73364,"line_start":159,"line_end":159,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73481,"byte_end":73484,"line_start":161,"line_end":161,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73601,"byte_end":73604,"line_start":163,"line_end":163,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73721,"byte_end":73724,"line_start":165,"line_end":165,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73841,"byte_end":73844,"line_start":167,"line_end":167,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73961,"byte_end":73964,"line_start":169,"line_end":169,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74081,"byte_end":74084,"line_start":171,"line_end":171,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74201,"byte_end":74204,"line_start":173,"line_end":173,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74321,"byte_end":74324,"line_start":175,"line_end":175,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74441,"byte_end":74444,"line_start":177,"line_end":177,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74561,"byte_end":74564,"line_start":179,"line_end":179,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74681,"byte_end":74684,"line_start":181,"line_end":181,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74801,"byte_end":74804,"line_start":183,"line_end":183,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74921,"byte_end":74924,"line_start":185,"line_end":185,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75041,"byte_end":75044,"line_start":187,"line_end":187,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75161,"byte_end":75164,"line_start":189,"line_end":189,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75281,"byte_end":75284,"line_start":191,"line_end":191,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75401,"byte_end":75404,"line_start":193,"line_end":193,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75521,"byte_end":75524,"line_start":195,"line_end":195,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75641,"byte_end":75644,"line_start":197,"line_end":197,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75761,"byte_end":75764,"line_start":199,"line_end":199,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75881,"byte_end":75884,"line_start":201,"line_end":201,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76001,"byte_end":76004,"line_start":203,"line_end":203,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76121,"byte_end":76124,"line_start":205,"line_end":205,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76241,"byte_end":76244,"line_start":207,"line_end":207,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76361,"byte_end":76364,"line_start":209,"line_end":209,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76481,"byte_end":76484,"line_start":211,"line_end":211,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76601,"byte_end":76604,"line_start":213,"line_end":213,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76721,"byte_end":76724,"line_start":215,"line_end":215,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76841,"byte_end":76844,"line_start":217,"line_end":217,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76961,"byte_end":76964,"line_start":219,"line_end":219,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77081,"byte_end":77084,"line_start":221,"line_end":221,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77201,"byte_end":77204,"line_start":223,"line_end":223,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77321,"byte_end":77324,"line_start":225,"line_end":225,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77443,"byte_end":77447,"line_start":227,"line_end":227,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77567,"byte_end":77571,"line_start":229,"line_end":229,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77691,"byte_end":77695,"line_start":231,"line_end":231,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77815,"byte_end":77819,"line_start":233,"line_end":233,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77939,"byte_end":77943,"line_start":235,"line_end":235,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78063,"byte_end":78067,"line_start":237,"line_end":237,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78187,"byte_end":78191,"line_start":239,"line_end":239,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78311,"byte_end":78315,"line_start":241,"line_end":241,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78435,"byte_end":78439,"line_start":243,"line_end":243,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":80853,"byte_end":80857,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81114,"byte_end":81120,"line_start":77,"line_end":77,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81193,"byte_end":81199,"line_start":83,"line_end":83,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81272,"byte_end":81278,"line_start":89,"line_end":89,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81357,"byte_end":81363,"line_start":95,"line_end":95,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81481,"byte_end":81487,"line_start":103,"line_end":103,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81832,"byte_end":81838,"line_start":124,"line_end":124,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81910,"byte_end":81914,"line_start":130,"line_end":130,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":82017,"byte_end":82023,"line_start":137,"line_end":137,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":82183,"byte_end":82189,"line_start":145,"line_end":145,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":82291,"byte_end":82297,"line_start":151,"line_end":151,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":82418,"byte_end":82424,"line_start":158,"line_end":158,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":82566,"byte_end":82572,"line_start":164,"line_end":164,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":82949,"byte_end":82955,"line_start":178,"line_end":178,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":83156,"byte_end":83162,"line_start":185,"line_end":185,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":83531,"byte_end":83540,"line_start":196,"line_end":196,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":83804,"byte_end":83813,"line_start":211,"line_end":211,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84012,"byte_end":84021,"line_start":218,"line_end":218,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84370,"byte_end":84379,"line_start":227,"line_end":227,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84506,"byte_end":84515,"line_start":235,"line_end":235,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84590,"byte_end":84599,"line_start":241,"line_end":241,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84678,"byte_end":84687,"line_start":247,"line_end":247,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84717,"byte_end":84721,"line_start":249,"line_end":249,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84891,"byte_end":84900,"line_start":261,"line_end":261,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84973,"byte_end":84982,"line_start":267,"line_end":267,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85055,"byte_end":85064,"line_start":273,"line_end":273,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85156,"byte_end":85165,"line_start":279,"line_end":279,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85510,"byte_end":85519,"line_start":292,"line_end":292,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85639,"byte_end":85648,"line_start":298,"line_end":298,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87231,"byte_end":87237,"line_start":354,"line_end":354,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87879,"byte_end":87885,"line_start":377,"line_end":377,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":88351,"byte_end":88357,"line_start":393,"line_end":393,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":88384,"byte_end":88404,"line_start":395,"line_end":395,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":88484,"byte_end":88504,"line_start":401,"line_end":401,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":89129,"byte_end":89133,"line_start":425,"line_end":425,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":92882,"byte_end":92886,"line_start":540,"line_end":540,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":93533,"byte_end":93539,"line_start":559,"line_end":559,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":93617,"byte_end":93626,"line_start":564,"line_end":564,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":93736,"byte_end":93740,"line_start":570,"line_end":570,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101324,"byte_end":101328,"line_start":71,"line_end":71,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101576,"byte_end":101582,"line_start":81,"line_end":81,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101655,"byte_end":101661,"line_start":87,"line_end":87,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101734,"byte_end":101740,"line_start":93,"line_end":93,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101819,"byte_end":101825,"line_start":99,"line_end":99,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102003,"byte_end":102007,"line_start":113,"line_end":113,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102110,"byte_end":102116,"line_start":120,"line_end":120,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102284,"byte_end":102290,"line_start":128,"line_end":128,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102541,"byte_end":102547,"line_start":142,"line_end":142,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102649,"byte_end":102655,"line_start":148,"line_end":148,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102776,"byte_end":102782,"line_start":155,"line_end":155,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102924,"byte_end":102930,"line_start":161,"line_end":161,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":103307,"byte_end":103313,"line_start":175,"line_end":175,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":103514,"byte_end":103520,"line_start":182,"line_end":182,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":104008,"byte_end":104017,"line_start":195,"line_end":195,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":104281,"byte_end":104290,"line_start":210,"line_end":210,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":104489,"byte_end":104498,"line_start":217,"line_end":217,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":104847,"byte_end":104856,"line_start":226,"line_end":226,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":104983,"byte_end":104992,"line_start":234,"line_end":234,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105067,"byte_end":105076,"line_start":240,"line_end":240,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105155,"byte_end":105164,"line_start":246,"line_end":246,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105279,"byte_end":105283,"line_start":254,"line_end":254,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105368,"byte_end":105377,"line_start":260,"line_end":260,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105450,"byte_end":105459,"line_start":266,"line_end":266,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105532,"byte_end":105541,"line_start":272,"line_end":272,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105674,"byte_end":105683,"line_start":279,"line_end":279,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105796,"byte_end":105805,"line_start":285,"line_end":285,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106150,"byte_end":106159,"line_start":298,"line_end":298,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106637,"byte_end":106646,"line_start":315,"line_end":315,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107686,"byte_end":107692,"line_start":345,"line_end":345,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108194,"byte_end":108200,"line_start":362,"line_end":362,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108842,"byte_end":108848,"line_start":385,"line_end":385,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":109320,"byte_end":109340,"line_start":401,"line_end":401,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":109420,"byte_end":109440,"line_start":407,"line_end":407,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":109587,"byte_end":109591,"line_start":414,"line_end":414,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":109742,"byte_end":109746,"line_start":421,"line_end":421,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":109884,"byte_end":109888,"line_start":428,"line_end":428,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":110014,"byte_end":110021,"line_start":435,"line_end":435,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":110147,"byte_end":110151,"line_start":442,"line_end":442,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":110642,"byte_end":110646,"line_start":459,"line_end":459,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":114281,"byte_end":114285,"line_start":576,"line_end":576,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115440,"byte_end":115446,"line_start":604,"line_end":604,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115524,"byte_end":115533,"line_start":609,"line_end":609,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115643,"byte_end":115647,"line_start":615,"line_end":615,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":126779,"byte_end":126785,"line_start":58,"line_end":58,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":126890,"byte_end":126896,"line_start":64,"line_end":64,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127004,"byte_end":127010,"line_start":70,"line_end":70,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127103,"byte_end":127109,"line_start":76,"line_end":76,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127391,"byte_end":127397,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128023,"byte_end":128029,"line_start":113,"line_end":113,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128499,"byte_end":128519,"line_start":129,"line_end":129,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128599,"byte_end":128619,"line_start":135,"line_end":135,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128729,"byte_end":128735,"line_start":141,"line_end":141,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128757,"byte_end":128763,"line_start":143,"line_end":143,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128837,"byte_end":128843,"line_start":149,"line_end":149,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128916,"byte_end":128922,"line_start":155,"line_end":155,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":129027,"byte_end":129033,"line_start":161,"line_end":161,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":129251,"byte_end":129257,"line_start":175,"line_end":175,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":129340,"byte_end":129346,"line_start":181,"line_end":181,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":129460,"byte_end":129466,"line_start":188,"line_end":188,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":129608,"byte_end":129614,"line_start":194,"line_end":194,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":129992,"byte_end":129998,"line_start":208,"line_end":208,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":130199,"byte_end":130205,"line_start":215,"line_end":215,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":130482,"byte_end":130488,"line_start":223,"line_end":223,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":130765,"byte_end":130774,"line_start":233,"line_end":233,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":131038,"byte_end":131047,"line_start":248,"line_end":248,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":131246,"byte_end":131255,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":131604,"byte_end":131613,"line_start":264,"line_end":264,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":131740,"byte_end":131749,"line_start":272,"line_end":272,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":131824,"byte_end":131833,"line_start":278,"line_end":278,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":131912,"byte_end":131921,"line_start":284,"line_end":284,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132036,"byte_end":132045,"line_start":292,"line_end":292,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132118,"byte_end":132127,"line_start":298,"line_end":298,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132200,"byte_end":132209,"line_start":304,"line_end":304,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132301,"byte_end":132310,"line_start":310,"line_end":310,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132655,"byte_end":132664,"line_start":323,"line_end":323,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132784,"byte_end":132793,"line_start":329,"line_end":329,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":133910,"byte_end":133919,"line_start":360,"line_end":360,"column_start":62,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":135179,"byte_end":135183,"line_start":406,"line_end":406,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":139221,"byte_end":139225,"line_start":517,"line_end":517,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":139870,"byte_end":139876,"line_start":536,"line_end":536,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":139952,"byte_end":139961,"line_start":541,"line_end":541,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":140067,"byte_end":140071,"line_start":547,"line_end":547,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hasher.rs","byte_start":152366,"byte_end":152378,"line_start":29,"line_end":29,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hasher.rs","byte_start":152787,"byte_end":152799,"line_start":49,"line_end":49,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":178998,"byte_end":179018,"line_start":30,"line_end":30,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1463},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":179599,"byte_end":179619,"line_start":48,"line_end":48,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182507,"byte_end":182531,"line_start":73,"line_end":73,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":183435,"byte_end":183459,"line_start":103,"line_end":103,"column_start":26,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184652,"byte_end":184665,"line_start":147,"line_end":147,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":186258,"byte_end":186271,"line_start":194,"line_end":194,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":186705,"byte_end":186720,"line_start":207,"line_end":207,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":187242,"byte_end":187257,"line_start":223,"line_end":223,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":192248,"byte_end":192270,"line_start":415,"line_end":415,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":192507,"byte_end":192529,"line_start":424,"line_end":424,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155801,"byte_end":155812,"line_start":77,"line_end":77,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1546},{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156913,"byte_end":156922,"line_start":118,"line_end":118,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":158384,"byte_end":158401,"line_start":168,"line_end":168,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1560},{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159381,"byte_end":159396,"line_start":197,"line_end":197,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159816,"byte_end":159824,"line_start":212,"line_end":212,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160080,"byte_end":160089,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161472,"byte_end":161484,"line_start":277,"line_end":277,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162352,"byte_end":162364,"line_start":311,"line_end":311,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":169402,"byte_end":169405,"line_start":503,"line_end":503,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":171854,"byte_end":171874,"line_start":591,"line_end":591,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":172382,"byte_end":172402,"line_start":610,"line_end":610,"column_start":42,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":175951,"byte_end":175962,"line_start":715,"line_end":715,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176791,"byte_end":176809,"line_start":742,"line_end":742,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201445,"byte_end":201469,"line_start":53,"line_end":53,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212745,"byte_end":212763,"line_start":60,"line_end":60,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213004,"byte_end":213024,"line_start":69,"line_end":69,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213673,"byte_end":213684,"line_start":91,"line_end":91,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213770,"byte_end":213781,"line_start":97,"line_end":97,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214053,"byte_end":214064,"line_start":110,"line_end":110,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214344,"byte_end":214356,"line_start":120,"line_end":120,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214869,"byte_end":214889,"line_start":136,"line_end":136,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215859,"byte_end":215872,"line_start":170,"line_end":170,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216125,"byte_end":216140,"line_start":182,"line_end":182,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":217549,"byte_end":217552,"line_start":221,"line_end":221,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":221684,"byte_end":221696,"line_start":138,"line_end":138,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":221968,"byte_end":221980,"line_start":147,"line_end":147,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3479,"byte_end":3495,"line_start":114,"line_end":114,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4272,"byte_end":4277,"line_start":137,"line_end":137,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4355,"byte_end":4360,"line_start":141,"line_end":141,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4432,"byte_end":4437,"line_start":145,"line_end":145,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1798},{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4560,"byte_end":4565,"line_start":151,"line_end":151,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4847,"byte_end":4861,"line_start":163,"line_end":163,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5024,"byte_end":5038,"line_start":170,"line_end":170,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1806},{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5393,"byte_end":5405,"line_start":183,"line_end":183,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5756,"byte_end":5771,"line_start":200,"line_end":200,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5900,"byte_end":5915,"line_start":207,"line_end":207,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":6113,"byte_end":6128,"line_start":214,"line_end":214,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":6632,"byte_end":6647,"line_start":233,"line_end":233,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1830}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7303,"byte_end":7319,"line_start":252,"line_end":252,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7506,"byte_end":7522,"line_start":260,"line_end":260,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7574,"byte_end":7590,"line_start":263,"line_end":263,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8226,"byte_end":8234,"line_start":292,"line_end":292,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8561,"byte_end":8569,"line_start":304,"line_end":304,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1843}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8799,"byte_end":8804,"line_start":317,"line_end":317,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1557,"byte_end":1564,"line_start":53,"line_end":53,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1691,"byte_end":1701,"line_start":57,"line_end":57,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":94}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1711,"byte_end":1717,"line_start":58,"line_end":58,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":119}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1728,"byte_end":1737,"line_start":60,"line_end":60,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":372}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1748,"byte_end":1755,"line_start":62,"line_end":62,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":811}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1765,"byte_end":1772,"line_start":63,"line_end":63,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1004}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1782,"byte_end":1787,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1221}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1797,"byte_end":1801,"line_start":65,"line_end":65,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1410}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1847,"byte_end":1855,"line_start":68,"line_end":68,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1437}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":153952,"byte_end":153959,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1454}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":153993,"byte_end":154000,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1472}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1865,"byte_end":1872,"line_start":69,"line_end":69,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1656}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1882,"byte_end":1886,"line_start":70,"line_end":70,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1666}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1938,"byte_end":1944,"line_start":73,"line_end":73,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1690}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":1954,"byte_end":1961,"line_start":74,"line_end":74,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1749}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":17201,"byte_end":17211,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":95},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":17413,"byte_end":17423,"line_start":28,"line_end":28,"column_start":35,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":95},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":17889,"byte_end":17899,"line_start":47,"line_end":47,"column_start":33,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":95},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hexdisplay.rs","byte_start":18408,"byte_end":18411,"line_start":70,"line_end":70,"column_start":34,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":109}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":22078,"byte_end":22079,"line_start":82,"line_end":82,"column_start":51,"column_end":52},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":155},"to":{"krate":0,"index":151}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":23373,"byte_end":23387,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":25179,"byte_end":25193,"line_start":180,"line_end":180,"column_start":33,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1950},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26250,"byte_end":26255,"line_start":230,"line_end":230,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26258,"byte_end":26263,"line_start":230,"line_end":230,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26272,"byte_end":26277,"line_start":230,"line_end":230,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":1980},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":26286,"byte_end":26293,"line_start":230,"line_end":230,"column_start":58,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":30383,"byte_end":30388,"line_start":335,"line_end":335,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":189}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":38959,"byte_end":38960,"line_start":599,"line_end":599,"column_start":77,"column_end":78},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":197},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40781,"byte_end":40786,"line_start":656,"line_end":656,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":1980},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40796,"byte_end":40801,"line_start":657,"line_end":657,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40811,"byte_end":40818,"line_start":658,"line_end":658,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40822,"byte_end":40828,"line_start":659,"line_end":659,"column_start":4,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":189},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40832,"byte_end":40842,"line_start":660,"line_end":660,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":349},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40846,"byte_end":40855,"line_start":661,"line_end":661,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1790},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40859,"byte_end":40861,"line_start":662,"line_end":662,"column_start":4,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":1795},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40865,"byte_end":40870,"line_start":663,"line_end":663,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40874,"byte_end":40878,"line_start":664,"line_end":664,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40882,"byte_end":40886,"line_start":665,"line_end":665,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":40898,"byte_end":40905,"line_start":666,"line_end":666,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":1996},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41666,"byte_end":41677,"line_start":688,"line_end":688,"column_start":6,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":41984,"byte_end":41995,"line_start":698,"line_end":698,"column_start":43,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2184},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42122,"byte_end":42133,"line_start":705,"line_end":705,"column_start":20,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2184},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42159,"byte_end":42170,"line_start":707,"line_end":707,"column_start":22,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42243,"byte_end":42254,"line_start":713,"line_end":713,"column_start":22,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42343,"byte_end":42354,"line_start":719,"line_end":719,"column_start":26,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42431,"byte_end":42442,"line_start":725,"line_end":725,"column_start":26,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42530,"byte_end":42541,"line_start":731,"line_end":731,"column_start":25,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42645,"byte_end":42656,"line_start":737,"line_end":737,"column_start":49,"column_end":60},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":42980,"byte_end":42991,"line_start":756,"line_end":756,"column_start":32,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":43083,"byte_end":43094,"line_start":762,"line_end":762,"column_start":32,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":43206,"byte_end":43217,"line_start":769,"line_end":769,"column_start":28,"column_end":39},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":43359,"byte_end":43370,"line_start":775,"line_end":775,"column_start":29,"column_end":40},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":43754,"byte_end":43765,"line_start":789,"line_end":789,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2184},"to":{"krate":25,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":43980,"byte_end":43991,"line_start":796,"line_end":796,"column_start":39,"column_end":50},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2184},"to":{"krate":25,"index":1274}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":44279,"byte_end":44290,"line_start":804,"line_end":804,"column_start":31,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":44969,"byte_end":44974,"line_start":831,"line_end":831,"column_start":23,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2227},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":45044,"byte_end":45049,"line_start":835,"line_end":835,"column_start":23,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2227},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":45240,"byte_end":45245,"line_start":844,"line_end":844,"column_start":33,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2227},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":45358,"byte_end":45363,"line_start":852,"line_end":852,"column_start":22,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2227},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":45408,"byte_end":45413,"line_start":856,"line_end":856,"column_start":18,"column_end":23},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2227},"to":{"krate":0,"index":189}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":45435,"byte_end":45440,"line_start":858,"line_end":858,"column_start":18,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2227},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":45761,"byte_end":45766,"line_start":870,"line_end":870,"column_start":16,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2227},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":46961,"byte_end":46971,"line_start":900,"line_end":900,"column_start":17,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":349},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":46974,"byte_end":46979,"line_start":900,"line_end":900,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":46982,"byte_end":46987,"line_start":900,"line_end":900,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":46990,"byte_end":46994,"line_start":900,"line_end":900,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":46997,"byte_end":47001,"line_start":900,"line_end":900,"column_start":53,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53315,"byte_end":53319,"line_start":1046,"line_end":1046,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1989},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53329,"byte_end":53333,"line_start":1046,"line_end":1046,"column_start":45,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":1986},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53649,"byte_end":53654,"line_start":1054,"line_end":1054,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":337}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":53766,"byte_end":53767,"line_start":1059,"line_end":1059,"column_start":39,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":340},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":54116,"byte_end":54121,"line_start":1070,"line_end":1070,"column_start":44,"column_end":49},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":346},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":55058,"byte_end":55067,"line_start":1101,"line_end":1101,"column_start":20,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2242},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":55253,"byte_end":55262,"line_start":1113,"line_end":1113,"column_start":31,"column_end":40},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2242},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/crypto.rs","byte_start":56099,"byte_end":56119,"line_start":1138,"line_end":1138,"column_start":31,"column_end":51},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2403},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65479,"byte_end":65481,"line_start":27,"line_end":27,"column_start":31,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":375},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65595,"byte_end":65597,"line_start":29,"line_end":29,"column_start":31,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":379},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65711,"byte_end":65713,"line_start":31,"line_end":31,"column_start":31,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":383},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65827,"byte_end":65829,"line_start":33,"line_end":33,"column_start":31,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":387},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":65943,"byte_end":65945,"line_start":35,"line_end":35,"column_start":31,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":391},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66059,"byte_end":66061,"line_start":37,"line_end":37,"column_start":31,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":395},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66175,"byte_end":66177,"line_start":39,"line_end":39,"column_start":31,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":399},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66291,"byte_end":66293,"line_start":41,"line_end":41,"column_start":31,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":403},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66407,"byte_end":66409,"line_start":43,"line_end":43,"column_start":31,"column_end":33},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":407},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66523,"byte_end":66525,"line_start":45,"line_end":45,"column_start":31,"column_end":33},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":411},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66641,"byte_end":66644,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":415},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66761,"byte_end":66764,"line_start":49,"line_end":49,"column_start":32,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":419},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":66881,"byte_end":66884,"line_start":51,"line_end":51,"column_start":32,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":423},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67001,"byte_end":67004,"line_start":53,"line_end":53,"column_start":32,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":427},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67121,"byte_end":67124,"line_start":55,"line_end":55,"column_start":32,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":431},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67241,"byte_end":67244,"line_start":57,"line_end":57,"column_start":32,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":435},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67361,"byte_end":67364,"line_start":59,"line_end":59,"column_start":32,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":439},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67481,"byte_end":67484,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":443},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67601,"byte_end":67604,"line_start":63,"line_end":63,"column_start":32,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":447},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67721,"byte_end":67724,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":451},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67841,"byte_end":67844,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":455},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":67961,"byte_end":67964,"line_start":69,"line_end":69,"column_start":32,"column_end":35},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":459},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68081,"byte_end":68084,"line_start":71,"line_end":71,"column_start":32,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":463},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68201,"byte_end":68204,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":467},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68321,"byte_end":68324,"line_start":75,"line_end":75,"column_start":32,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":471},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68441,"byte_end":68444,"line_start":77,"line_end":77,"column_start":32,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":475},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68561,"byte_end":68564,"line_start":79,"line_end":79,"column_start":32,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":479},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68681,"byte_end":68684,"line_start":81,"line_end":81,"column_start":32,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":483},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68801,"byte_end":68804,"line_start":83,"line_end":83,"column_start":32,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":487},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":68921,"byte_end":68924,"line_start":85,"line_end":85,"column_start":32,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":491},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69041,"byte_end":69044,"line_start":87,"line_end":87,"column_start":32,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":495},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69161,"byte_end":69164,"line_start":89,"line_end":89,"column_start":32,"column_end":35},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":499},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69281,"byte_end":69284,"line_start":91,"line_end":91,"column_start":32,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":503},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69401,"byte_end":69404,"line_start":93,"line_end":93,"column_start":32,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":507},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69521,"byte_end":69524,"line_start":95,"line_end":95,"column_start":32,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":511},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69641,"byte_end":69644,"line_start":97,"line_end":97,"column_start":32,"column_end":35},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":515},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69761,"byte_end":69764,"line_start":99,"line_end":99,"column_start":32,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":519},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":69881,"byte_end":69884,"line_start":101,"line_end":101,"column_start":32,"column_end":35},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":523},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70001,"byte_end":70004,"line_start":103,"line_end":103,"column_start":32,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":527},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70121,"byte_end":70124,"line_start":105,"line_end":105,"column_start":32,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":531},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70241,"byte_end":70244,"line_start":107,"line_end":107,"column_start":32,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":535},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70361,"byte_end":70364,"line_start":109,"line_end":109,"column_start":32,"column_end":35},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":539},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70481,"byte_end":70484,"line_start":111,"line_end":111,"column_start":32,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":543},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70601,"byte_end":70604,"line_start":113,"line_end":113,"column_start":32,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":547},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70721,"byte_end":70724,"line_start":115,"line_end":115,"column_start":32,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":551},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70841,"byte_end":70844,"line_start":117,"line_end":117,"column_start":32,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":555},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":70961,"byte_end":70964,"line_start":119,"line_end":119,"column_start":32,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":559},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71081,"byte_end":71084,"line_start":121,"line_end":121,"column_start":32,"column_end":35},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71201,"byte_end":71204,"line_start":123,"line_end":123,"column_start":32,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":567},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71321,"byte_end":71324,"line_start":125,"line_end":125,"column_start":32,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":571},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71441,"byte_end":71444,"line_start":127,"line_end":127,"column_start":32,"column_end":35},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":575},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71561,"byte_end":71564,"line_start":129,"line_end":129,"column_start":32,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":579},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71681,"byte_end":71684,"line_start":131,"line_end":131,"column_start":32,"column_end":35},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":583},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71801,"byte_end":71804,"line_start":133,"line_end":133,"column_start":32,"column_end":35},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":587},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":71921,"byte_end":71924,"line_start":135,"line_end":135,"column_start":32,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":591},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72041,"byte_end":72044,"line_start":137,"line_end":137,"column_start":32,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":595},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72161,"byte_end":72164,"line_start":139,"line_end":139,"column_start":32,"column_end":35},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":599},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72281,"byte_end":72284,"line_start":141,"line_end":141,"column_start":32,"column_end":35},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":603},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72401,"byte_end":72404,"line_start":143,"line_end":143,"column_start":32,"column_end":35},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":607},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72521,"byte_end":72524,"line_start":145,"line_end":145,"column_start":32,"column_end":35},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":611},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72641,"byte_end":72644,"line_start":147,"line_end":147,"column_start":32,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":615},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72761,"byte_end":72764,"line_start":149,"line_end":149,"column_start":32,"column_end":35},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":619},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":72881,"byte_end":72884,"line_start":151,"line_end":151,"column_start":32,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":623},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73001,"byte_end":73004,"line_start":153,"line_end":153,"column_start":32,"column_end":35},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":627},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73121,"byte_end":73124,"line_start":155,"line_end":155,"column_start":32,"column_end":35},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":631},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73241,"byte_end":73244,"line_start":157,"line_end":157,"column_start":32,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":635},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73361,"byte_end":73364,"line_start":159,"line_end":159,"column_start":32,"column_end":35},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":639},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73481,"byte_end":73484,"line_start":161,"line_end":161,"column_start":32,"column_end":35},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":643},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73601,"byte_end":73604,"line_start":163,"line_end":163,"column_start":32,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":647},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73721,"byte_end":73724,"line_start":165,"line_end":165,"column_start":32,"column_end":35},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":651},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73841,"byte_end":73844,"line_start":167,"line_end":167,"column_start":32,"column_end":35},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":655},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":73961,"byte_end":73964,"line_start":169,"line_end":169,"column_start":32,"column_end":35},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":659},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74081,"byte_end":74084,"line_start":171,"line_end":171,"column_start":32,"column_end":35},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":663},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74201,"byte_end":74204,"line_start":173,"line_end":173,"column_start":32,"column_end":35},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":667},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74321,"byte_end":74324,"line_start":175,"line_end":175,"column_start":32,"column_end":35},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":671},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74441,"byte_end":74444,"line_start":177,"line_end":177,"column_start":32,"column_end":35},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":675},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74561,"byte_end":74564,"line_start":179,"line_end":179,"column_start":32,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":679},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74681,"byte_end":74684,"line_start":181,"line_end":181,"column_start":32,"column_end":35},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":683},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74801,"byte_end":74804,"line_start":183,"line_end":183,"column_start":32,"column_end":35},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":687},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":74921,"byte_end":74924,"line_start":185,"line_end":185,"column_start":32,"column_end":35},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":691},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75041,"byte_end":75044,"line_start":187,"line_end":187,"column_start":32,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":695},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75161,"byte_end":75164,"line_start":189,"line_end":189,"column_start":32,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":699},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75281,"byte_end":75284,"line_start":191,"line_end":191,"column_start":32,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":703},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75401,"byte_end":75404,"line_start":193,"line_end":193,"column_start":32,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":707},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75521,"byte_end":75524,"line_start":195,"line_end":195,"column_start":32,"column_end":35},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":711},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75641,"byte_end":75644,"line_start":197,"line_end":197,"column_start":32,"column_end":35},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":715},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75761,"byte_end":75764,"line_start":199,"line_end":199,"column_start":32,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":719},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":75881,"byte_end":75884,"line_start":201,"line_end":201,"column_start":32,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":723},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76001,"byte_end":76004,"line_start":203,"line_end":203,"column_start":32,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76121,"byte_end":76124,"line_start":205,"line_end":205,"column_start":32,"column_end":35},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":731},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76241,"byte_end":76244,"line_start":207,"line_end":207,"column_start":32,"column_end":35},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":735},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76361,"byte_end":76364,"line_start":209,"line_end":209,"column_start":32,"column_end":35},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":739},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76481,"byte_end":76484,"line_start":211,"line_end":211,"column_start":32,"column_end":35},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":743},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76601,"byte_end":76604,"line_start":213,"line_end":213,"column_start":32,"column_end":35},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":747},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76721,"byte_end":76724,"line_start":215,"line_end":215,"column_start":32,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":751},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76841,"byte_end":76844,"line_start":217,"line_end":217,"column_start":32,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":755},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":76961,"byte_end":76964,"line_start":219,"line_end":219,"column_start":32,"column_end":35},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":759},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77081,"byte_end":77084,"line_start":221,"line_end":221,"column_start":32,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":763},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77201,"byte_end":77204,"line_start":223,"line_end":223,"column_start":32,"column_end":35},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":767},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77321,"byte_end":77324,"line_start":225,"line_end":225,"column_start":32,"column_end":35},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":771},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77443,"byte_end":77447,"line_start":227,"line_end":227,"column_start":33,"column_end":37},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":775},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77567,"byte_end":77571,"line_start":229,"line_end":229,"column_start":33,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":779},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77691,"byte_end":77695,"line_start":231,"line_end":231,"column_start":33,"column_end":37},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":783},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77815,"byte_end":77819,"line_start":233,"line_end":233,"column_start":33,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":787},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":77939,"byte_end":77943,"line_start":235,"line_end":235,"column_start":33,"column_end":37},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":791},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78063,"byte_end":78067,"line_start":237,"line_end":237,"column_start":33,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":795},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78187,"byte_end":78191,"line_start":239,"line_end":239,"column_start":33,"column_end":37},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":799},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78311,"byte_end":78315,"line_start":241,"line_end":241,"column_start":33,"column_end":37},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":803},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/u32_trait.rs","byte_start":78435,"byte_end":78439,"line_start":243,"line_end":243,"column_start":33,"column_end":37},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":807},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":80853,"byte_end":80857,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":852},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81114,"byte_end":81120,"line_start":77,"line_end":77,"column_start":26,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2469},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81193,"byte_end":81199,"line_start":83,"line_end":83,"column_start":22,"column_end":28},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2469},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81272,"byte_end":81278,"line_start":89,"line_end":89,"column_start":22,"column_end":28},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2469},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81357,"byte_end":81363,"line_start":95,"line_end":95,"column_start":16,"column_end":22},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2469},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81481,"byte_end":81487,"line_start":103,"line_end":103,"column_start":42,"column_end":48},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2469},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81832,"byte_end":81838,"line_start":124,"line_end":124,"column_start":21,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2469},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":81910,"byte_end":81914,"line_start":130,"line_end":130,"column_start":23,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":76,"index":1897},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":82017,"byte_end":82023,"line_start":137,"line_end":137,"column_start":28,"column_end":34},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2469},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":82183,"byte_end":82189,"line_start":145,"line_end":145,"column_start":34,"column_end":40},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2469},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":82291,"byte_end":82297,"line_start":151,"line_end":151,"column_start":30,"column_end":36},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2469},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":82418,"byte_end":82424,"line_start":158,"line_end":158,"column_start":28,"column_end":34},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2469},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":82566,"byte_end":82572,"line_start":164,"line_end":164,"column_start":29,"column_end":35},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2469},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":82949,"byte_end":82955,"line_start":178,"line_end":178,"column_start":20,"column_end":26},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2469},"to":{"krate":25,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":83156,"byte_end":83162,"line_start":185,"line_end":185,"column_start":32,"column_end":38},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2469},"to":{"krate":25,"index":1274}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":83531,"byte_end":83540,"line_start":196,"line_end":196,"column_start":42,"column_end":51},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":83804,"byte_end":83813,"line_start":211,"line_end":211,"column_start":20,"column_end":29},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2525},"to":{"krate":25,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84012,"byte_end":84021,"line_start":218,"line_end":218,"column_start":32,"column_end":41},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2525},"to":{"krate":25,"index":1274}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84370,"byte_end":84379,"line_start":227,"line_end":227,"column_start":16,"column_end":25},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84506,"byte_end":84515,"line_start":235,"line_end":235,"column_start":18,"column_end":27},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84590,"byte_end":84599,"line_start":241,"line_end":241,"column_start":20,"column_end":29},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84678,"byte_end":84687,"line_start":247,"line_end":247,"column_start":13,"column_end":22},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84717,"byte_end":84721,"line_start":249,"line_end":249,"column_start":26,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":76,"index":2040},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84891,"byte_end":84900,"line_start":261,"line_end":261,"column_start":26,"column_end":35},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":84973,"byte_end":84982,"line_start":267,"line_end":267,"column_start":22,"column_end":31},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85055,"byte_end":85064,"line_start":273,"line_end":273,"column_start":22,"column_end":31},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85156,"byte_end":85165,"line_start":279,"line_end":279,"column_start":29,"column_end":38},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85510,"byte_end":85519,"line_start":292,"line_end":292,"column_start":29,"column_end":38},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":85639,"byte_end":85648,"line_start":298,"line_end":298,"column_start":6,"column_end":15},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87231,"byte_end":87237,"line_start":354,"line_end":354,"column_start":6,"column_end":12},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":87879,"byte_end":87885,"line_start":377,"line_end":377,"column_start":22,"column_end":28},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2469},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":88351,"byte_end":88357,"line_start":393,"line_end":393,"column_start":17,"column_end":23},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2469},"to":{"krate":0,"index":189}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":88384,"byte_end":88404,"line_start":395,"line_end":395,"column_start":23,"column_end":43},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2403},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":88484,"byte_end":88504,"line_start":401,"line_end":401,"column_start":24,"column_end":44},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2403},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":89129,"byte_end":89133,"line_start":425,"line_end":425,"column_start":20,"column_end":24},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":852},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":92882,"byte_end":92886,"line_start":540,"line_end":540,"column_start":6,"column_end":10},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":93533,"byte_end":93539,"line_start":559,"line_end":559,"column_start":21,"column_end":27},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2469},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":93617,"byte_end":93626,"line_start":564,"line_end":564,"column_start":21,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2525},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ed25519.rs","byte_start":93736,"byte_end":93740,"line_start":570,"line_end":570,"column_start":21,"column_end":25},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":852},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101324,"byte_end":101328,"line_start":71,"line_end":71,"column_start":16,"column_end":20},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101576,"byte_end":101582,"line_start":81,"line_end":81,"column_start":26,"column_end":32},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101655,"byte_end":101661,"line_start":87,"line_end":87,"column_start":22,"column_end":28},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101734,"byte_end":101740,"line_start":93,"line_end":93,"column_start":22,"column_end":28},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":101819,"byte_end":101825,"line_start":99,"line_end":99,"column_start":16,"column_end":22},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102003,"byte_end":102007,"line_start":113,"line_end":113,"column_start":23,"column_end":27},"kind":{"Impl":{"id":235}},"from":{"krate":76,"index":1897},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102110,"byte_end":102116,"line_start":120,"line_end":120,"column_start":28,"column_end":34},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102284,"byte_end":102290,"line_start":128,"line_end":128,"column_start":42,"column_end":48},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102541,"byte_end":102547,"line_start":142,"line_end":142,"column_start":34,"column_end":40},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2604},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102649,"byte_end":102655,"line_start":148,"line_end":148,"column_start":30,"column_end":36},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2604},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102776,"byte_end":102782,"line_start":155,"line_end":155,"column_start":28,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":102924,"byte_end":102930,"line_start":161,"line_end":161,"column_start":29,"column_end":35},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":103307,"byte_end":103313,"line_start":175,"line_end":175,"column_start":20,"column_end":26},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2604},"to":{"krate":25,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":103514,"byte_end":103520,"line_start":182,"line_end":182,"column_start":32,"column_end":38},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2604},"to":{"krate":25,"index":1274}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":104008,"byte_end":104017,"line_start":195,"line_end":195,"column_start":42,"column_end":51},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":104281,"byte_end":104290,"line_start":210,"line_end":210,"column_start":20,"column_end":29},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2660},"to":{"krate":25,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":104489,"byte_end":104498,"line_start":217,"line_end":217,"column_start":32,"column_end":41},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2660},"to":{"krate":25,"index":1274}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":104847,"byte_end":104856,"line_start":226,"line_end":226,"column_start":16,"column_end":25},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":104983,"byte_end":104992,"line_start":234,"line_end":234,"column_start":18,"column_end":27},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105067,"byte_end":105076,"line_start":240,"line_end":240,"column_start":20,"column_end":29},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105155,"byte_end":105164,"line_start":246,"line_end":246,"column_start":13,"column_end":22},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105279,"byte_end":105283,"line_start":254,"line_end":254,"column_start":26,"column_end":30},"kind":{"Impl":{"id":256}},"from":{"krate":76,"index":2040},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105368,"byte_end":105377,"line_start":260,"line_end":260,"column_start":26,"column_end":35},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105450,"byte_end":105459,"line_start":266,"line_end":266,"column_start":22,"column_end":31},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105532,"byte_end":105541,"line_start":272,"line_end":272,"column_start":22,"column_end":31},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105674,"byte_end":105683,"line_start":279,"line_end":279,"column_start":38,"column_end":47},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":105796,"byte_end":105805,"line_start":285,"line_end":285,"column_start":29,"column_end":38},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106150,"byte_end":106159,"line_start":298,"line_end":298,"column_start":29,"column_end":38},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":106637,"byte_end":106646,"line_start":315,"line_end":315,"column_start":6,"column_end":15},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":107686,"byte_end":107692,"line_start":345,"line_end":345,"column_start":17,"column_end":23},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2604},"to":{"krate":0,"index":189}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108194,"byte_end":108200,"line_start":362,"line_end":362,"column_start":6,"column_end":12},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":108842,"byte_end":108848,"line_start":385,"line_end":385,"column_start":22,"column_end":28},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2604},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":109320,"byte_end":109340,"line_start":401,"line_end":401,"column_start":23,"column_end":43},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2403},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":109420,"byte_end":109440,"line_start":407,"line_end":407,"column_start":24,"column_end":44},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2403},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":109587,"byte_end":109591,"line_start":414,"line_end":414,"column_start":30,"column_end":34},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":109742,"byte_end":109746,"line_start":421,"line_end":421,"column_start":26,"column_end":30},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":109884,"byte_end":109888,"line_start":428,"line_end":428,"column_start":36,"column_end":40},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":110014,"byte_end":110021,"line_start":435,"line_end":435,"column_start":33,"column_end":40},"kind":{"Impl":{"id":272}},"from":{"krate":129,"index":977},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":110147,"byte_end":110151,"line_start":442,"line_end":442,"column_start":37,"column_end":41},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":110642,"byte_end":110646,"line_start":459,"line_end":459,"column_start":20,"column_end":24},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":1055},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":114281,"byte_end":114285,"line_start":576,"line_end":576,"column_start":6,"column_end":10},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":1055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115440,"byte_end":115446,"line_start":604,"line_end":604,"column_start":21,"column_end":27},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2604},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115524,"byte_end":115533,"line_start":609,"line_end":609,"column_start":21,"column_end":30},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2660},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/sr25519.rs","byte_start":115643,"byte_end":115647,"line_start":615,"line_end":615,"column_start":21,"column_end":25},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":1055},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":126779,"byte_end":126785,"line_start":58,"line_end":58,"column_start":21,"column_end":27},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":1833}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":126890,"byte_end":126896,"line_start":64,"line_end":64,"column_start":14,"column_end":20},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":1822}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127004,"byte_end":127010,"line_start":70,"line_end":70,"column_start":20,"column_end":26},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127103,"byte_end":127109,"line_start":76,"line_end":76,"column_start":13,"column_end":19},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":127391,"byte_end":127397,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128023,"byte_end":128029,"line_start":113,"line_end":113,"column_start":22,"column_end":28},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2705},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128499,"byte_end":128519,"line_start":129,"line_end":129,"column_start":23,"column_end":43},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2403},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128599,"byte_end":128619,"line_start":135,"line_end":135,"column_start":24,"column_end":44},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2403},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128729,"byte_end":128735,"line_start":141,"line_end":141,"column_start":17,"column_end":23},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2705},"to":{"krate":0,"index":189}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128757,"byte_end":128763,"line_start":143,"line_end":143,"column_start":18,"column_end":24},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128837,"byte_end":128843,"line_start":149,"line_end":149,"column_start":22,"column_end":28},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":128916,"byte_end":128922,"line_start":155,"line_end":155,"column_start":22,"column_end":28},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":129027,"byte_end":129033,"line_start":161,"line_end":161,"column_start":42,"column_end":48},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":129251,"byte_end":129257,"line_start":175,"line_end":175,"column_start":21,"column_end":27},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":129340,"byte_end":129346,"line_start":181,"line_end":181,"column_start":34,"column_end":40},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2705},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":129460,"byte_end":129466,"line_start":188,"line_end":188,"column_start":28,"column_end":34},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":129608,"byte_end":129614,"line_start":194,"line_end":194,"column_start":29,"column_end":35},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":129992,"byte_end":129998,"line_start":208,"line_end":208,"column_start":20,"column_end":26},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2705},"to":{"krate":25,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":130199,"byte_end":130205,"line_start":215,"line_end":215,"column_start":32,"column_end":38},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2705},"to":{"krate":25,"index":1274}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":130482,"byte_end":130488,"line_start":223,"line_end":223,"column_start":29,"column_end":35},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":130765,"byte_end":130774,"line_start":233,"line_end":233,"column_start":42,"column_end":51},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":131038,"byte_end":131047,"line_start":248,"line_end":248,"column_start":20,"column_end":29},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2758},"to":{"krate":25,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":131246,"byte_end":131255,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2758},"to":{"krate":25,"index":1274}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":131604,"byte_end":131613,"line_start":264,"line_end":264,"column_start":16,"column_end":25},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":131740,"byte_end":131749,"line_start":272,"line_end":272,"column_start":18,"column_end":27},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":131824,"byte_end":131833,"line_start":278,"line_end":278,"column_start":20,"column_end":29},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":131912,"byte_end":131921,"line_start":284,"line_end":284,"column_start":13,"column_end":22},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132036,"byte_end":132045,"line_start":292,"line_end":292,"column_start":26,"column_end":35},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132118,"byte_end":132127,"line_start":298,"line_end":298,"column_start":22,"column_end":31},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132200,"byte_end":132209,"line_start":304,"line_end":304,"column_start":22,"column_end":31},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132301,"byte_end":132310,"line_start":310,"line_end":310,"column_start":29,"column_end":38},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132655,"byte_end":132664,"line_start":323,"line_end":323,"column_start":29,"column_end":38},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":132784,"byte_end":132793,"line_start":329,"line_end":329,"column_start":6,"column_end":15},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":133910,"byte_end":133919,"line_start":360,"line_end":360,"column_start":62,"column_end":71},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":135179,"byte_end":135183,"line_start":406,"line_end":406,"column_start":20,"column_end":24},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":2789},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":139221,"byte_end":139225,"line_start":517,"line_end":517,"column_start":6,"column_end":10},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":2789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":139870,"byte_end":139876,"line_start":536,"line_end":536,"column_start":21,"column_end":27},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":2705},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":139952,"byte_end":139961,"line_start":541,"line_end":541,"column_start":21,"column_end":30},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":2758},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/ecdsa.rs","byte_start":140067,"byte_end":140071,"line_start":547,"line_end":547,"column_start":21,"column_end":25},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":2789},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hasher.rs","byte_start":152366,"byte_end":152378,"line_start":29,"line_end":29,"column_start":18,"column_end":30},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":2794},"to":{"krate":147,"index":11}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/hasher.rs","byte_start":152787,"byte_end":152799,"line_start":49,"line_end":49,"column_start":18,"column_end":30},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":2798},"to":{"krate":147,"index":11}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":178998,"byte_end":179018,"line_start":30,"line_end":30,"column_start":6,"column_end":26},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":2802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/storage.rs","byte_start":179599,"byte_end":179619,"line_start":48,"line_end":48,"column_start":26,"column_end":46},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":2802},"to":{"krate":0,"index":1540}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":182507,"byte_end":182531,"line_start":73,"line_end":73,"column_start":6,"column_end":30},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":2831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":183435,"byte_end":183459,"line_start":103,"line_end":103,"column_start":26,"column_end":50},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":2831},"to":{"krate":0,"index":1540}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":184652,"byte_end":184665,"line_start":147,"line_end":147,"column_start":6,"column_end":19},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":2839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":186258,"byte_end":186271,"line_start":194,"line_end":194,"column_start":15,"column_end":28},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":2839},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":186705,"byte_end":186720,"line_start":207,"line_end":207,"column_start":6,"column_end":21},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":187242,"byte_end":187257,"line_start":223,"line_end":223,"column_start":34,"column_end":49},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":2851},"to":{"krate":0,"index":1584}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":192248,"byte_end":192270,"line_start":415,"line_end":415,"column_start":6,"column_end":28},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":2864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/testing.rs","byte_start":192507,"byte_end":192529,"line_start":424,"line_end":424,"column_start":26,"column_end":48},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":2864},"to":{"krate":0,"index":1651}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154182,"byte_end":154187,"line_start":36,"line_end":36,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":1540}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154190,"byte_end":154194,"line_start":36,"line_end":36,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1540}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":154197,"byte_end":154201,"line_start":36,"line_end":36,"column_start":43,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1540}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":155801,"byte_end":155812,"line_start":77,"line_end":77,"column_start":23,"column_end":34},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":2869},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":156913,"byte_end":156922,"line_start":118,"line_end":118,"column_start":23,"column_end":32},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":3003},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":158384,"byte_end":158401,"line_start":168,"line_end":168,"column_start":23,"column_end":40},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":3045},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159381,"byte_end":159396,"line_start":197,"line_end":197,"column_start":6,"column_end":21},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":3114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":159816,"byte_end":159824,"line_start":212,"line_end":212,"column_start":6,"column_end":14},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":3201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":160080,"byte_end":160089,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":3152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":161472,"byte_end":161484,"line_start":277,"line_end":277,"column_start":6,"column_end":18},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":3286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162352,"byte_end":162364,"line_start":311,"line_end":311,"column_start":37,"column_end":49},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":3286},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":162553,"byte_end":162557,"line_start":318,"line_end":318,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1584}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":169402,"byte_end":169405,"line_start":503,"line_end":503,"column_start":51,"column_end":54},"kind":{"Impl":{"id":400}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":1584}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":171854,"byte_end":171874,"line_start":591,"line_end":591,"column_start":9,"column_end":29},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":1621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":172382,"byte_end":172402,"line_start":610,"line_end":610,"column_start":42,"column_end":62},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":1621},"to":{"krate":0,"index":1584}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":175951,"byte_end":175962,"line_start":715,"line_end":715,"column_start":6,"column_end":17},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":3301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/offchain/mod.rs","byte_start":176791,"byte_end":176809,"line_start":742,"line_end":742,"column_start":6,"column_end":24},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":3313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/changes_trie.rs","byte_start":201445,"byte_end":201469,"line_start":53,"line_end":53,"column_start":6,"column_end":30},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":3444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211680,"byte_end":211685,"line_start":29,"line_end":29,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1700}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211688,"byte_end":211692,"line_start":29,"line_end":29,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1700}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211695,"byte_end":211699,"line_start":29,"line_end":29,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1700}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211702,"byte_end":211712,"line_start":29,"line_end":29,"column_start":47,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1735},"to":{"krate":0,"index":1700}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":211715,"byte_end":211720,"line_start":29,"line_end":29,"column_start":60,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":1700}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":212745,"byte_end":212763,"line_start":60,"line_end":60,"column_start":31,"column_end":49},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":1708},"to":{"krate":0,"index":1705}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213004,"byte_end":213024,"line_start":69,"line_end":69,"column_start":27,"column_end":47},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":1716},"to":{"krate":0,"index":1705}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213673,"byte_end":213684,"line_start":91,"line_end":91,"column_start":24,"column_end":35},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":3551},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":213770,"byte_end":213781,"line_start":97,"line_end":97,"column_start":10,"column_end":21},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":3551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214053,"byte_end":214064,"line_start":110,"line_end":110,"column_start":31,"column_end":42},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":3551},"to":{"krate":0,"index":1705}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214344,"byte_end":214356,"line_start":120,"line_end":120,"column_start":28,"column_end":40},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":3559},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":214869,"byte_end":214889,"line_start":136,"line_end":136,"column_start":6,"column_end":26},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":3563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215076,"byte_end":215080,"line_start":144,"line_end":144,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1735}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215083,"byte_end":215087,"line_start":144,"line_end":144,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1735}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":215859,"byte_end":215872,"line_start":170,"line_end":170,"column_start":6,"column_end":19},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":3573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216125,"byte_end":216140,"line_start":182,"line_end":182,"column_start":6,"column_end":21},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":3585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":216349,"byte_end":216353,"line_start":190,"line_end":190,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1743}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":217109,"byte_end":217113,"line_start":210,"line_end":210,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":3609}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":217116,"byte_end":217120,"line_start":210,"line_end":210,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":3609}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/traits.rs","byte_start":217549,"byte_end":217552,"line_start":221,"line_end":221,"column_start":21,"column_end":24},"kind":{"Impl":{"id":437}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":3609}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":221684,"byte_end":221696,"line_start":138,"line_end":138,"column_start":6,"column_end":18},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":3624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/testing.rs","byte_start":221968,"byte_end":221980,"line_start":147,"line_end":147,"column_start":36,"column_end":48},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":3624},"to":{"krate":0,"index":3609}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":3479,"byte_end":3495,"line_start":114,"line_end":114,"column_start":6,"column_end":22},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":1780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4272,"byte_end":4277,"line_start":137,"line_end":137,"column_start":24,"column_end":29},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":3629},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4355,"byte_end":4360,"line_start":141,"line_end":141,"column_start":31,"column_end":36},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":3629},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4432,"byte_end":4437,"line_start":145,"line_end":145,"column_start":16,"column_end":21},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":3629},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4560,"byte_end":4565,"line_start":151,"line_end":151,"column_start":31,"column_end":36},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":3629},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":4847,"byte_end":4861,"line_start":163,"line_end":163,"column_start":6,"column_end":20},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":3697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5024,"byte_end":5038,"line_start":170,"line_end":170,"column_start":29,"column_end":43},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":3697},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5393,"byte_end":5405,"line_start":183,"line_end":183,"column_start":6,"column_end":18},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":3719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5756,"byte_end":5771,"line_start":200,"line_end":200,"column_start":21,"column_end":36},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":1810},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":5900,"byte_end":5915,"line_start":207,"line_end":207,"column_start":47,"column_end":62},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":1810},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":6113,"byte_end":6128,"line_start":214,"line_end":214,"column_start":24,"column_end":39},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":1810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":6632,"byte_end":6647,"line_start":233,"line_end":233,"column_start":50,"column_end":65},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":1810},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7303,"byte_end":7319,"line_start":252,"line_end":252,"column_start":24,"column_end":40},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":3792},"to":{"krate":21,"index":109}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7506,"byte_end":7522,"line_start":260,"line_end":260,"column_start":28,"column_end":44},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":3792},"to":{"krate":21,"index":699}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":7574,"byte_end":7590,"line_start":263,"line_end":263,"column_start":24,"column_end":40},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":3792},"to":{"krate":21,"index":127}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8226,"byte_end":8234,"line_start":292,"line_end":292,"column_start":20,"column_end":28},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":3796},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8561,"byte_end":8569,"line_start":304,"line_end":304,"column_start":27,"column_end":35},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":3796},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":8799,"byte_end":8804,"line_start":317,"line_end":317,"column_start":30,"column_end":35},"kind":{"Impl":{"id":476}},"from":{"krate":61,"index":181},"to":{"krate":2,"index":1989}}]}