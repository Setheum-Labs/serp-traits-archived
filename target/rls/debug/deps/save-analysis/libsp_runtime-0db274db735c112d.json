{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0","program":"/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_runtime","--edition=2018","/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"log\"","--cfg","feature=\"rand\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=0db274db735c112d","-C","extra-filename=-0db274db735c112d","--out-dir","/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps","-L","dependency=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps","--extern","either=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libeither-7b78aca2110fee69.rmeta","--extern","hash256_std_hasher=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libhash256_std_hasher-e34ac145857db98c.rmeta","--extern","impl_trait_for_tuples=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libimpl_trait_for_tuples-aa72137a2bc842f1.so","--extern","log=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/liblog-5304c8458a68373a.rmeta","--extern","codec=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libparity_scale_codec-b38ed3f0a4e0f6cc.rmeta","--extern","parity_util_mem=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libparity_util_mem-a6bf068991232c90.rmeta","--extern","paste=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libpaste-7a9336802b8e1163.so","--extern","rand=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/librand-fa7aeccaab79dc34.rmeta","--extern","serde=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libserde-c1d0451fd273a165.rmeta","--extern","sp_application_crypto=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_application_crypto-97f840c10d0c2751.rmeta","--extern","sp_arithmetic=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_arithmetic-2ada7ade9f2ecb61.rmeta","--extern","sp_core=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_core-cba9ce4ea9a4c43e.rmeta","--extern","sp_io=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_io-42cf169bf4521445.rmeta","--extern","sp_std=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_std-0142de4e2fb49a91.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_runtime-0db274db735c112d.rmeta"},"prelude":{"crate_id":{"name":"sp_runtime","disambiguator":[10633588416924757119,2482730311043215932]},"crate_root":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src","external_crates":[{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":18,"id":{"name":"parity_scale_codec","disambiguator":[8513279373943582847,10751956381400254447]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":19,"id":{"name":"parity_scale_codec_derive","disambiguator":[3988632595002997288,5128307631409362997]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":20,"id":{"name":"arrayvec","disambiguator":[1943503948824698767,8928204549588057885]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":21,"id":{"name":"byte_slice_cast","disambiguator":[11971851078352766489,17994270080533667189]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":22,"id":{"name":"serde","disambiguator":[9329802083187344169,15516913349122290357]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":23,"id":{"name":"serde_derive","disambiguator":[9132577773600900999,13098957011468639310]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":24,"id":{"name":"sp_std","disambiguator":[9770677728196279493,12510806215599864837]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":25,"id":{"name":"paste","disambiguator":[8828623746635266423,3569886997012004366]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","num":26,"id":{"name":"sp_application_crypto","disambiguator":[6863622932818007083,12016026392606748588]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":27,"id":{"name":"sp_core","disambiguator":[482245497719965997,4446364731874136958]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":28,"id":{"name":"sp_runtime_interface","disambiguator":[8486305343948881103,18310204470691800149]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":29,"id":{"name":"sp_wasm_interface","disambiguator":[12654239842700216049,8433569663077031038]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","num":30,"id":{"name":"impl_trait_for_tuples","disambiguator":[9660762680991374145,8791689571548580469]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":31,"id":{"name":"wasmi","disambiguator":[6918656205759776739,8549698197006326748]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":32,"id":{"name":"memory_units","disambiguator":[4446909059691065796,8711733259455937782]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":33,"id":{"name":"parity_wasm","disambiguator":[2746304515579433884,15008885245026691101]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":34,"id":{"name":"wasmi_validation","disambiguator":[12503892293425695562,631775191906383592]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":35,"id":{"name":"num_rational","disambiguator":[8002101714546462564,7774992686627339530]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":36,"id":{"name":"num_bigint","disambiguator":[8324002608551350377,6864858279968498277]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":37,"id":{"name":"num_integer","disambiguator":[5126256796491658918,13702474337812182890]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":38,"id":{"name":"num_traits","disambiguator":[12449281939908862398,945796103035123006]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":39,"id":{"name":"libc","disambiguator":[7953600248772063458,1989307123664392873]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":40,"id":{"name":"sp_tracing","disambiguator":[9619578780568606008,17901182021480941559]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":41,"id":{"name":"tracing_core","disambiguator":[11735089163411024588,17388945486717174255]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":42,"id":{"name":"lazy_static","disambiguator":[4038955093903438243,10998562936998939215]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":43,"id":{"name":"tracing","disambiguator":[12634947417058916823,13964040762799800002]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":44,"id":{"name":"cfg_if","disambiguator":[11748229077813686416,18120593503603249335]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":45,"id":{"name":"pin_project_lite","disambiguator":[10940599627664034505,1256839874217548822]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":46,"id":{"name":"tracing_subscriber","disambiguator":[2737517103962892138,6007003846142012037]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":47,"id":{"name":"regex","disambiguator":[15379754631532878358,1305285703807680371]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":48,"id":{"name":"aho_corasick","disambiguator":[15808597861067690095,17129261582138448034]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":49,"id":{"name":"memchr","disambiguator":[1157675088820504487,7216068552727726090]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":50,"id":{"name":"regex_syntax","disambiguator":[15754485282953042439,939955947925160166]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":51,"id":{"name":"thread_local","disambiguator":[4515805766320255868,12702638825636986852]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":52,"id":{"name":"once_cell","disambiguator":[12659116934471307003,7435940676996991787]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":53,"id":{"name":"parking_lot","disambiguator":[18159808056392103160,16155596511951534654]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":54,"id":{"name":"instant","disambiguator":[6707731622692707509,11541478860689369278]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":55,"id":{"name":"lock_api","disambiguator":[117164551345877035,12793837009537715804]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":56,"id":{"name":"scopeguard","disambiguator":[6745301356711570827,8805850024978740077]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":57,"id":{"name":"parking_lot_core","disambiguator":[13491894724313637548,4430950099799626494]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":58,"id":{"name":"smallvec","disambiguator":[12123569432201045790,1609040209808900757]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":59,"id":{"name":"matchers","disambiguator":[11196127239289206652,8821764124139599593]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":60,"id":{"name":"regex_automata","disambiguator":[1356799715280784519,12525503415491810456]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":61,"id":{"name":"byteorder","disambiguator":[16743341458239395833,5344541827637086529]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":62,"id":{"name":"ansi_term","disambiguator":[13348744980724887879,5052188682016064389]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":63,"id":{"name":"tracing_log","disambiguator":[2517198273552123748,17355328636754591651]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","num":64,"id":{"name":"log","disambiguator":[3545289885770114131,433247333334147900]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":65,"id":{"name":"serde_json","disambiguator":[2535307572117126142,15340677427040480041]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":66,"id":{"name":"itoa","disambiguator":[1783620119987649435,3821505174059274534]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":67,"id":{"name":"ryu","disambiguator":[4560945869205572345,5209367066204268501]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":68,"id":{"name":"tracing_serde","disambiguator":[4562426333319122918,15922045924750474936]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":69,"id":{"name":"sharded_slab","disambiguator":[17401401532503036136,1601036186833089112]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":70,"id":{"name":"chrono","disambiguator":[17126090541689444332,1886024564587297196]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":71,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[18335766830024536561,5137992637639085820]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":72,"id":{"name":"sp_externalities","disambiguator":[15346619557778524113,15546321444447335287]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":73,"id":{"name":"sp_storage","disambiguator":[12236995375180460119,10483812130181742021]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":74,"id":{"name":"sp_debug_derive","disambiguator":[1127781656639809926,12270005864681690604]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":75,"id":{"name":"ref_cast","disambiguator":[3109219419575014207,1073703474336682823]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":76,"id":{"name":"ref_cast_impl","disambiguator":[548036109860010999,5849971523560802531]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":77,"id":{"name":"impl_serde","disambiguator":[807954869803654047,4716339343125958352]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":78,"id":{"name":"environmental","disambiguator":[12825357754638386979,7940730235394234995]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":79,"id":{"name":"primitive_types","disambiguator":[11755663010420176922,11551187208533645918]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":80,"id":{"name":"fixed_hash","disambiguator":[761001719887353079,113272237603088689]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":81,"id":{"name":"static_assertions","disambiguator":[17267408535625969050,4632693660215762815]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":82,"id":{"name":"rustc_hex","disambiguator":[8252233264516824388,17670331916333253350]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":83,"id":{"name":"rand","disambiguator":[8754712101818231124,439968306620514562]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":84,"id":{"name":"rand_core","disambiguator":[17249439947178837211,16150054665629866134]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":85,"id":{"name":"getrandom","disambiguator":[5295995297352709213,7943019062197219340]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":86,"id":{"name":"uint","disambiguator":[249403627217210170,66937591079663351]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":87,"id":{"name":"hex","disambiguator":[5817943069691027302,2071035837552761178]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":88,"id":{"name":"crunchy","disambiguator":[16496986770395509475,10742896350538019007]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":89,"id":{"name":"impl_codec","disambiguator":[18061770301012622754,8940897700826662907]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":90,"id":{"name":"blake2_rfc","disambiguator":[11744292092095819415,9801326368370969682]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":91,"id":{"name":"arrayvec","disambiguator":[14648713630236782063,9849397673914679400]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":92,"id":{"name":"nodrop","disambiguator":[11522295318034127309,11770490405937775818]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":93,"id":{"name":"constant_time_eq","disambiguator":[11542931171304914434,3999952699895281030]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":94,"id":{"name":"sha2","disambiguator":[6501481284549552844,10223970258463939953]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":95,"id":{"name":"block_buffer","disambiguator":[13966198174714371443,9733068092495573015]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":96,"id":{"name":"generic_array","disambiguator":[17630325060485713573,8632611388700851125]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":97,"id":{"name":"typenum","disambiguator":[8726524992263171078,2989859816024006970]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":98,"id":{"name":"digest","disambiguator":[3267007905718091736,6472354886699068987]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":99,"id":{"name":"opaque_debug","disambiguator":[6572339997394954866,9498658499336361599]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":100,"id":{"name":"cpuid_bool","disambiguator":[6205407880030392451,6093553700822162471]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":101,"id":{"name":"tiny_keccak","disambiguator":[6907276523880939152,15806809385348513789]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":102,"id":{"name":"twox_hash","disambiguator":[4843776605774432337,16933932808593462508]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":103,"id":{"name":"cfg_if","disambiguator":[10021299859095236603,9970654228449935443]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","num":104,"id":{"name":"rand","disambiguator":[746826575780793851,4471793012143423394]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":105,"id":{"name":"rand_core","disambiguator":[3238620688790230140,13462498439867285351]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":106,"id":{"name":"getrandom","disambiguator":[16958247650847020380,5385242026854871367]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":107,"id":{"name":"rand_chacha","disambiguator":[441716931807972491,17272912142872802949]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":108,"id":{"name":"ppv_lite86","disambiguator":[5486910781073359264,15253540615556416119]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":109,"id":{"name":"rand_pcg","disambiguator":[3160627028304066158,11293307244701815743]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":110,"id":{"name":"base58","disambiguator":[3369462119818718244,8362136954819660540]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":111,"id":{"name":"zeroize","disambiguator":[10556093639355727955,15809428849932923722]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":112,"id":{"name":"zeroize_derive","disambiguator":[5655268509516224944,6725263168993598751]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":113,"id":{"name":"secrecy","disambiguator":[16459322919098341897,12171937217720544940]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":114,"id":{"name":"ed25519_dalek","disambiguator":[11398848187809677205,7856143361522293917]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":115,"id":{"name":"ed25519","disambiguator":[17719961624066905290,3692275665346932817]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":116,"id":{"name":"signature","disambiguator":[8760395504805049851,3413849478659787523]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":117,"id":{"name":"curve25519_dalek","disambiguator":[4071595552511680062,1824077030073052835]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":118,"id":{"name":"subtle","disambiguator":[17934521912222352306,18444245334094816619]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":119,"id":{"name":"substrate_bip39","disambiguator":[1792972643475504061,2284854317310986267]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":120,"id":{"name":"sha2","disambiguator":[6031437354618425809,1156418039787797982]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":121,"id":{"name":"block_buffer","disambiguator":[17013019169273939082,8694242993449314512]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":122,"id":{"name":"block_padding","disambiguator":[12027653930546257504,11934247384914869959]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":123,"id":{"name":"byte_tools","disambiguator":[11700157176403723246,15042745078268532608]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":124,"id":{"name":"generic_array","disambiguator":[8154424454435046820,8305875546402162267]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":125,"id":{"name":"fake_simd","disambiguator":[14036491710765223056,16121027988084704970]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":126,"id":{"name":"opaque_debug","disambiguator":[15355801993192592970,15368723170800198628]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":127,"id":{"name":"digest","disambiguator":[18028793442622875312,8404934643691058449]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":128,"id":{"name":"hmac","disambiguator":[2398036106222558641,12747122617455590906]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":129,"id":{"name":"crypto_mac","disambiguator":[13559926310032573477,17050896233749691016]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":130,"id":{"name":"subtle","disambiguator":[10946190608180335518,5756656367206348154]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":131,"id":{"name":"pbkdf2","disambiguator":[18045263582543352373,3198099767612698545]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":132,"id":{"name":"schnorrkel","disambiguator":[1001073668430333559,14191689993495040953]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":133,"id":{"name":"arrayref","disambiguator":[16818885780591367818,9624370045344091841]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":134,"id":{"name":"curve25519_dalek","disambiguator":[11182327997470844279,2917915551897756157]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":135,"id":{"name":"merlin","disambiguator":[10995490140485953775,3078541580170789468]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":136,"id":{"name":"keccak","disambiguator":[8402286363173856787,11033165844963027687]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":137,"id":{"name":"bip39","disambiguator":[14654181774436755031,16150481678645946358]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":138,"id":{"name":"thiserror","disambiguator":[11211909712945309034,1462899715189146714]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":139,"id":{"name":"thiserror_impl","disambiguator":[12140497728656256834,17536753507674282886]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":140,"id":{"name":"rustc_hash","disambiguator":[18120138039320172856,5174853055526042934]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":141,"id":{"name":"anyhow","disambiguator":[17455878141675706397,15024690126878403217]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":142,"id":{"name":"unicode_normalization","disambiguator":[7319256477008403990,850912555204041804]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":143,"id":{"name":"tinyvec","disambiguator":[13757798832981975562,16448938864586428141]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":144,"id":{"name":"tinyvec_macros","disambiguator":[6971095827479815106,2369805349969581398]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":145,"id":{"name":"hmac","disambiguator":[17433356495996038620,7849656493985933521]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":146,"id":{"name":"crypto_mac","disambiguator":[16952472478491170049,5748167897379155211]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":147,"id":{"name":"pbkdf2","disambiguator":[7649781412603123506,9859389210053091319]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":148,"id":{"name":"secp256k1","disambiguator":[16737428765420032088,13773206920855754217]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":149,"id":{"name":"hmac_drbg","disambiguator":[17404808929730230210,16695580170234810369]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":150,"id":{"name":"hash_db","disambiguator":[16222527159578958881,15417756680510520186]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","num":151,"id":{"name":"hash256_std_hasher","disambiguator":[14242029744627902613,3090809591287000861]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","num":152,"id":{"name":"parity_util_mem","disambiguator":[5692800706026385981,13988503766425499944]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":153,"id":{"name":"parity_util_mem_derive","disambiguator":[3916493160687366221,3998416894547474512]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":154,"id":{"name":"hashbrown","disambiguator":[15858687212683710517,10679103842408037307]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":155,"id":{"name":"ahash","disambiguator":[11000207869931019655,11365772628104082715]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":156,"id":{"name":"dyn_clonable","disambiguator":[1160672861310717368,179577393650705180]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":157,"id":{"name":"dyn_clone","disambiguator":[153351459397055590,2262572122976187853]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":158,"id":{"name":"dyn_clonable_impl","disambiguator":[8143725291046252364,3517763874786058099]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":159,"id":{"name":"futures","disambiguator":[3463592966268286824,7540824572693008632]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":160,"id":{"name":"futures_core","disambiguator":[1741251118759805826,11401665632333816338]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":161,"id":{"name":"futures_util","disambiguator":[3438948224063739788,15492469175479036624]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":162,"id":{"name":"pin_utils","disambiguator":[6148991665019902715,7706982228305245343]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":163,"id":{"name":"proc_macro_hack","disambiguator":[18107074244595300940,7254669559897049488]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":164,"id":{"name":"futures_task","disambiguator":[7625991371478830382,1732980289896795878]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":165,"id":{"name":"futures_sink","disambiguator":[8661685636113034652,10637809691106661968]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":166,"id":{"name":"futures_channel","disambiguator":[9340365945153326119,16413412677825364759]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":167,"id":{"name":"slab","disambiguator":[10964154642823013274,18136006732140345220]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":168,"id":{"name":"futures_io","disambiguator":[1719766009174806638,1918012058549137250]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":169,"id":{"name":"futures_macro","disambiguator":[83206124768939847,1707592736898867711]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":170,"id":{"name":"futures_executor","disambiguator":[7121268507423420993,8515073597681227929]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":171,"id":{"name":"num_cpus","disambiguator":[12520181572928967600,156566489628191520]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":172,"id":{"name":"sp_io","disambiguator":[1343155938050319935,3445903780346215844]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":173,"id":{"name":"sp_keystore","disambiguator":[4019588266445288396,3441142528766855232]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":174,"id":{"name":"async_trait","disambiguator":[14716418409663937871,16252118711427297795]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":175,"id":{"name":"derive_more","disambiguator":[6247326867867388500,13168463329696418615]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":176,"id":{"name":"sp_trie","disambiguator":[13118048614907196054,1322344655374896753]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":177,"id":{"name":"trie_db","disambiguator":[45886576227001508,916380512454680783]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":178,"id":{"name":"trie_root","disambiguator":[10825234960134104556,2662406007426998997]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":179,"id":{"name":"memory_db","disambiguator":[632864180048084116,11252723647111274025]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":180,"id":{"name":"sp_state_machine","disambiguator":[8742579675119555660,12103213563172048341]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":181,"id":{"name":"sp_panic_handler","disambiguator":[5416557423676215538,14720217030722033865]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":182,"id":{"name":"backtrace","disambiguator":[4616807196884616560,3593374161003727633]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":183,"id":{"name":"rustc_demangle","disambiguator":[9678936452046898147,13376131821060520602]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":184,"id":{"name":"addr2line","disambiguator":[13179013064549937275,4522599632718693230]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":185,"id":{"name":"gimli","disambiguator":[6269171323339485423,8607067438569868048]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":186,"id":{"name":"object","disambiguator":[6940909019048410244,13242167454319359684]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":187,"id":{"name":"miniz_oxide","disambiguator":[18262343450495648065,5536561149793384440]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","num":188,"id":{"name":"adler","disambiguator":[159802053453029657,12486606382973290645]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","num":189,"id":{"name":"sp_arithmetic","disambiguator":[6212385222009708574,6862010849189890576]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","num":190,"id":{"name":"integer_sqrt","disambiguator":[16829217331349863768,1347948894207436676]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","num":191,"id":{"name":"either","disambiguator":[3299987193669673221,15328579128940892041]}}],"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":686,"byte_end":24602,"line_start":18,"line_end":818,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":939,"byte_end":944,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"alias_span":null,"name":"codec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":993,"byte_end":998,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1023,"byte_end":1029,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"alias_span":null,"name":"sp_std","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1055,"byte_end":1060,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"alias_span":null,"name":"paste","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1086,"byte_end":1107,"line_start":39,"line_end":39,"column_start":9,"column_end":30},"alias_span":null,"name":"app_crypto","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":73,"index":325},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1175,"byte_end":1182,"line_start":42,"line_end":42,"column_start":28,"column_end":35},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":73,"index":311},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1184,"byte_end":1196,"line_start":42,"line_end":42,"column_start":37,"column_end":49},"alias_span":null,"name":"StorageChild","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1586},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":30823,"byte_end":30841,"line_start":31,"line_end":31,"column_start":37,"column_end":55},"alias_span":null,"name":"UncheckedExtrinsic","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":30843,"byte_end":30856,"line_start":31,"line_end":31,"column_start":57,"column_end":70},"alias_span":null,"name":"SignedPayload","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1623},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":30879,"byte_end":30882,"line_start":32,"line_end":32,"column_start":21,"column_end":24},"alias_span":null,"name":"Era","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":30884,"byte_end":30889,"line_start":32,"line_end":32,"column_start":26,"column_end":31},"alias_span":null,"name":"Phase","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1697},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":30925,"byte_end":30941,"line_start":33,"line_end":33,"column_start":34,"column_end":50},"alias_span":null,"name":"CheckedExtrinsic","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1732},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":30965,"byte_end":30971,"line_start":34,"line_end":34,"column_start":23,"column_end":29},"alias_span":null,"name":"Header","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1895},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":30995,"byte_end":31000,"line_start":35,"line_end":35,"column_start":23,"column_end":28},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":31002,"byte_end":31013,"line_start":35,"line_end":35,"column_start":30,"column_end":41},"alias_span":null,"name":"SignedBlock","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1863},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":31015,"byte_end":31022,"line_start":35,"line_end":35,"column_start":43,"column_end":50},"alias_span":null,"name":"BlockId","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2085},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":31050,"byte_end":31056,"line_start":37,"line_end":37,"column_start":2,"column_end":8},"alias_span":null,"name":"Digest","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2177},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":31058,"byte_end":31068,"line_start":37,"line_end":37,"column_start":10,"column_end":20},"alias_span":null,"name":"DigestItem","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2249},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":31070,"byte_end":31083,"line_start":37,"line_end":37,"column_start":22,"column_end":35},"alias_span":null,"name":"DigestItemRef","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2327},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":31085,"byte_end":31103,"line_start":37,"line_end":37,"column_start":37,"column_end":55},"alias_span":null,"name":"OpaqueDigestItemId","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2220},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":31105,"byte_end":31122,"line_start":37,"line_end":37,"column_start":57,"column_end":74},"alias_span":null,"name":"ChangesTrieSignal","value":"","parent":{"krate":0,"index":44}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/mod.rs","byte_start":80674,"byte_end":80675,"line_start":24,"line_end":24,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":451}},{"kind":"Use","ref_id":{"krate":79,"index":1897},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":120920,"byte_end":120924,"line_start":29,"line_end":29,"column_start":19,"column_end":23},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":658}},{"kind":"Use","ref_id":{"krate":79,"index":1898},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":120920,"byte_end":120924,"line_start":29,"line_end":29,"column_start":19,"column_end":23},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":692}},{"kind":"Use","ref_id":{"krate":27,"index":1004},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":120926,"byte_end":120933,"line_start":29,"line_end":29,"column_start":25,"column_end":32},"alias_span":null,"name":"sr25519","value":"","parent":{"krate":0,"index":658}},{"kind":"Use","ref_id":{"krate":189,"index":132},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131354,"byte_end":131366,"line_start":37,"line_end":37,"column_start":2,"column_end":14},"alias_span":null,"name":"AtLeast32Bit","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":189,"index":135},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131368,"byte_end":131388,"line_start":37,"line_end":37,"column_start":16,"column_end":36},"alias_span":null,"name":"AtLeast32BitUnsigned","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":189,"index":141},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131390,"byte_end":131409,"line_start":37,"line_end":37,"column_start":38,"column_end":57},"alias_span":null,"name":"UniqueSaturatedInto","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":189,"index":138},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131411,"byte_end":131430,"line_start":37,"line_end":37,"column_start":59,"column_end":78},"alias_span":null,"name":"UniqueSaturatedFrom","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":189,"index":154},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131432,"byte_end":131442,"line_start":37,"line_end":37,"column_start":80,"column_end":90},"alias_span":null,"name":"Saturating","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":189,"index":167},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131445,"byte_end":131464,"line_start":38,"line_end":38,"column_start":2,"column_end":21},"alias_span":null,"name":"SaturatedConversion","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":38,"index":301},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131466,"byte_end":131470,"line_start":38,"line_end":38,"column_start":23,"column_end":27},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":38,"index":311},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131472,"byte_end":131475,"line_start":38,"line_end":38,"column_start":29,"column_end":32},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":38,"index":92},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131477,"byte_end":131484,"line_start":38,"line_end":38,"column_start":34,"column_end":41},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":38,"index":366},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131486,"byte_end":131496,"line_start":38,"line_end":38,"column_start":43,"column_end":53},"alias_span":null,"name":"CheckedAdd","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":38,"index":369},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131498,"byte_end":131508,"line_start":38,"line_end":38,"column_start":55,"column_end":65},"alias_span":null,"name":"CheckedSub","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":38,"index":371},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131510,"byte_end":131520,"line_start":38,"line_end":38,"column_start":67,"column_end":77},"alias_span":null,"name":"CheckedMul","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":38,"index":373},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131522,"byte_end":131532,"line_start":38,"line_end":38,"column_start":79,"column_end":89},"alias_span":null,"name":"CheckedDiv","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":38,"index":380},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131535,"byte_end":131545,"line_start":39,"line_end":39,"column_start":2,"column_end":12},"alias_span":null,"name":"CheckedShl","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":38,"index":383},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131547,"byte_end":131557,"line_start":39,"line_end":39,"column_start":14,"column_end":24},"alias_span":null,"name":"CheckedShr","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":190,"index":4},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131559,"byte_end":131576,"line_start":39,"line_end":39,"column_start":26,"column_end":43},"alias_span":null,"name":"IntegerSquareRoot","value":"","parent":{"krate":0,"index":825}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1609,"byte_end":1610,"line_start":61,"line_end":61,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3609},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1661,"byte_end":1673,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"alias_span":null,"name":"MultiAddress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2177},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1752,"byte_end":1762,"line_start":67,"line_end":67,"column_start":19,"column_end":29},"alias_span":null,"name":"DigestItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2085},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1764,"byte_end":1770,"line_start":67,"line_end":67,"column_start":31,"column_end":37},"alias_span":null,"name":"Digest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":1837},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1853,"byte_end":1859,"line_start":70,"line_end":70,"column_start":19,"column_end":25},"alias_span":null,"name":"TypeId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":361},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1870,"byte_end":1879,"line_start":70,"line_end":70,"column_start":36,"column_end":45},"alias_span":null,"name":"key_types","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2242},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1881,"byte_end":1890,"line_start":70,"line_end":70,"column_start":47,"column_end":56},"alias_span":null,"name":"KeyTypeId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2243},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1881,"byte_end":1890,"line_start":70,"line_end":70,"column_start":47,"column_end":56},"alias_span":null,"name":"KeyTypeId","value":"","parent":{"krate":0,"index":1368}},{"kind":"Use","ref_id":{"krate":27,"index":349},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1892,"byte_end":1902,"line_start":70,"line_end":70,"column_start":58,"column_end":68},"alias_span":null,"name":"CryptoType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2328},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1904,"byte_end":1916,"line_start":70,"line_end":70,"column_start":70,"column_end":82},"alias_span":null,"name":"CryptoTypeId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2329},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1904,"byte_end":1916,"line_start":70,"line_end":70,"column_start":70,"column_end":82},"alias_span":null,"name":"CryptoTypeId","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":27,"index":2184},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1918,"byte_end":1929,"line_start":70,"line_end":70,"column_start":84,"column_end":95},"alias_span":null,"name":"AccountId32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":134},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1965,"byte_end":1981,"line_start":71,"line_end":71,"column_start":33,"column_end":49},"alias_span":null,"name":"RuntimeAppPublic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":145},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1983,"byte_end":2006,"line_start":71,"line_end":71,"column_start":51,"column_end":74},"alias_span":null,"name":"BoundToRuntimeAppPublic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":74,"index":43},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2086,"byte_end":2098,"line_start":74,"line_end":74,"column_start":18,"column_end":30},"alias_span":null,"name":"RuntimeDebug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":200},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2169,"byte_end":2177,"line_start":78,"line_end":78,"column_start":2,"column_end":10},"alias_span":null,"name":"PerThing","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":1026},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2179,"byte_end":2190,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"alias_span":null,"name":"Perquintill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":906},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2192,"byte_end":2199,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"alias_span":null,"name":"Perbill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":786},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2201,"byte_end":2208,"line_start":78,"line_end":78,"column_start":34,"column_end":41},"alias_span":null,"name":"Permill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":546},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2210,"byte_end":2217,"line_start":78,"line_end":78,"column_start":43,"column_end":50},"alias_span":null,"name":"Percent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":666},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2219,"byte_end":2225,"line_start":78,"line_end":78,"column_start":52,"column_end":58},"alias_span":null,"name":"PerU16","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":196},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2227,"byte_end":2234,"line_start":78,"line_end":78,"column_start":60,"column_end":67},"alias_span":null,"name":"InnerOf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":198},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2236,"byte_end":2243,"line_start":78,"line_end":78,"column_start":69,"column_end":76},"alias_span":null,"name":"UpperOf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":1449},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2246,"byte_end":2257,"line_start":79,"line_end":79,"column_start":2,"column_end":13},"alias_span":null,"name":"Rational128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":1156},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2259,"byte_end":2267,"line_start":79,"line_end":79,"column_start":15,"column_end":23},"alias_span":null,"name":"FixedI64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":1274},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2269,"byte_end":2278,"line_start":79,"line_end":79,"column_start":25,"column_end":34},"alias_span":null,"name":"FixedI128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":1392},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2280,"byte_end":2289,"line_start":79,"line_end":79,"column_start":36,"column_end":45},"alias_span":null,"name":"FixedU128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":292},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2291,"byte_end":2307,"line_start":79,"line_end":79,"column_start":47,"column_end":63},"alias_span":null,"name":"FixedPointNumber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":281},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2309,"byte_end":2326,"line_start":79,"line_end":79,"column_start":65,"column_end":82},"alias_span":null,"name":"FixedPointOperand","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":167},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2337,"byte_end":2356,"line_start":80,"line_end":80,"column_start":10,"column_end":29},"alias_span":null,"name":"SaturatedConversion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":80},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2415,"byte_end":2429,"line_start":83,"line_end":83,"column_start":24,"column_end":38},"alias_span":null,"name":"helpers_128bit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":189,"index":4},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2484,"byte_end":2491,"line_start":85,"line_end":85,"column_start":24,"column_end":31},"alias_span":null,"name":"biguint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3577},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2527,"byte_end":2548,"line_start":87,"line_end":87,"column_start":34,"column_end":55},"alias_span":null,"name":"RandomNumberGenerator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":191,"index":190},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2567,"byte_end":2573,"line_start":89,"line_end":89,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1762},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3383,"byte_end":3392,"line_start":111,"line_end":111,"column_start":17,"column_end":26},"alias_span":null,"name":"Serialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":930},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3383,"byte_end":3392,"line_start":111,"line_end":111,"column_start":17,"column_end":26},"alias_span":null,"name":"Serialize","value":"","parent":{"krate":0,"index":1404}},{"kind":"Use","ref_id":{"krate":22,"index":1274},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3394,"byte_end":3405,"line_start":111,"line_end":111,"column_start":28,"column_end":39},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":931},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3394,"byte_end":3405,"line_start":111,"line_end":111,"column_start":28,"column_end":39},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":1405}},{"kind":"Use","ref_id":{"krate":22,"index":1280},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3411,"byte_end":3427,"line_start":111,"line_end":111,"column_start":45,"column_end":61},"alias_span":null,"name":"DeserializeOwned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":686,"byte_end":24602,"line_start":18,"line_end":818,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":4156},{"krate":0,"index":22},{"krate":0,"index":4158},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":4160},{"krate":0,"index":25},{"krate":0,"index":4162},{"krate":0,"index":26},{"krate":0,"index":44},{"krate":0,"index":451},{"krate":0,"index":658},{"krate":0,"index":825},{"krate":0,"index":1240},{"krate":0,"index":1293},{"krate":0,"index":1309},{"krate":0,"index":1341},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":4614},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":4618},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":3679},{"krate":0,"index":3708},{"krate":0,"index":3707},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3699},{"krate":0,"index":3700},{"krate":0,"index":3689},{"krate":0,"index":3683},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":4670},{"krate":0,"index":1405},{"krate":0,"index":4672},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1415},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":3711},{"krate":0,"index":3785},{"krate":0,"index":3744},{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3737},{"krate":0,"index":3738},{"krate":0,"index":3735},{"krate":0,"index":3729},{"krate":0,"index":3723},{"krate":0,"index":3721},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":3791},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3870},{"krate":0,"index":3864},{"krate":0,"index":3862},{"krate":0,"index":3856},{"krate":0,"index":3850},{"krate":0,"index":3848},{"krate":0,"index":3842},{"krate":0,"index":3801},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1445},{"krate":0,"index":1447},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1469},{"krate":0,"index":3879},{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3926},{"krate":0,"index":3924},{"krate":0,"index":3914},{"krate":0,"index":3909},{"krate":0,"index":3907},{"krate":0,"index":3901},{"krate":0,"index":3882},{"krate":0,"index":1474},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":3935},{"krate":0,"index":4061},{"krate":0,"index":4062},{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":4055},{"krate":0,"index":4054},{"krate":0,"index":4048},{"krate":0,"index":4042},{"krate":0,"index":4040},{"krate":0,"index":4034},{"krate":0,"index":3951},{"krate":0,"index":4064},{"krate":0,"index":4096},{"krate":0,"index":4098},{"krate":0,"index":4090},{"krate":0,"index":4092},{"krate":0,"index":4087},{"krate":0,"index":4085},{"krate":0,"index":4077},{"krate":0,"index":4071},{"krate":0,"index":4068},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":1501},{"krate":0,"index":1503},{"krate":0,"index":1505},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1517},{"krate":0,"index":4101},{"krate":0,"index":4126},{"krate":0,"index":4127},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4121},{"krate":0,"index":4119},{"krate":0,"index":4109},{"krate":0,"index":4104},{"krate":0,"index":1529},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1539},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1565}],"decl_id":null,"docs":" Runtime Modules shared primitive types.\n","sig":null,"attributes":[{"value":"/ Runtime Modules shared primitive types.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":686,"byte_end":729,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"warn(missing_docs)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":731,"byte_end":753,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"curve","qualname":"::curve","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":1568},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1575},{"krate":0,"index":1577},{"krate":0,"index":1572},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":42}],"decl_id":null,"docs":" Provides some utilities to define a piecewise linear function.\n","sig":null,"attributes":[{"value":"/ Provides some utilities to define a piecewise linear function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","byte_start":25290,"byte_end":25356,"line_start":18,"line_end":18,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1568},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","byte_start":25564,"byte_end":25579,"line_start":25,"line_end":25,"column_start":12,"column_end":27},"name":"PiecewiseLinear","qualname":"::curve::PiecewiseLinear","value":"PiecewiseLinear { points, maximum }","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571}],"decl_id":null,"docs":" Piecewise Linear function in [0, 1] -> [0, 1].\n","sig":null,"attributes":[{"value":"/ Piecewise Linear function in [0, 1] -> [0, 1].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","byte_start":25454,"byte_end":25504,"line_start":23,"line_end":23,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1570},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","byte_start":25672,"byte_end":25678,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"name":"points","qualname":"::curve::PiecewiseLinear::points","value":"&'a [(sp_arithmetic::Perbill, sp_arithmetic::Perbill)]","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" Array of points. Must be in order from the lowest abscissas to the highest.\n","sig":null,"attributes":[{"value":"/ Array of points. Must be in order from the lowest abscissas to the highest.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","byte_start":25587,"byte_end":25666,"line_start":26,"line_end":26,"column_start":2,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1571},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","byte_start":25756,"byte_end":25763,"line_start":29,"line_end":29,"column_start":6,"column_end":13},"name":"maximum","qualname":"::curve::PiecewiseLinear::maximum","value":"sp_arithmetic::Perbill","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" The maximum value that can be returned.\n","sig":null,"attributes":[{"value":"/ The maximum value that can be returned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","byte_start":25707,"byte_end":25750,"line_start":28,"line_end":28,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","byte_start":26006,"byte_end":26046,"line_start":38,"line_end":38,"column_start":9,"column_end":49},"name":"calculate_for_fraction_times_denominator","qualname":"<PiecewiseLinear>::calculate_for_fraction_times_denominator","value":"pub fn calculate_for_fraction_times_denominator<N>(&Self, N, N) -> N where\nN: AtLeast32BitUnsigned + Clone","parent":null,"children":[],"decl_id":null,"docs":" Compute `f(n/d)*d` with `n <= d`. This is useful to avoid loss of precision.\n","sig":null,"attributes":[{"value":"/ Compute `f(n/d)*d` with `n <= d`. This is useful to avoid loss of precision.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","byte_start":25917,"byte_end":25997,"line_start":37,"line_end":37,"column_start":2,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"generic","qualname":"::generic","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":180},{"krate":0,"index":205},{"krate":0,"index":230},{"krate":0,"index":304},{"krate":0,"index":344},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":4366},{"krate":0,"index":446},{"krate":0,"index":447}],"decl_id":null,"docs":" Generic implementations of Extrinsic/Header/Block.\n","sig":null,"attributes":[{"value":"/ Generic implementations of Extrinsic/Header/Block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/mod.rs","byte_start":30592,"byte_end":30646,"line_start":19,"line_end":19,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1586},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33116,"byte_end":33134,"line_start":39,"line_end":39,"column_start":12,"column_end":30},"name":"UncheckedExtrinsic","qualname":"::generic::unchecked_extrinsic::UncheckedExtrinsic","value":"UncheckedExtrinsic { signature, function }","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592}],"decl_id":null,"docs":" A extrinsic right from the external world. This is unchecked and so\n can contain a signature.\n","sig":null,"attributes":[{"value":"/ A extrinsic right from the external world. This is unchecked and so","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":32972,"byte_end":33043,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/ can contain a signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33044,"byte_end":33072,"line_start":37,"line_end":37,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1591},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33391,"byte_end":33400,"line_start":46,"line_end":46,"column_start":6,"column_end":15},"name":"signature","qualname":"::generic::unchecked_extrinsic::UncheckedExtrinsic::signature","value":"std::option::Option<(Address, Signature, Extra)>","parent":{"krate":0,"index":1586},"children":[],"decl_id":null,"docs":" The signature, address, number of extrinsics have come before from\n the same signer and an era describing the longevity of this transaction,\n if this is a signed extrinsic.\n","sig":null,"attributes":[{"value":"/ The signature, address, number of extrinsics have come before from","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33201,"byte_end":33271,"line_start":43,"line_end":43,"column_start":2,"column_end":72}},{"value":"/ the same signer and an era describing the longevity of this transaction,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33273,"byte_end":33349,"line_start":44,"line_end":44,"column_start":2,"column_end":78}},{"value":"/ if this is a signed extrinsic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33351,"byte_end":33385,"line_start":45,"line_end":45,"column_start":2,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1592},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33485,"byte_end":33493,"line_start":48,"line_end":48,"column_start":6,"column_end":14},"name":"function","qualname":"::generic::unchecked_extrinsic::UncheckedExtrinsic::function","value":"Call","parent":{"krate":0,"index":1586},"children":[],"decl_id":null,"docs":" The function that should be called.\n","sig":null,"attributes":[{"value":"/ The function that should be called.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33440,"byte_end":33479,"line_start":47,"line_end":47,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33982,"byte_end":33992,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"name":"new_signed","qualname":"<UncheckedExtrinsic<Address, Call, Signature, Extra>>::new_signed","value":"pub fn new_signed(Call, Address, Signature, Extra) -> Self","parent":null,"children":[],"decl_id":null,"docs":" New instance of a signed extrinsic aka \"transaction\".\n","sig":null,"attributes":[{"value":"/ New instance of a signed extrinsic aka \"transaction\".","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33916,"byte_end":33973,"line_start":66,"line_end":66,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":34242,"byte_end":34254,"line_start":80,"line_end":80,"column_start":9,"column_end":21},"name":"new_unsigned","qualname":"<UncheckedExtrinsic<Address, Call, Signature, Extra>>::new_unsigned","value":"pub fn new_unsigned(Call) -> Self","parent":null,"children":[],"decl_id":null,"docs":" New instance of an unsigned extrinsic aka \"inherent\".\n","sig":null,"attributes":[{"value":"/ New instance of an unsigned extrinsic aka \"inherent\".","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":34176,"byte_end":34233,"line_start":79,"line_end":79,"column_start":2,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36567,"byte_end":36580,"line_start":164,"line_end":164,"column_start":12,"column_end":25},"name":"SignedPayload","qualname":"::generic::unchecked_extrinsic::SignedPayload","value":"","parent":null,"children":[],"decl_id":null,"docs":" A payload that has been signed for an unchecked extrinsics.","sig":null,"attributes":[{"value":"/ A payload that has been signed for an unchecked extrinsics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36299,"byte_end":36362,"line_start":159,"line_end":159,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36363,"byte_end":36366,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Note that the payload that we sign to produce unchecked extrinsic signature","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36367,"byte_end":36446,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ is going to be different than the `SignaturePayload` - so the thing the extrinsic","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36447,"byte_end":36532,"line_start":162,"line_end":162,"column_start":1,"column_end":86}},{"value":"/ actually contains.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36533,"byte_end":36555,"line_start":163,"line_end":163,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36878,"byte_end":36881,"line_start":177,"line_end":177,"column_start":9,"column_end":12},"name":"new","qualname":"<SignedPayload<Call, Extra>>::new","value":"pub fn new(Call, Extra) -> Result<Self, TransactionValidityError>","parent":null,"children":[],"decl_id":null,"docs":" Create new `SignedPayload`.","sig":null,"attributes":[{"value":"/ Create new `SignedPayload`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36753,"byte_end":36784,"line_start":174,"line_end":174,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36786,"byte_end":36789,"line_start":175,"line_end":175,"column_start":2,"column_end":5}},{"value":"/ This function may fail if `additional_signed` of `Extra` is not available.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36791,"byte_end":36869,"line_start":176,"line_end":176,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":37149,"byte_end":37157,"line_start":184,"line_end":184,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<SignedPayload<Call, Extra>>::from_raw","value":"pub fn from_raw(Call, Extra, Extra::AdditionalSigned) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `SignedPayload` from raw components.\n","sig":null,"attributes":[{"value":"/ Create new `SignedPayload` from raw components.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":37089,"byte_end":37140,"line_start":183,"line_end":183,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":37342,"byte_end":37353,"line_start":189,"line_end":189,"column_start":9,"column_end":20},"name":"deconstruct","qualname":"<SignedPayload<Call, Extra>>::deconstruct","value":"pub fn deconstruct(Self) -> (Call, Extra, Extra::AdditionalSigned)","parent":null,"children":[],"decl_id":null,"docs":" Deconstruct the payload into it's components.\n","sig":null,"attributes":[{"value":"/ Deconstruct the payload into it's components.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":37284,"byte_end":37333,"line_start":188,"line_end":188,"column_start":2,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":191},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":45405,"byte_end":45410,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"name":"Phase","qualname":"::generic::era::Phase","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Era phase\n","sig":null,"attributes":[{"value":"/ Era phase","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":45382,"byte_end":45395,"line_start":28,"line_end":28,"column_start":1,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1624},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":45707,"byte_end":45715,"line_start":36,"line_end":36,"column_start":2,"column_end":10},"name":"Immortal","qualname":"::generic::era::Era::Immortal","value":"Era::Immortal","parent":{"krate":0,"index":1623},"children":[],"decl_id":null,"docs":" The transaction is valid forever. The genesis hash must be present in the signed content.\n","sig":null,"attributes":[{"value":"/ The transaction is valid forever. The genesis hash must be present in the signed content.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":45612,"byte_end":45705,"line_start":35,"line_end":35,"column_start":2,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1626},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46243,"byte_end":46249,"line_start":47,"line_end":47,"column_start":2,"column_end":8},"name":"Mortal","qualname":"::generic::era::Era::Mortal","value":"Era::Mortal(Period, Phase)","parent":{"krate":0,"index":1623},"children":[],"decl_id":null,"docs":" Period and phase are encoded:\n - The period of validity from the block hash found in the signing material.\n - The phase in the period that this transaction's lifetime begins (and, importantly,\n implies which block hash is included in the signature material). If the `period` is\n greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that\n `period` is.","sig":null,"attributes":[{"value":"/ Period and phase are encoded:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":45719,"byte_end":45752,"line_start":38,"line_end":38,"column_start":2,"column_end":35}},{"value":"/ - The period of validity from the block hash found in the signing material.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":45754,"byte_end":45833,"line_start":39,"line_end":39,"column_start":2,"column_end":81}},{"value":"/ - The phase in the period that this transaction's lifetime begins (and, importantly,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":45835,"byte_end":45923,"line_start":40,"line_end":40,"column_start":2,"column_end":90}},{"value":"/ implies which block hash is included in the signature material). If the `period` is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":45925,"byte_end":46012,"line_start":41,"line_end":41,"column_start":2,"column_end":89}},{"value":"/ greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46014,"byte_end":46101,"line_start":42,"line_end":42,"column_start":2,"column_end":89}},{"value":"/ `period` is.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46103,"byte_end":46119,"line_start":43,"line_end":43,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46121,"byte_end":46124,"line_start":44,"line_end":44,"column_start":2,"column_end":5}},{"value":"/ When used on `FRAME`-based runtimes, `period` cannot exceed `BlockHashCount` parameter","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46126,"byte_end":46216,"line_start":45,"line_end":45,"column_start":2,"column_end":92}},{"value":"/ of `system` module.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46218,"byte_end":46241,"line_start":46,"line_end":46,"column_start":2,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":1623},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":45605,"byte_end":45608,"line_start":34,"line_end":34,"column_start":10,"column_end":13},"name":"Era","qualname":"::generic::era::Era","value":"pub enum Era {\n\n    /// The transaction is valid forever. The genesis hash must be present in the signed content.\n    Immortal,\n\n    /// Period and phase are encoded:\n    /// - The period of validity from the block hash found in the signing material.\n    /// - The phase in the period that this transaction's lifetime begins (and, importantly,\n    /// implies which block hash is included in the signature material). If the `period` is\n    /// greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that\n    /// `period` is.\n    ///\n    /// When used on `FRAME`-based runtimes, `period` cannot exceed `BlockHashCount` parameter\n    /// of `system` module.\n    Mortal(Period, Phase),\n}","parent":null,"children":[{"krate":0,"index":1624},{"krate":0,"index":1626}],"decl_id":null,"docs":" An era to describe the longevity of a transaction.\n","sig":null,"attributes":[{"value":"/ An era to describe the longevity of a transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":45419,"byte_end":45473,"line_start":31,"line_end":31,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46964,"byte_end":46970,"line_start":66,"line_end":66,"column_start":9,"column_end":15},"name":"mortal","qualname":"<Era>::mortal","value":"pub fn mortal(u64, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new era based on a period (which should be a power of two between 4 and 65536 inclusive)\n and a block number on which it should start (or, for long periods, be shortly after the start).","sig":null,"attributes":[{"value":"/ Create a new era based on a period (which should be a power of two between 4 and 65536 inclusive)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46514,"byte_end":46615,"line_start":60,"line_end":60,"column_start":2,"column_end":103}},{"value":"/ and a block number on which it should start (or, for long periods, be shortly after the start).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46617,"byte_end":46716,"line_start":61,"line_end":61,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46718,"byte_end":46721,"line_start":62,"line_end":62,"column_start":2,"column_end":5}},{"value":"/ If using `Era` in the context of `FRAME` runtime, make sure that `period`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46723,"byte_end":46800,"line_start":63,"line_end":63,"column_start":2,"column_end":79}},{"value":"/ does not exceed `BlockHashCount` parameter passed to `system` module, since that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46802,"byte_end":46886,"line_start":64,"line_end":64,"column_start":2,"column_end":86}},{"value":"/ prunes old blocks and renders transactions immediately invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46888,"byte_end":46955,"line_start":65,"line_end":65,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":47347,"byte_end":47355,"line_start":79,"line_end":79,"column_start":9,"column_end":17},"name":"immortal","qualname":"<Era>::immortal","value":"pub fn immortal() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an \"immortal\" transaction.\n","sig":null,"attributes":[{"value":"/ Create an \"immortal\" transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":47301,"byte_end":47338,"line_start":78,"line_end":78,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":47444,"byte_end":47455,"line_start":84,"line_end":84,"column_start":9,"column_end":20},"name":"is_immortal","qualname":"<Era>::is_immortal","value":"pub fn is_immortal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" `true` if this is an immortal transaction.\n","sig":null,"attributes":[{"value":"/ `true` if this is an immortal transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":47389,"byte_end":47435,"line_start":83,"line_end":83,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":47666,"byte_end":47671,"line_start":93,"line_end":93,"column_start":9,"column_end":14},"name":"birth","qualname":"<Era>::birth","value":"pub fn birth(Self, u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the block number of the start of the era whose properties this object\n describes that `current` belongs to.\n","sig":null,"attributes":[{"value":"/ Get the block number of the start of the era whose properties this object","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":47538,"byte_end":47615,"line_start":91,"line_end":91,"column_start":2,"column_end":79}},{"value":"/ describes that `current` belongs to.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":47617,"byte_end":47657,"line_start":92,"line_end":92,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":47917,"byte_end":47922,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"name":"death","qualname":"<Era>::death","value":"pub fn death(Self, u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the block number of the first block at which the era has ended.\n","sig":null,"attributes":[{"value":"/ Get the block number of the first block at which the era has ended.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":47837,"byte_end":47908,"line_start":100,"line_end":100,"column_start":2,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1697},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/checked_extrinsic.rs","byte_start":52176,"byte_end":52192,"line_start":31,"line_end":31,"column_start":12,"column_end":28},"name":"CheckedExtrinsic","qualname":"::generic::checked_extrinsic::CheckedExtrinsic","value":"CheckedExtrinsic { signed, function }","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702}],"decl_id":null,"docs":" Definition of something that the external world might want to say; its\n existence implies that it has been checked and is good, particularly with\n regards to the signature.\n","sig":null,"attributes":[{"value":"/ Definition of something that the external world might want to say; its","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/checked_extrinsic.rs","byte_start":51927,"byte_end":52001,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ existence implies that it has been checked and is good, particularly with","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/checked_extrinsic.rs","byte_start":52002,"byte_end":52079,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ regards to the signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/checked_extrinsic.rs","byte_start":52080,"byte_end":52109,"line_start":29,"line_end":29,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1701},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/checked_extrinsic.rs","byte_start":52373,"byte_end":52379,"line_start":34,"line_end":34,"column_start":6,"column_end":12},"name":"signed","qualname":"::generic::checked_extrinsic::CheckedExtrinsic::signed","value":"std::option::Option<(AccountId, Extra)>","parent":{"krate":0,"index":1697},"children":[],"decl_id":null,"docs":" Who this purports to be from and the number of extrinsics have come before\n from the same signer, if anyone (note this is not a signature).\n","sig":null,"attributes":[{"value":"/ Who this purports to be from and the number of extrinsics have come before","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/checked_extrinsic.rs","byte_start":52220,"byte_end":52298,"line_start":32,"line_end":32,"column_start":2,"column_end":80}},{"value":"/ from the same signer, if anyone (note this is not a signature).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/checked_extrinsic.rs","byte_start":52300,"byte_end":52367,"line_start":33,"line_end":33,"column_start":2,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1702},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/checked_extrinsic.rs","byte_start":52456,"byte_end":52464,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"name":"function","qualname":"::generic::checked_extrinsic::CheckedExtrinsic::function","value":"Call","parent":{"krate":0,"index":1697},"children":[],"decl_id":null,"docs":" The function that should be called.\n","sig":null,"attributes":[{"value":"/ The function that should be called.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/checked_extrinsic.rs","byte_start":52411,"byte_end":52450,"line_start":36,"line_end":36,"column_start":2,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1732},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55589,"byte_end":55595,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"Header","qualname":"::generic::header::Header","value":"Header { parent_hash, number, state_root, extrinsics_root, digest }","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1739},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738}],"decl_id":null,"docs":" Abstraction over a block header for a substrate chain.\n","sig":null,"attributes":[{"value":"/ Abstraction over a block header for a substrate chain.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55284,"byte_end":55342,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55487,"byte_end":55518,"line_start":38,"line_end":38,"column_start":29,"column_end":60}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55549,"byte_end":55575,"line_start":39,"line_end":39,"column_start":29,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1735},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55681,"byte_end":55692,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"name":"parent_hash","qualname":"::generic::header::Header::parent_hash","value":"<Hash as traits::Hash>::Output","parent":{"krate":0,"index":1732},"children":[],"decl_id":null,"docs":" The parent hash.\n","sig":null,"attributes":[{"value":"/ The parent hash.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55655,"byte_end":55675,"line_start":41,"line_end":41,"column_start":2,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1739},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55856,"byte_end":55862,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"name":"number","qualname":"::generic::header::Header::number","value":"Number","parent":{"krate":0,"index":1732},"children":[],"decl_id":null,"docs":" The block number.\n","sig":null,"attributes":[{"value":"/ The block number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55709,"byte_end":55730,"line_start":43,"line_end":43,"column_start":2,"column_end":23}},{"value":"serde(serialize_with = \"serialize_number\", deserialize_with =\n        \"deserialize_number\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55760,"byte_end":55848,"line_start":44,"line_end":46,"column_start":30,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1736},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55909,"byte_end":55919,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"name":"state_root","qualname":"::generic::header::Header::state_root","value":"<Hash as traits::Hash>::Output","parent":{"krate":0,"index":1732},"children":[],"decl_id":null,"docs":" The state trie merkle root\n","sig":null,"attributes":[{"value":"/ The state trie merkle root","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55873,"byte_end":55903,"line_start":48,"line_end":48,"column_start":2,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1737},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55980,"byte_end":55995,"line_start":51,"line_end":51,"column_start":6,"column_end":21},"name":"extrinsics_root","qualname":"::generic::header::Header::extrinsics_root","value":"<Hash as traits::Hash>::Output","parent":{"krate":0,"index":1732},"children":[],"decl_id":null,"docs":" The merkle root of the extrinsics.\n","sig":null,"attributes":[{"value":"/ The merkle root of the extrinsics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":55936,"byte_end":55974,"line_start":50,"line_end":50,"column_start":2,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1738},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":56109,"byte_end":56115,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"name":"digest","qualname":"::generic::header::Header::digest","value":"generic::digest::Digest<<Hash as traits::Hash>::Output>","parent":{"krate":0,"index":1732},"children":[],"decl_id":null,"docs":" A chain-specific digest of data useful for light clients or referencing auxiliary data.\n","sig":null,"attributes":[{"value":"/ A chain-specific digest of data useful for light clients or referencing auxiliary data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":56012,"byte_end":56103,"line_start":52,"line_end":52,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":60209,"byte_end":60213,"line_start":181,"line_end":181,"column_start":9,"column_end":13},"name":"hash","qualname":"<Header<Number, Hash>>::hash","value":"pub fn hash(&Self) -> Hash::Output","parent":null,"children":[],"decl_id":null,"docs":" Convenience helper for computing the hash of the header without having\n to import the trait.\n","sig":null,"attributes":[{"value":"/ Convenience helper for computing the hash of the header without having","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":60100,"byte_end":60174,"line_start":179,"line_end":179,"column_start":2,"column_end":76}},{"value":"/ to import the trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":60176,"byte_end":60200,"line_start":180,"line_end":180,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1865},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62761,"byte_end":62765,"line_start":42,"line_end":42,"column_start":2,"column_end":6},"name":"Hash","qualname":"::generic::block::BlockId::Hash","value":"BlockId::Hash(Block::Hash)","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Identify by block header hash.\n","sig":null,"attributes":[{"value":"/ Identify by block header hash.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62725,"byte_end":62759,"line_start":41,"line_end":41,"column_start":2,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1868},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62812,"byte_end":62818,"line_start":44,"line_end":44,"column_start":2,"column_end":8},"name":"Number","qualname":"::generic::block::BlockId::Number","value":"BlockId::Number(NumberFor<Block>)","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Identify by block number.\n","sig":null,"attributes":[{"value":"/ Identify by block number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62781,"byte_end":62810,"line_start":43,"line_end":43,"column_start":2,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1863},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62699,"byte_end":62706,"line_start":40,"line_end":40,"column_start":10,"column_end":17},"name":"BlockId","qualname":"::generic::block::BlockId","value":"pub enum BlockId<Block: BlockT> {\n\n    /// Identify by block header hash.\n    Hash(Block::Hash),\n\n    /// Identify by block number.\n    Number(NumberFor<Block>),\n}","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1868}],"decl_id":null,"docs":" Something to identify a block.\n","sig":null,"attributes":[{"value":"/ Something to identify a block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62442,"byte_end":62476,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62599,"byte_end":62630,"line_start":38,"line_end":38,"column_start":29,"column_end":60}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62661,"byte_end":62687,"line_start":39,"line_end":39,"column_start":29,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62922,"byte_end":62926,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"hash","qualname":"<BlockId<Block>>::hash","value":"pub fn hash(Block::Hash) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a block ID from a hash.\n","sig":null,"attributes":[{"value":"/ Create a block ID from a hash.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62879,"byte_end":62913,"line_start":48,"line_end":48,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63028,"byte_end":63034,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"number","qualname":"<BlockId<Block>>::number","value":"pub fn number(NumberFor<Block>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a block ID from a number.\n","sig":null,"attributes":[{"value":"/ Create a block ID from a number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62983,"byte_end":63019,"line_start":53,"line_end":53,"column_start":2,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1895},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63641,"byte_end":63646,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"Block","qualname":"::generic::block::Block","value":"Block { header, extrinsics }","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899}],"decl_id":null,"docs":" Abstraction over a substrate block.\n","sig":null,"attributes":[{"value":"/ Abstraction over a substrate block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63317,"byte_end":63356,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63539,"byte_end":63570,"line_start":71,"line_end":71,"column_start":29,"column_end":60}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63601,"byte_end":63627,"line_start":72,"line_end":72,"column_start":29,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1898},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63712,"byte_end":63718,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"name":"header","qualname":"::generic::block::Block::header","value":"Header","parent":{"krate":0,"index":1895},"children":[],"decl_id":null,"docs":" The block header.\n","sig":null,"attributes":[{"value":"/ The block header.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63685,"byte_end":63706,"line_start":74,"line_end":74,"column_start":2,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1899},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63767,"byte_end":63777,"line_start":77,"line_end":77,"column_start":6,"column_end":16},"name":"extrinsics","qualname":"::generic::block::Block::extrinsics","value":"sp_application_crypto::Vec<Extrinsic>","parent":{"krate":0,"index":1895},"children":[],"decl_id":null,"docs":" The accompanying extrinsics.\n","sig":null,"attributes":[{"value":"/ The accompanying extrinsics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63729,"byte_end":63761,"line_start":76,"line_end":76,"column_start":2,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1999},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":64849,"byte_end":64860,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"SignedBlock","qualname":"::generic::block::SignedBlock","value":"SignedBlock { block, justification }","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2002}],"decl_id":null,"docs":" Abstraction over a substrate block and justification.\n","sig":null,"attributes":[{"value":"/ Abstraction over a substrate block and justification.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":64538,"byte_end":64595,"line_start":106,"line_end":106,"column_start":1,"column_end":58}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":64747,"byte_end":64778,"line_start":109,"line_end":109,"column_start":29,"column_end":60}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":64809,"byte_end":64835,"line_start":110,"line_end":110,"column_start":29,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2001},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":64892,"byte_end":64897,"line_start":113,"line_end":113,"column_start":6,"column_end":11},"name":"block","qualname":"::generic::block::SignedBlock::block","value":"Block","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" Full block.\n","sig":null,"attributes":[{"value":"/ Full block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":64871,"byte_end":64886,"line_start":112,"line_end":112,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":2002},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":64937,"byte_end":64950,"line_start":115,"line_end":115,"column_start":6,"column_end":19},"name":"justification","qualname":"::generic::block::SignedBlock::justification","value":"std::option::Option<sp_application_crypto::Vec<u8>>","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" Block justification.\n","sig":null,"attributes":[{"value":"/ Block justification.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":64907,"byte_end":64931,"line_start":114,"line_end":114,"column_start":2,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2085},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66120,"byte_end":66126,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Digest","qualname":"::generic::digest::Digest","value":"Digest { logs }","parent":null,"children":[{"krate":0,"index":2087}],"decl_id":null,"docs":" Generic header digest.\n","sig":null,"attributes":[{"value":"/ Generic header digest.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":65928,"byte_end":65954,"line_start":29,"line_end":29,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2087},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66296,"byte_end":66300,"line_start":38,"line_end":38,"column_start":6,"column_end":10},"name":"logs","qualname":"::generic::digest::Digest::logs","value":"sp_application_crypto::Vec<generic::digest::DigestItem<Hash>>","parent":{"krate":0,"index":2085},"children":[],"decl_id":null,"docs":" A list of logs in the digest.\n","sig":null,"attributes":[{"value":"/ A list of logs in the digest.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66136,"byte_end":66169,"line_start":33,"line_end":33,"column_start":2,"column_end":35}},{"value":"serde(bound(serialize = \"Hash: codec::Codec\", deserialize =\n              \"Hash: codec::Codec\"))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66204,"byte_end":66286,"line_start":36,"line_end":36,"column_start":3,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66501,"byte_end":66505,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"logs","qualname":"<Digest<Hash>>::logs","value":"pub fn logs(&Self) -> &[DigestItem<Hash>]","parent":null,"children":[],"decl_id":null,"docs":" Get reference to all digest items.\n","sig":null,"attributes":[{"value":"/ Get reference to all digest items.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66454,"byte_end":66492,"line_start":48,"line_end":48,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66590,"byte_end":66594,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"name":"push","qualname":"<Digest<Hash>>::push","value":"pub fn push(&mut Self, DigestItem<Hash>)","parent":null,"children":[],"decl_id":null,"docs":" Push new digest item.\n","sig":null,"attributes":[{"value":"/ Push new digest item.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66556,"byte_end":66581,"line_start":53,"line_end":53,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66692,"byte_end":66695,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"name":"pop","qualname":"<Digest<Hash>>::pop","value":"pub fn pop(&mut Self) -> Option<DigestItem<Hash>>","parent":null,"children":[],"decl_id":null,"docs":" Pop a digest item.\n","sig":null,"attributes":[{"value":"/ Pop a digest item.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66661,"byte_end":66683,"line_start":58,"line_end":58,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66846,"byte_end":66849,"line_start":64,"line_end":64,"column_start":9,"column_end":12},"name":"log","qualname":"<Digest<Hash>>::log","value":"pub fn log<T: ?Sized, F: Fn(&DigestItem<Hash>) -> Option<&T>>(&Self, F)\n-> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get reference to the first digest item that matches the passed predicate.\n","sig":null,"attributes":[{"value":"/ Get reference to the first digest item that matches the passed predicate.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66760,"byte_end":66837,"line_start":63,"line_end":63,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67102,"byte_end":67115,"line_start":71,"line_end":71,"column_start":9,"column_end":22},"name":"convert_first","qualname":"<Digest<Hash>>::convert_first","value":"pub fn convert_first<T, F: Fn(&DigestItem<Hash>) -> Option<T>>(&Self, F)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Get a conversion of the first digest item that successfully converts using the function.\n","sig":null,"attributes":[{"value":"/ Get a conversion of the first digest item that successfully converts using the function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67001,"byte_end":67093,"line_start":70,"line_end":70,"column_start":2,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2179},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67679,"byte_end":67694,"line_start":87,"line_end":87,"column_start":2,"column_end":17},"name":"ChangesTrieRoot","qualname":"::generic::digest::DigestItem::ChangesTrieRoot","value":"DigestItem::ChangesTrieRoot(Hash)","parent":{"krate":0,"index":2177},"children":[],"decl_id":null,"docs":" System digest item that contains the root of changes trie at given\n block. It is created for every block iff runtime supports changes\n trie creation.\n","sig":null,"attributes":[{"value":"/ System digest item that contains the root of changes trie at given","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67516,"byte_end":67586,"line_start":84,"line_end":84,"column_start":2,"column_end":72}},{"value":"/ block. It is created for every block iff runtime supports changes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67588,"byte_end":67657,"line_start":85,"line_end":85,"column_start":2,"column_end":71}},{"value":"/ trie creation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67659,"byte_end":67677,"line_start":86,"line_end":86,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2182},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68350,"byte_end":68360,"line_start":101,"line_end":101,"column_start":2,"column_end":12},"name":"PreRuntime","qualname":"::generic::digest::DigestItem::PreRuntime","value":"DigestItem::PreRuntime(ConsensusEngineId, Vec<u8>)","parent":{"krate":0,"index":2177},"children":[],"decl_id":null,"docs":" A pre-runtime digest.","sig":null,"attributes":[{"value":"/ A pre-runtime digest.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67704,"byte_end":67729,"line_start":89,"line_end":89,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67731,"byte_end":67734,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ These are messages from the consensus engine to the runtime, although","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67736,"byte_end":67809,"line_start":91,"line_end":91,"column_start":2,"column_end":75}},{"value":"/ the consensus engine can (and should) read them itself to avoid","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67811,"byte_end":67878,"line_start":92,"line_end":92,"column_start":2,"column_end":69}},{"value":"/ code and state duplication. It is erroneous for a runtime to produce","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67880,"byte_end":67952,"line_start":93,"line_end":93,"column_start":2,"column_end":74}},{"value":"/ these, but this is not (yet) checked.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67954,"byte_end":67995,"line_start":94,"line_end":94,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67997,"byte_end":68000,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ NOTE: the runtime is not allowed to panic or fail in an `on_initialize`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68002,"byte_end":68077,"line_start":96,"line_end":96,"column_start":2,"column_end":77}},{"value":"/ call if an expected `PreRuntime` digest is not present. It is the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68079,"byte_end":68148,"line_start":97,"line_end":97,"column_start":2,"column_end":71}},{"value":"/ responsibility of a external block verifier to check this. Runtime API calls","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68150,"byte_end":68230,"line_start":98,"line_end":98,"column_start":2,"column_end":82}},{"value":"/ will initialize the block without pre-runtime digests, so initialization","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68232,"byte_end":68308,"line_start":99,"line_end":99,"column_start":2,"column_end":78}},{"value":"/ cannot fail when they are missing.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68310,"byte_end":68348,"line_start":100,"line_end":100,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2186},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68567,"byte_end":68576,"line_start":106,"line_end":106,"column_start":2,"column_end":11},"name":"Consensus","qualname":"::generic::digest::DigestItem::Consensus","value":"DigestItem::Consensus(ConsensusEngineId, Vec<u8>)","parent":{"krate":0,"index":2177},"children":[],"decl_id":null,"docs":" A message from the runtime to the consensus engine. This should *never*\n be generated by the native code of any consensus engine, but this is not\n checked (yet).\n","sig":null,"attributes":[{"value":"/ A message from the runtime to the consensus engine. This should *never*","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68392,"byte_end":68467,"line_start":103,"line_end":103,"column_start":2,"column_end":77}},{"value":"/ be generated by the native code of any consensus engine, but this is not","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68469,"byte_end":68545,"line_start":104,"line_end":104,"column_start":2,"column_end":78}},{"value":"/ checked (yet).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68547,"byte_end":68565,"line_start":105,"line_end":105,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2190},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68701,"byte_end":68705,"line_start":110,"line_end":110,"column_start":2,"column_end":6},"name":"Seal","qualname":"::generic::digest::DigestItem::Seal","value":"DigestItem::Seal(ConsensusEngineId, Vec<u8>)","parent":{"krate":0,"index":2177},"children":[],"decl_id":null,"docs":" Put a Seal on it. This is only used by native code, and is never seen\n by runtimes.\n","sig":null,"attributes":[{"value":"/ Put a Seal on it. This is only used by native code, and is never seen","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68608,"byte_end":68681,"line_start":108,"line_end":108,"column_start":2,"column_end":75}},{"value":"/ by runtimes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68683,"byte_end":68699,"line_start":109,"line_end":109,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2194},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68827,"byte_end":68844,"line_start":114,"line_end":114,"column_start":2,"column_end":19},"name":"ChangesTrieSignal","qualname":"::generic::digest::DigestItem::ChangesTrieSignal","value":"DigestItem::ChangesTrieSignal(ChangesTrieSignal)","parent":{"krate":0,"index":2177},"children":[],"decl_id":null,"docs":" Digest item that contains signal from changes tries manager to the\n native code.\n","sig":null,"attributes":[{"value":"/ Digest item that contains signal from changes tries manager to the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68737,"byte_end":68807,"line_start":112,"line_end":112,"column_start":2,"column_end":72}},{"value":"/ native code.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68809,"byte_end":68825,"line_start":113,"line_end":113,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2197},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68920,"byte_end":68925,"line_start":117,"line_end":117,"column_start":2,"column_end":7},"name":"Other","qualname":"::generic::digest::DigestItem::Other","value":"DigestItem::Other(Vec<u8>)","parent":{"krate":0,"index":2177},"children":[],"decl_id":null,"docs":" Some other thing. Unsupported and experimental.\n","sig":null,"attributes":[{"value":"/ Some other thing. Unsupported and experimental.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68867,"byte_end":68918,"line_start":116,"line_end":116,"column_start":2,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":2177},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67496,"byte_end":67506,"line_start":83,"line_end":83,"column_start":10,"column_end":20},"name":"DigestItem","qualname":"::generic::digest::DigestItem","value":"pub enum DigestItem<Hash> {\n\n    /// System digest item that contains the root of changes trie at given\n    /// block. It is created for every block iff runtime supports changes\n    /// trie creation.\n    ChangesTrieRoot(Hash),\n\n    /// A pre-runtime digest.\n    ///\n    /// These are messages from the consensus engine to the runtime, although\n    /// the consensus engine can (and should) read them itself to avoid\n    /// code and state duplication. It is erroneous for a runtime to produce\n    /// these, but this is not (yet) checked.\n    ///\n    /// NOTE: the runtime is not allowed to panic or fail in an `on_initialize`\n    /// call if an expected `PreRuntime` digest is not present. It is the\n    /// responsibility of a external block verifier to check this. Runtime API calls\n    /// will initialize the block without pre-runtime digests, so initialization\n    /// cannot fail when they are missing.\n    PreRuntime(ConsensusEngineId, Vec<u8>),\n\n    /// A message from the runtime to the consensus engine. This should *never*\n    /// be generated by the native code of any consensus engine, but this is not\n    /// checked (yet).\n    Consensus(ConsensusEngineId, Vec<u8>),\n\n    /// Put a Seal on it. This is only used by native code, and is never seen\n    /// by runtimes.\n    Seal(ConsensusEngineId, Vec<u8>),\n\n    /// Digest item that contains signal from changes tries manager to the\n    /// native code.\n    ChangesTrieSignal(ChangesTrieSignal),\n\n    /// Some other thing. Unsupported and experimental.\n    Other(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":2179},{"krate":0,"index":2182},{"krate":0,"index":2186},{"krate":0,"index":2190},{"krate":0,"index":2194},{"krate":0,"index":2197}],"decl_id":null,"docs":" Digest item that is able to encode/decode 'system' digest items and\n provide opaque access to other items.\n","sig":null,"attributes":[{"value":"/ Digest item that is able to encode/decode 'system' digest items and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67259,"byte_end":67330,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/ provide opaque access to other items.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":67331,"byte_end":67372,"line_start":80,"line_end":80,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2221},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69787,"byte_end":69803,"line_start":135,"line_end":135,"column_start":2,"column_end":18},"name":"NewConfiguration","qualname":"::generic::digest::ChangesTrieSignal::NewConfiguration","value":"ChangesTrieSignal::NewConfiguration(Option<ChangesTrieConfiguration>)","parent":{"krate":0,"index":2220},"children":[],"decl_id":null,"docs":" New changes trie configuration is enacted, starting from **next block**.","sig":null,"attributes":[{"value":"/ New changes trie configuration is enacted, starting from **next block**.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69128,"byte_end":69204,"line_start":124,"line_end":124,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69206,"byte_end":69209,"line_start":125,"line_end":125,"column_start":2,"column_end":5}},{"value":"/ The block that emits this signal will contain changes trie (CT) that covers","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69211,"byte_end":69290,"line_start":126,"line_end":126,"column_start":2,"column_end":81}},{"value":"/ blocks range [BEGIN; current block], where BEGIN is (order matters):","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69292,"byte_end":69364,"line_start":127,"line_end":127,"column_start":2,"column_end":74}},{"value":"/ - LAST_TOP_LEVEL_DIGEST_BLOCK+1 if top level digest CT has ever been created","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69366,"byte_end":69446,"line_start":128,"line_end":128,"column_start":2,"column_end":82}},{"value":"/   using current configuration AND the last top level digest CT has been created","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69448,"byte_end":69531,"line_start":129,"line_end":129,"column_start":2,"column_end":85}},{"value":"/   at block LAST_TOP_LEVEL_DIGEST_BLOCK;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69533,"byte_end":69576,"line_start":130,"line_end":130,"column_start":2,"column_end":45}},{"value":"/ - LAST_CONFIGURATION_CHANGE_BLOCK+1 if there has been CT configuration change","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69578,"byte_end":69659,"line_start":131,"line_end":131,"column_start":2,"column_end":83}},{"value":"/   before and the last configuration change happened at block","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69661,"byte_end":69725,"line_start":132,"line_end":132,"column_start":2,"column_end":66}},{"value":"/   LAST_CONFIGURATION_CHANGE_BLOCK;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69727,"byte_end":69765,"line_start":133,"line_end":133,"column_start":2,"column_end":40}},{"value":"/ - 1 otherwise.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69767,"byte_end":69785,"line_start":134,"line_end":134,"column_start":2,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2220},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69107,"byte_end":69124,"line_start":123,"line_end":123,"column_start":10,"column_end":27},"name":"ChangesTrieSignal","qualname":"::generic::digest::ChangesTrieSignal","value":"pub enum ChangesTrieSignal {\n\n    /// New changes trie configuration is enacted, starting from **next block**.\n    ///\n    /// The block that emits this signal will contain changes trie (CT) that covers\n    /// blocks range [BEGIN; current block], where BEGIN is (order matters):\n    /// - LAST_TOP_LEVEL_DIGEST_BLOCK+1 if top level digest CT has ever been created\n    ///   using current configuration AND the last top level digest CT has been created\n    ///   at block LAST_TOP_LEVEL_DIGEST_BLOCK;\n    /// - LAST_CONFIGURATION_CHANGE_BLOCK+1 if there has been CT configuration change\n    ///   before and the last configuration change happened at block\n    ///   LAST_CONFIGURATION_CHANGE_BLOCK;\n    /// - 1 otherwise.\n    NewConfiguration(Option<ChangesTrieConfiguration>),\n}","parent":null,"children":[{"krate":0,"index":2221}],"decl_id":null,"docs":" Available changes trie signals.\n","sig":null,"attributes":[{"value":"/ Available changes trie signals.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":68939,"byte_end":68974,"line_start":120,"line_end":120,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2252},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70717,"byte_end":70732,"line_start":163,"line_end":163,"column_start":2,"column_end":17},"name":"ChangesTrieRoot","qualname":"::generic::digest::DigestItemRef::ChangesTrieRoot","value":"DigestItemRef::ChangesTrieRoot(&'a Hash)","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Reference to `DigestItem::ChangesTrieRoot`.\n","sig":null,"attributes":[{"value":"/ Reference to `DigestItem::ChangesTrieRoot`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70668,"byte_end":70715,"line_start":162,"line_end":162,"column_start":2,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2255},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71039,"byte_end":71049,"line_start":170,"line_end":170,"column_start":2,"column_end":12},"name":"PreRuntime","qualname":"::generic::digest::DigestItemRef::PreRuntime","value":"DigestItemRef::PreRuntime(&'a ConsensusEngineId, &'a Vec<u8>)","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" A pre-runtime digest.","sig":null,"attributes":[{"value":"/ A pre-runtime digest.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70745,"byte_end":70770,"line_start":164,"line_end":164,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70772,"byte_end":70775,"line_start":165,"line_end":165,"column_start":2,"column_end":5}},{"value":"/ These are messages from the consensus engine to the runtime, although","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70777,"byte_end":70850,"line_start":166,"line_end":166,"column_start":2,"column_end":75}},{"value":"/ the consensus engine can (and should) read them itself to avoid","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70852,"byte_end":70919,"line_start":167,"line_end":167,"column_start":2,"column_end":69}},{"value":"/ code and state duplication.  It is erroneous for a runtime to produce","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70921,"byte_end":70994,"line_start":168,"line_end":168,"column_start":2,"column_end":75}},{"value":"/ these, but this is not (yet) checked.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70996,"byte_end":71037,"line_start":169,"line_end":169,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2259},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71263,"byte_end":71272,"line_start":174,"line_end":174,"column_start":2,"column_end":11},"name":"Consensus","qualname":"::generic::digest::DigestItemRef::Consensus","value":"DigestItemRef::Consensus(&'a ConsensusEngineId, &'a Vec<u8>)","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" A message from the runtime to the consensus engine. This should *never*\n be generated by the native code of any consensus engine, but this is not\n checked (yet).\n","sig":null,"attributes":[{"value":"/ A message from the runtime to the consensus engine. This should *never*","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71088,"byte_end":71163,"line_start":171,"line_end":171,"column_start":2,"column_end":77}},{"value":"/ be generated by the native code of any consensus engine, but this is not","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71165,"byte_end":71241,"line_start":172,"line_end":172,"column_start":2,"column_end":78}},{"value":"/ checked (yet).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71243,"byte_end":71261,"line_start":173,"line_end":173,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2263},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71404,"byte_end":71408,"line_start":177,"line_end":177,"column_start":2,"column_end":6},"name":"Seal","qualname":"::generic::digest::DigestItemRef::Seal","value":"DigestItemRef::Seal(&'a ConsensusEngineId, &'a Vec<u8>)","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Put a Seal on it. This is only used by native code, and is never seen\n by runtimes.\n","sig":null,"attributes":[{"value":"/ Put a Seal on it. This is only used by native code, and is never seen","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71311,"byte_end":71384,"line_start":175,"line_end":175,"column_start":2,"column_end":75}},{"value":"/ by runtimes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71386,"byte_end":71402,"line_start":176,"line_end":176,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2267},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71537,"byte_end":71554,"line_start":180,"line_end":180,"column_start":2,"column_end":19},"name":"ChangesTrieSignal","qualname":"::generic::digest::DigestItemRef::ChangesTrieSignal","value":"DigestItemRef::ChangesTrieSignal(&'a ChangesTrieSignal)","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Digest item that contains signal from changes tries manager to the\n native code.\n","sig":null,"attributes":[{"value":"/ Digest item that contains signal from changes tries manager to the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71447,"byte_end":71517,"line_start":178,"line_end":178,"column_start":2,"column_end":72}},{"value":"/ native code.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71519,"byte_end":71535,"line_start":179,"line_end":179,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2270},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71642,"byte_end":71647,"line_start":182,"line_end":182,"column_start":2,"column_end":7},"name":"Other","qualname":"::generic::digest::DigestItemRef::Other","value":"DigestItemRef::Other(&'a Vec<u8>)","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Any 'non-system' digest item, opaque to the native code.\n","sig":null,"attributes":[{"value":"/ Any 'non-system' digest item, opaque to the native code.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":71580,"byte_end":71640,"line_start":181,"line_end":181,"column_start":2,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":2249},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70637,"byte_end":70650,"line_start":161,"line_end":161,"column_start":10,"column_end":23},"name":"DigestItemRef","qualname":"::generic::digest::DigestItemRef","value":"pub enum DigestItemRef<'a, Hash: 'a> {\n\n    /// Reference to `DigestItem::ChangesTrieRoot`.\n    ChangesTrieRoot(&'a Hash),\n\n    /// A pre-runtime digest.\n    ///\n    /// These are messages from the consensus engine to the runtime, although\n    /// the consensus engine can (and should) read them itself to avoid\n    /// code and state duplication.  It is erroneous for a runtime to produce\n    /// these, but this is not (yet) checked.\n    PreRuntime(&'a ConsensusEngineId, &'a Vec<u8>),\n\n    /// A message from the runtime to the consensus engine. This should *never*\n    /// be generated by the native code of any consensus engine, but this is not\n    /// checked (yet).\n    Consensus(&'a ConsensusEngineId, &'a Vec<u8>),\n\n    /// Put a Seal on it. This is only used by native code, and is never seen\n    /// by runtimes.\n    Seal(&'a ConsensusEngineId, &'a Vec<u8>),\n\n    /// Digest item that contains signal from changes tries manager to the\n    /// native code.\n    ChangesTrieSignal(&'a ChangesTrieSignal),\n\n    /// Any 'non-system' digest item, opaque to the native code.\n    Other(&'a Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":2252},{"krate":0,"index":2255},{"krate":0,"index":2259},{"krate":0,"index":2263},{"krate":0,"index":2267},{"krate":0,"index":2270}],"decl_id":null,"docs":" A 'referencing view' for digest item. Does not own its contents. Used by\n final runtime implementations for encoding/decoding its log items.\n","sig":null,"attributes":[{"value":"/ A 'referencing view' for digest item. Does not own its contents. Used by","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70434,"byte_end":70510,"line_start":158,"line_end":158,"column_start":1,"column_end":77}},{"value":"/ final runtime implementations for encoding/decoding its log items.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70511,"byte_end":70581,"line_start":159,"line_end":159,"column_start":1,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2329},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72426,"byte_end":72436,"line_start":205,"line_end":205,"column_start":2,"column_end":12},"name":"PreRuntime","qualname":"::generic::digest::OpaqueDigestItemId::PreRuntime","value":"OpaqueDigestItemId::PreRuntime(&'a ConsensusEngineId)","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":" Type corresponding to DigestItem::PreRuntime.\n","sig":null,"attributes":[{"value":"/ Type corresponding to DigestItem::PreRuntime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72375,"byte_end":72424,"line_start":204,"line_end":204,"column_start":2,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2332},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72512,"byte_end":72521,"line_start":207,"line_end":207,"column_start":2,"column_end":11},"name":"Consensus","qualname":"::generic::digest::OpaqueDigestItemId::Consensus","value":"OpaqueDigestItemId::Consensus(&'a ConsensusEngineId)","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":" Type corresponding to DigestItem::Consensus.\n","sig":null,"attributes":[{"value":"/ Type corresponding to DigestItem::Consensus.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72462,"byte_end":72510,"line_start":206,"line_end":206,"column_start":2,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2335},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72592,"byte_end":72596,"line_start":209,"line_end":209,"column_start":2,"column_end":6},"name":"Seal","qualname":"::generic::digest::OpaqueDigestItemId::Seal","value":"OpaqueDigestItemId::Seal(&'a ConsensusEngineId)","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":" Type corresponding to DigestItem::Seal.\n","sig":null,"attributes":[{"value":"/ Type corresponding to DigestItem::Seal.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72547,"byte_end":72590,"line_start":208,"line_end":208,"column_start":2,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2338},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72661,"byte_end":72666,"line_start":211,"line_end":211,"column_start":2,"column_end":7},"name":"Other","qualname":"::generic::digest::OpaqueDigestItemId::Other","value":"OpaqueDigestItemId::Other","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":" Some other (non-prescribed) type.\n","sig":null,"attributes":[{"value":"/ Some other (non-prescribed) type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72622,"byte_end":72659,"line_start":210,"line_end":210,"column_start":2,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":2327},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72349,"byte_end":72367,"line_start":203,"line_end":203,"column_start":10,"column_end":28},"name":"OpaqueDigestItemId","qualname":"::generic::digest::OpaqueDigestItemId","value":"pub enum OpaqueDigestItemId<'a> {\n\n    /// Type corresponding to DigestItem::PreRuntime.\n    PreRuntime(&'a ConsensusEngineId),\n\n    /// Type corresponding to DigestItem::Consensus.\n    Consensus(&'a ConsensusEngineId),\n\n    /// Type corresponding to DigestItem::Seal.\n    Seal(&'a ConsensusEngineId),\n\n    /// Some other (non-prescribed) type.\n    Other,\n}","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":2332},{"krate":0,"index":2335},{"krate":0,"index":2338}],"decl_id":null,"docs":" Type of a digest item that contains raw data; this also names the consensus engine ID where\n applicable. Used to identify one or more digest items of interest.\n","sig":null,"attributes":[{"value":"/ Type of a digest item that contains raw data; this also names the consensus engine ID where","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72118,"byte_end":72213,"line_start":200,"line_end":200,"column_start":1,"column_end":96}},{"value":"/ applicable. Used to identify one or more digest items of interest.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72214,"byte_end":72284,"line_start":201,"line_end":201,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72765,"byte_end":72769,"line_start":216,"line_end":216,"column_start":9,"column_end":13},"name":"dref","qualname":"<DigestItem<Hash>>::dref","value":"pub fn dref<'a>(&'a Self) -> DigestItemRef","parent":null,"children":[],"decl_id":null,"docs":" Returns a 'referencing view' for this digest item.\n","sig":null,"attributes":[{"value":"/ Returns a 'referencing view' for this digest item.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72702,"byte_end":72756,"line_start":215,"line_end":215,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":73336,"byte_end":73356,"line_start":228,"line_end":228,"column_start":9,"column_end":29},"name":"as_changes_trie_root","qualname":"<DigestItem<Hash>>::as_changes_trie_root","value":"pub fn as_changes_trie_root(&Self) -> Option<&Hash>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if the entry is the `ChangesTrieRoot` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if the entry is the `ChangesTrieRoot` entry.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":73264,"byte_end":73327,"line_start":227,"line_end":227,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":73493,"byte_end":73507,"line_start":233,"line_end":233,"column_start":9,"column_end":23},"name":"as_pre_runtime","qualname":"<DigestItem<Hash>>::as_pre_runtime","value":"pub fn as_pre_runtime(&Self) -> Option<(ConsensusEngineId, &[u8])>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if this entry is the `PreRuntime` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if this entry is the `PreRuntime` entry.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":73425,"byte_end":73484,"line_start":232,"line_end":232,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":73658,"byte_end":73670,"line_start":238,"line_end":238,"column_start":9,"column_end":21},"name":"as_consensus","qualname":"<DigestItem<Hash>>::as_consensus","value":"pub fn as_consensus(&Self) -> Option<(ConsensusEngineId, &[u8])>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if this entry is the `Consensus` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if this entry is the `Consensus` entry.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":73591,"byte_end":73649,"line_start":237,"line_end":237,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":73814,"byte_end":73821,"line_start":243,"line_end":243,"column_start":9,"column_end":16},"name":"as_seal","qualname":"<DigestItem<Hash>>::as_seal","value":"pub fn as_seal(&Self) -> Option<(ConsensusEngineId, &[u8])>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if this entry is the `Seal` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if this entry is the `Seal` entry.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":73752,"byte_end":73805,"line_start":242,"line_end":242,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":73972,"byte_end":73994,"line_start":248,"line_end":248,"column_start":9,"column_end":31},"name":"as_changes_trie_signal","qualname":"<DigestItem<Hash>>::as_changes_trie_signal","value":"pub fn as_changes_trie_signal(&Self) -> Option<&ChangesTrieSignal>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if the entry is the `ChangesTrieSignal` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if the entry is the `ChangesTrieSignal` entry.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":73898,"byte_end":73963,"line_start":247,"line_end":247,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74139,"byte_end":74147,"line_start":253,"line_end":253,"column_start":9,"column_end":17},"name":"as_other","qualname":"<DigestItem<Hash>>::as_other","value":"pub fn as_other(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns Some if `self` is a `DigestItem::Other`.\n","sig":null,"attributes":[{"value":"/ Returns Some if `self` is a `DigestItem::Other`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74078,"byte_end":74130,"line_start":252,"line_end":252,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74358,"byte_end":74368,"line_start":261,"line_end":261,"column_start":9,"column_end":19},"name":"try_as_raw","qualname":"<DigestItem<Hash>>::try_as_raw","value":"pub fn try_as_raw(&Self, OpaqueDigestItemId) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the opaque data contained in the item if `Some` if this entry has the id given.\n","sig":null,"attributes":[{"value":"/ Returns the opaque data contained in the item if `Some` if this entry has the id given.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74258,"byte_end":74349,"line_start":260,"line_end":260,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74585,"byte_end":74591,"line_start":267,"line_end":267,"column_start":9,"column_end":15},"name":"try_to","qualname":"<DigestItem<Hash>>::try_to","value":"pub fn try_to<T: Decode>(&Self, OpaqueDigestItemId) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the data contained in the item if `Some` if this entry has the id given, decoded\n to the type provided `T`.\n","sig":null,"attributes":[{"value":"/ Returns the data contained in the item if `Some` if this entry has the id given, decoded","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74453,"byte_end":74545,"line_start":265,"line_end":265,"column_start":2,"column_end":94}},{"value":"/ to the type provided `T`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74547,"byte_end":74576,"line_start":266,"line_end":266,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":75931,"byte_end":75951,"line_start":312,"line_end":312,"column_start":9,"column_end":29},"name":"as_changes_trie_root","qualname":"<DigestItemRef>::as_changes_trie_root","value":"pub fn as_changes_trie_root(&Self) -> Option<&'a Hash>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `ChangesTrieRoot`.\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `ChangesTrieRoot`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":75873,"byte_end":75922,"line_start":311,"line_end":311,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":76157,"byte_end":76171,"line_start":320,"line_end":320,"column_start":9,"column_end":23},"name":"as_pre_runtime","qualname":"<DigestItemRef>::as_pre_runtime","value":"pub fn as_pre_runtime(&Self) -> Option<(ConsensusEngineId, &'a [u8])>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `PreRuntime`\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `PreRuntime`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":76105,"byte_end":76148,"line_start":319,"line_end":319,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":76411,"byte_end":76423,"line_start":328,"line_end":328,"column_start":9,"column_end":21},"name":"as_consensus","qualname":"<DigestItemRef>::as_consensus","value":"pub fn as_consensus(&Self) -> Option<(ConsensusEngineId, &'a [u8])>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `Consensus`\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `Consensus`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":76360,"byte_end":76402,"line_start":327,"line_end":327,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":76657,"byte_end":76664,"line_start":336,"line_end":336,"column_start":9,"column_end":16},"name":"as_seal","qualname":"<DigestItemRef>::as_seal","value":"pub fn as_seal(&Self) -> Option<(ConsensusEngineId, &'a [u8])>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `Seal`\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `Seal`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":76611,"byte_end":76648,"line_start":335,"line_end":335,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":76907,"byte_end":76929,"line_start":344,"line_end":344,"column_start":9,"column_end":31},"name":"as_changes_trie_signal","qualname":"<DigestItemRef>::as_changes_trie_signal","value":"pub fn as_changes_trie_signal(&Self) -> Option<&'a ChangesTrieSignal>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `ChangesTrieSignal`.\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `ChangesTrieSignal`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":76847,"byte_end":76898,"line_start":343,"line_end":343,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":77154,"byte_end":77162,"line_start":352,"line_end":352,"column_start":9,"column_end":17},"name":"as_other","qualname":"<DigestItemRef>::as_other","value":"pub fn as_other(&Self) -> Option<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `PreRuntime`\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `PreRuntime`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":77102,"byte_end":77145,"line_start":351,"line_end":351,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":77420,"byte_end":77430,"line_start":361,"line_end":361,"column_start":9,"column_end":19},"name":"try_as_raw","qualname":"<DigestItemRef>::try_as_raw","value":"pub fn try_as_raw(&Self, OpaqueDigestItemId) -> Option<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Try to match this digest item to the given opaque item identifier; if it matches, then\n return the opaque data it contains.\n","sig":null,"attributes":[{"value":"/ Try to match this digest item to the given opaque item identifier; if it matches, then","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":77280,"byte_end":77370,"line_start":359,"line_end":359,"column_start":2,"column_end":92}},{"value":"/ return the opaque data it contains.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":77372,"byte_end":77411,"line_start":360,"line_end":360,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":78010,"byte_end":78016,"line_start":374,"line_end":374,"column_start":9,"column_end":15},"name":"try_to","qualname":"<DigestItemRef>::try_to","value":"pub fn try_to<T: Decode>(&Self, OpaqueDigestItemId) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Try to match this digest item to the given opaque item identifier; if it matches, then\n try to cast to the given data type; if that works, return it.\n","sig":null,"attributes":[{"value":"/ Try to match this digest item to the given opaque item identifier; if it matches, then","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":77844,"byte_end":77934,"line_start":372,"line_end":372,"column_start":2,"column_end":92}},{"value":"/ try to cast to the given data type; if that works, return it.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":77936,"byte_end":78001,"line_start":373,"line_end":373,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":79212,"byte_end":79232,"line_start":416,"line_end":416,"column_start":9,"column_end":29},"name":"as_new_configuration","qualname":"<ChangesTrieSignal>::as_new_configuration","value":"pub fn as_new_configuration(&Self)\n-> Option<&Option<ChangesTrieConfiguration>>","parent":null,"children":[],"decl_id":null,"docs":" Try to cast this signal to NewConfiguration.\n","sig":null,"attributes":[{"value":"/ Try to cast this signal to NewConfiguration.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":79155,"byte_end":79203,"line_start":415,"line_end":415,"column_start":2,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":451},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offchain","qualname":"::offchain","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/mod.rs","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":530},{"krate":0,"index":554},{"krate":0,"index":657}],"decl_id":null,"docs":" A collection of higher lever helpers for offchain calls.\n","sig":null,"attributes":[{"value":"/ A collection of higher lever helpers for offchain calls.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/mod.rs","byte_start":80531,"byte_end":80591,"line_start":18,"line_end":18,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":452},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"http","qualname":"::offchain::http","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":4376},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":2366},{"krate":0,"index":2389},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2380},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":2405},{"krate":0,"index":2432},{"krate":0,"index":2424},{"krate":0,"index":2427},{"krate":0,"index":2417},{"krate":0,"index":2420},{"krate":0,"index":2413},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":479},{"krate":0,"index":488},{"krate":0,"index":2436},{"krate":0,"index":2451},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2443},{"krate":0,"index":2453},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2455},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":2464},{"krate":0,"index":2468},{"krate":0,"index":506},{"krate":0,"index":2470},{"krate":0,"index":2478},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":518},{"krate":0,"index":2480},{"krate":0,"index":2491},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2482},{"krate":0,"index":521},{"krate":0,"index":2493},{"krate":0,"index":2500},{"krate":0,"index":2497},{"krate":0,"index":524}],"decl_id":null,"docs":" A high-level helpers for making HTTP requests from Offchain Workers.","sig":null,"attributes":[{"value":"/ A high-level helpers for making HTTP requests from Offchain Workers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81364,"byte_end":81436,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81437,"byte_end":81440,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `sp-io` crate exposes a low level methods to make and control HTTP requests","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81441,"byte_end":81520,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ available only for Offchain Workers. Those might be hard to use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81521,"byte_end":81588,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/ and usually that level of control is not really necessary.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81589,"byte_end":81651,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/ This module aims to provide high-level wrappers for those APIs","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81652,"byte_end":81718,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ to simplify making HTTP requests.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81719,"byte_end":81756,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81757,"byte_end":81760,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81761,"byte_end":81764,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81765,"byte_end":81777,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81778,"byte_end":81796,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ use sp_runtime::offchain::http::Request;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81797,"byte_end":81841,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81842,"byte_end":81845,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // initiate a GET request to localhost:1234","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81846,"byte_end":81893,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/ let request: Request = Request::get(\"http://localhost:1234\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81894,"byte_end":81959,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/ let pending = request","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81960,"byte_end":81985,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ \t.add_header(\"X-Auth\", \"hunter2\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":81986,"byte_end":82023,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ \t.send()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82024,"byte_end":82036,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/ \t.unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82037,"byte_end":82052,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82053,"byte_end":82056,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // wait for the response indefinitely","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82057,"byte_end":82098,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ let mut response = pending.wait().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82099,"byte_end":82146,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82147,"byte_end":82150,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // then check the headers","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82151,"byte_end":82180,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/ let mut headers = response.headers().into_iter();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82181,"byte_end":82234,"line_start":42,"line_end":42,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(headers.current(), None);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82235,"byte_end":82275,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82276,"byte_end":82279,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // and collect the body","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82280,"byte_end":82307,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ let body = response.body();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82308,"byte_end":82339,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(body.clone().collect::<Vec<_>>(), b\"1234\".to_vec());","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82340,"byte_end":82407,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(body.error(), &None);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82408,"byte_end":82444,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82445,"byte_end":82452,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2367},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82811,"byte_end":82814,"line_start":67,"line_end":67,"column_start":2,"column_end":5},"name":"Get","qualname":"::offchain::http::Method::Get","value":"Method::Get","parent":{"krate":0,"index":2366},"children":[],"decl_id":null,"docs":" GET request\n","sig":null,"attributes":[{"value":"/ GET request","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82794,"byte_end":82809,"line_start":66,"line_end":66,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2369},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82835,"byte_end":82839,"line_start":69,"line_end":69,"column_start":2,"column_end":6},"name":"Post","qualname":"::offchain::http::Method::Post","value":"Method::Post","parent":{"krate":0,"index":2366},"children":[],"decl_id":null,"docs":" POST request\n","sig":null,"attributes":[{"value":"/ POST request","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82817,"byte_end":82833,"line_start":68,"line_end":68,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2371},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82859,"byte_end":82862,"line_start":71,"line_end":71,"column_start":2,"column_end":5},"name":"Put","qualname":"::offchain::http::Method::Put","value":"Method::Put","parent":{"krate":0,"index":2366},"children":[],"decl_id":null,"docs":" PUT request\n","sig":null,"attributes":[{"value":"/ PUT request","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82842,"byte_end":82857,"line_start":70,"line_end":70,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2373},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82884,"byte_end":82889,"line_start":73,"line_end":73,"column_start":2,"column_end":7},"name":"Patch","qualname":"::offchain::http::Method::Patch","value":"Method::Patch","parent":{"krate":0,"index":2366},"children":[],"decl_id":null,"docs":" PATCH request\n","sig":null,"attributes":[{"value":"/ PATCH request","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82865,"byte_end":82882,"line_start":72,"line_end":72,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2375},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82912,"byte_end":82918,"line_start":75,"line_end":75,"column_start":2,"column_end":8},"name":"Delete","qualname":"::offchain::http::Method::Delete","value":"Method::Delete","parent":{"krate":0,"index":2366},"children":[],"decl_id":null,"docs":" DELETE request\n","sig":null,"attributes":[{"value":"/ DELETE request","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82892,"byte_end":82910,"line_start":74,"line_end":74,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2377},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82938,"byte_end":82943,"line_start":77,"line_end":77,"column_start":2,"column_end":7},"name":"Other","qualname":"::offchain::http::Method::Other","value":"Method::Other(&'static str)","parent":{"krate":0,"index":2366},"children":[],"decl_id":null,"docs":" Custom verb\n","sig":null,"attributes":[{"value":"/ Custom verb","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82921,"byte_end":82936,"line_start":76,"line_end":76,"column_start":2,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":2366},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82784,"byte_end":82790,"line_start":65,"line_end":65,"column_start":10,"column_end":16},"name":"Method","qualname":"::offchain::http::Method","value":"pub enum Method {\n\n    /// GET request\n    Get,\n\n    /// POST request\n    Post,\n\n    /// PUT request\n    Put,\n\n    /// PATCH request\n    Patch,\n\n    /// DELETE request\n    Delete,\n\n    /// Custom verb\n    Other(&'static str),\n}","parent":null,"children":[{"krate":0,"index":2367},{"krate":0,"index":2369},{"krate":0,"index":2371},{"krate":0,"index":2373},{"krate":0,"index":2375},{"krate":0,"index":2377}],"decl_id":null,"docs":" Request method (HTTP verb)\n","sig":null,"attributes":[{"value":"/ Request method (HTTP verb)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82698,"byte_end":82728,"line_start":63,"line_end":63,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2405},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84253,"byte_end":84260,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"Request","qualname":"::offchain::http::Request","value":"Request { method, url, body, deadline }","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412}],"decl_id":null,"docs":" An HTTP request builder.\n","sig":null,"attributes":[{"value":"/ An HTTP request builder.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84167,"byte_end":84195,"line_start":130,"line_end":130,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2408},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84316,"byte_end":84322,"line_start":134,"line_end":134,"column_start":6,"column_end":12},"name":"method","qualname":"::offchain::http::Request::method","value":"offchain::http::Method","parent":{"krate":0,"index":2405},"children":[],"decl_id":null,"docs":" Request method\n","sig":null,"attributes":[{"value":"/ Request method","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84292,"byte_end":84310,"line_start":133,"line_end":133,"column_start":2,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2409},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84354,"byte_end":84357,"line_start":136,"line_end":136,"column_start":6,"column_end":9},"name":"url","qualname":"::offchain::http::Request::url","value":"&'a str","parent":{"krate":0,"index":2405},"children":[],"decl_id":null,"docs":" Request URL\n","sig":null,"attributes":[{"value":"/ Request URL","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84333,"byte_end":84348,"line_start":135,"line_end":135,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":2410},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84398,"byte_end":84402,"line_start":138,"line_end":138,"column_start":6,"column_end":10},"name":"body","qualname":"::offchain::http::Request::body","value":"T","parent":{"krate":0,"index":2405},"children":[],"decl_id":null,"docs":" Body of the request\n","sig":null,"attributes":[{"value":"/ Body of the request","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84369,"byte_end":84392,"line_start":137,"line_end":137,"column_start":2,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2411},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84456,"byte_end":84464,"line_start":140,"line_end":140,"column_start":6,"column_end":14},"name":"deadline","qualname":"::offchain::http::Request::deadline","value":"std::option::Option<sp_core::offchain::Timestamp>","parent":{"krate":0,"index":2405},"children":[],"decl_id":null,"docs":" Deadline to finish sending the request\n","sig":null,"attributes":[{"value":"/ Deadline to finish sending the request","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84408,"byte_end":84450,"line_start":139,"line_end":139,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84833,"byte_end":84836,"line_start":159,"line_end":159,"column_start":9,"column_end":12},"name":"get","qualname":"<Request>::get","value":"pub fn get(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start a simple GET request\n","sig":null,"attributes":[{"value":"/ Start a simple GET request","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84794,"byte_end":84824,"line_start":158,"line_end":158,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84967,"byte_end":84971,"line_start":166,"line_end":166,"column_start":9,"column_end":13},"name":"post","qualname":"<Request>::post","value":"pub fn post(&'a str, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new POST request with given body.\n","sig":null,"attributes":[{"value":"/ Create new POST request with given body.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84914,"byte_end":84958,"line_start":165,"line_end":165,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85263,"byte_end":85266,"line_start":181,"line_end":181,"column_start":9,"column_end":12},"name":"new","qualname":"<Request>::new","value":"pub fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Request builder with the given URL.\n","sig":null,"attributes":[{"value":"/ Create a new Request builder with the given URL.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85202,"byte_end":85254,"line_start":180,"line_end":180,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85371,"byte_end":85377,"line_start":186,"line_end":186,"column_start":9,"column_end":15},"name":"method","qualname":"<Request>::method","value":"pub fn method(Self, Method) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change the method of the request\n","sig":null,"attributes":[{"value":"/ Change the method of the request","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85326,"byte_end":85362,"line_start":185,"line_end":185,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85493,"byte_end":85496,"line_start":192,"line_end":192,"column_start":9,"column_end":12},"name":"url","qualname":"<Request>::url","value":"pub fn url(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change the URL of the request.\n","sig":null,"attributes":[{"value":"/ Change the URL of the request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85450,"byte_end":85484,"line_start":191,"line_end":191,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85602,"byte_end":85606,"line_start":198,"line_end":198,"column_start":9,"column_end":13},"name":"body","qualname":"<Request>::body","value":"pub fn body(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the body of the request.\n","sig":null,"attributes":[{"value":"/ Set the body of the request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85561,"byte_end":85593,"line_start":197,"line_end":197,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85694,"byte_end":85704,"line_start":204,"line_end":204,"column_start":9,"column_end":19},"name":"add_header","qualname":"<Request>::add_header","value":"pub fn add_header(Self, &str, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a header.\n","sig":null,"attributes":[{"value":"/ Add a header.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85668,"byte_end":85685,"line_start":203,"line_end":203,"column_start":2,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85862,"byte_end":85870,"line_start":210,"line_end":210,"column_start":9,"column_end":17},"name":"deadline","qualname":"<Request>::deadline","value":"pub fn deadline(Self, Timestamp) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the deadline of the request.\n","sig":null,"attributes":[{"value":"/ Set the deadline of the request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85817,"byte_end":85853,"line_start":209,"line_end":209,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":86165,"byte_end":86169,"line_start":221,"line_end":221,"column_start":9,"column_end":13},"name":"send","qualname":"<Request>::send","value":"pub fn send(Self) -> Result<PendingRequest, HttpError>","parent":null,"children":[],"decl_id":null,"docs":" Send the request and return a handle.","sig":null,"attributes":[{"value":"/ Send the request and return a handle.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":86027,"byte_end":86068,"line_start":217,"line_end":217,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":86070,"byte_end":86073,"line_start":218,"line_end":218,"column_start":2,"column_end":5}},{"value":"/ Err is returned in case the deadline is reached","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":86075,"byte_end":86126,"line_start":219,"line_end":219,"column_start":2,"column_end":53}},{"value":"/ or the request timeouts.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":86128,"byte_end":86156,"line_start":220,"line_end":220,"column_start":2,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2437},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":86968,"byte_end":86983,"line_start":258,"line_end":258,"column_start":2,"column_end":17},"name":"DeadlineReached","qualname":"::offchain::http::Error::DeadlineReached","value":"Error::DeadlineReached","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":" Deadline has been reached.\n","sig":null,"attributes":[{"value":"/ Deadline has been reached.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":86936,"byte_end":86966,"line_start":257,"line_end":257,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2439},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87014,"byte_end":87021,"line_start":260,"line_end":260,"column_start":2,"column_end":9},"name":"IoError","qualname":"::offchain::http::Error::IoError","value":"Error::IoError","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":" Request had timed out.\n","sig":null,"attributes":[{"value":"/ Request had timed out.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":86986,"byte_end":87012,"line_start":259,"line_end":259,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2441},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87065,"byte_end":87072,"line_start":262,"line_end":262,"column_start":2,"column_end":9},"name":"Unknown","qualname":"::offchain::http::Error::Unknown","value":"Error::Unknown","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":" Unknown error has been encountered.\n","sig":null,"attributes":[{"value":"/ Unknown error has been encountered.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87024,"byte_end":87063,"line_start":261,"line_end":261,"column_start":2,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2436},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":86927,"byte_end":86932,"line_start":256,"line_end":256,"column_start":10,"column_end":15},"name":"Error","qualname":"::offchain::http::Error","value":"pub enum Error {\n\n    /// Deadline has been reached.\n    DeadlineReached,\n\n    /// Request had timed out.\n    IoError,\n\n    /// Unknown error has been encountered.\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":2437},{"krate":0,"index":2439},{"krate":0,"index":2441}],"decl_id":null,"docs":" A request error\n","sig":null,"attributes":[{"value":"/ A request error","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":86852,"byte_end":86871,"line_start":254,"line_end":254,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2453},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87182,"byte_end":87196,"line_start":267,"line_end":267,"column_start":12,"column_end":26},"name":"PendingRequest","qualname":"::offchain::http::PendingRequest","value":"PendingRequest { id }","parent":null,"children":[{"krate":0,"index":2454}],"decl_id":null,"docs":" A struct representing an uncompleted http request.\n","sig":null,"attributes":[{"value":"/ A struct representing an uncompleted http request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87077,"byte_end":87131,"line_start":265,"line_end":265,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2454},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87220,"byte_end":87222,"line_start":269,"line_end":269,"column_start":6,"column_end":8},"name":"id","qualname":"::offchain::http::PendingRequest::id","value":"sp_core::offchain::HttpRequestId","parent":{"krate":0,"index":2453},"children":[],"decl_id":null,"docs":" Request ID\n","sig":null,"attributes":[{"value":"/ Request ID","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87200,"byte_end":87214,"line_start":268,"line_end":268,"column_start":2,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":495},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87294,"byte_end":87304,"line_start":273,"line_end":273,"column_start":10,"column_end":20},"name":"HttpResult","qualname":"::offchain::http::HttpResult","value":"Result<Response, Error>","parent":null,"children":[],"decl_id":null,"docs":" A result of waiting for a pending request.\n","sig":null,"attributes":[{"value":"/ A result of waiting for a pending request.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87238,"byte_end":87284,"line_start":272,"line_end":272,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87458,"byte_end":87462,"line_start":279,"line_end":279,"column_start":9,"column_end":13},"name":"wait","qualname":"<PendingRequest>::wait","value":"pub fn wait(Self) -> HttpResult","parent":null,"children":[],"decl_id":null,"docs":" Wait for the request to complete.","sig":null,"attributes":[{"value":"/ Wait for the request to complete.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87356,"byte_end":87393,"line_start":276,"line_end":276,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87395,"byte_end":87398,"line_start":277,"line_end":277,"column_start":2,"column_end":5}},{"value":"/ NOTE this waits for the request indefinitely.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87400,"byte_end":87449,"line_start":278,"line_end":278,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87746,"byte_end":87754,"line_start":288,"line_end":288,"column_start":9,"column_end":17},"name":"try_wait","qualname":"<PendingRequest>::try_wait","value":"pub fn try_wait<impl Into<Option<Timestamp>>: Into<Option<Timestamp>>>(Self,\n                                                                       impl Into<Option<Timestamp>>)\n-> Result<HttpResult, PendingRequest>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to wait for the request to finish,\n but will return `Err` in case the deadline is reached.\n","sig":null,"attributes":[{"value":"/ Attempts to wait for the request to finish,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87630,"byte_end":87677,"line_start":286,"line_end":286,"column_start":2,"column_end":49}},{"value":"/ but will return `Err` in case the deadline is reached.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87679,"byte_end":87737,"line_start":287,"line_end":287,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87994,"byte_end":88002,"line_start":293,"line_end":293,"column_start":9,"column_end":17},"name":"wait_all","qualname":"<PendingRequest>::wait_all","value":"pub fn wait_all(Vec<PendingRequest>) -> Vec<HttpResult>","parent":null,"children":[],"decl_id":null,"docs":" Wait for all provided requests.\n","sig":null,"attributes":[{"value":"/ Wait for all provided requests.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87950,"byte_end":87985,"line_start":292,"line_end":292,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":88447,"byte_end":88459,"line_start":306,"line_end":306,"column_start":9,"column_end":21},"name":"try_wait_all","qualname":"<PendingRequest>::try_wait_all","value":"pub fn try_wait_all<impl Into<Option<Timestamp>>: Into<Option<Timestamp>>>(Vec<PendingRequest>,\n                                                                           impl Into<Option<Timestamp>>)\n-> Vec<Result<HttpResult, PendingRequest>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to wait for all provided requests, but up to given deadline.","sig":null,"attributes":[{"value":"/ Attempt to wait for all provided requests, but up to given deadline.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":88259,"byte_end":88331,"line_start":303,"line_end":303,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":88333,"byte_end":88336,"line_start":304,"line_end":304,"column_start":2,"column_end":5}},{"value":"/ Requests that are complete will resolve to an `Ok` others will return a `DeadlineReached` error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":88338,"byte_end":88438,"line_start":305,"line_end":305,"column_start":2,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":2464},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89134,"byte_end":89142,"line_start":328,"line_end":328,"column_start":12,"column_end":20},"name":"Response","qualname":"::offchain::http::Response","value":"Response { id, code }","parent":null,"children":[{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467}],"decl_id":null,"docs":" A HTTP response.\n","sig":null,"attributes":[{"value":"/ A HTTP response.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89078,"byte_end":89098,"line_start":326,"line_end":326,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2465},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89166,"byte_end":89168,"line_start":330,"line_end":330,"column_start":6,"column_end":8},"name":"id","qualname":"::offchain::http::Response::id","value":"sp_core::offchain::HttpRequestId","parent":{"krate":0,"index":2464},"children":[],"decl_id":null,"docs":" Request id\n","sig":null,"attributes":[{"value":"/ Request id","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89146,"byte_end":89160,"line_start":329,"line_end":329,"column_start":2,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":2466},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89212,"byte_end":89216,"line_start":332,"line_end":332,"column_start":6,"column_end":10},"name":"code","qualname":"::offchain::http::Response::code","value":"u16","parent":{"krate":0,"index":2464},"children":[],"decl_id":null,"docs":" Response status code\n","sig":null,"attributes":[{"value":"/ Response status code","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89182,"byte_end":89206,"line_start":331,"line_end":331,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89447,"byte_end":89454,"line_start":347,"line_end":347,"column_start":9,"column_end":16},"name":"headers","qualname":"<Response>::headers","value":"pub fn headers(&mut Self) -> &Headers","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the headers for this response.\n","sig":null,"attributes":[{"value":"/ Retrieve the headers for this response.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89395,"byte_end":89438,"line_start":346,"line_end":346,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89728,"byte_end":89732,"line_start":357,"line_end":357,"column_start":9,"column_end":13},"name":"body","qualname":"<Response>::body","value":"pub fn body(&Self) -> ResponseBody","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the body of this response.\n","sig":null,"attributes":[{"value":"/ Retrieve the body of this response.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89680,"byte_end":89719,"line_start":356,"line_end":356,"column_start":2,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2470},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":90270,"byte_end":90282,"line_start":371,"line_end":371,"column_start":12,"column_end":24},"name":"ResponseBody","qualname":"::offchain::http::ResponseBody","value":"ResponseBody {  }","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2477}],"decl_id":null,"docs":" A buffered byte iterator over response body.","sig":null,"attributes":[{"value":"/ A buffered byte iterator over response body.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89793,"byte_end":89841,"line_start":362,"line_end":362,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89842,"byte_end":89845,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ Note that reading the body may return `None` in following cases:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89846,"byte_end":89914,"line_start":364,"line_end":364,"column_start":1,"column_end":69}},{"value":"/ 1. Either the deadline you've set is reached (check via `#error`;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89915,"byte_end":89984,"line_start":365,"line_end":365,"column_start":1,"column_end":70}},{"value":"/\t   In such case you can resume the reader by setting a new deadline)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89985,"byte_end":90057,"line_start":366,"line_end":366,"column_start":1,"column_end":73}},{"value":"/ 2. Or because of IOError. In such case the reader is not resumable and will keep","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":90058,"byte_end":90142,"line_start":367,"line_end":367,"column_start":1,"column_end":85}},{"value":"/    returning `None`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":90143,"byte_end":90167,"line_start":368,"line_end":368,"column_start":1,"column_end":25}},{"value":"/ 3. The body has been returned. The reader will keep returning `None`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":90168,"byte_end":90241,"line_start":369,"line_end":369,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":91072,"byte_end":91080,"line_start":407,"line_end":407,"column_start":9,"column_end":17},"name":"deadline","qualname":"<ResponseBody>::deadline","value":"pub fn deadline<impl Into<Option<Timestamp>>: Into<Option<Timestamp>>>(&mut Self,\n                                                                       impl Into<Option<Timestamp>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the deadline for reading the body.\n","sig":null,"attributes":[{"value":"/ Set the deadline for reading the body.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":91021,"byte_end":91063,"line_start":406,"line_end":406,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":91370,"byte_end":91375,"line_start":416,"line_end":416,"column_start":9,"column_end":14},"name":"error","qualname":"<ResponseBody>::error","value":"pub fn error(&Self) -> &Option<HttpError>","parent":null,"children":[],"decl_id":null,"docs":" Return an error that caused the iterator to return `None`.","sig":null,"attributes":[{"value":"/ Return an error that caused the iterator to return `None`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":91195,"byte_end":91257,"line_start":412,"line_end":412,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":91259,"byte_end":91262,"line_start":413,"line_end":413,"column_start":2,"column_end":5}},{"value":"/ If the error is `DeadlineReached` you can resume the iterator by setting","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":91264,"byte_end":91340,"line_start":414,"line_end":414,"column_start":2,"column_end":78}},{"value":"/ a new deadline.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":91342,"byte_end":91361,"line_start":415,"line_end":415,"column_start":2,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":2480},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92240,"byte_end":92247,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"Headers","qualname":"::offchain::http::Headers","value":"Headers { raw }","parent":null,"children":[{"krate":0,"index":2481}],"decl_id":null,"docs":" A collection of Headers in the response.\n","sig":null,"attributes":[{"value":"/ A collection of Headers in the response.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92138,"byte_end":92182,"line_start":460,"line_end":460,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2481},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92272,"byte_end":92275,"line_start":464,"line_end":464,"column_start":6,"column_end":9},"name":"raw","qualname":"::offchain::http::Headers::raw","value":"sp_application_crypto::Vec<(sp_application_crypto::Vec<u8>, sp_application_crypto::Vec<u8>)>","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" Raw headers\n","sig":null,"attributes":[{"value":"/ Raw headers","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92251,"byte_end":92266,"line_start":463,"line_end":463,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92605,"byte_end":92609,"line_start":474,"line_end":474,"column_start":9,"column_end":13},"name":"find","qualname":"<Headers>::find","value":"pub fn find(&Self, &str) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a single header from the list of headers.","sig":null,"attributes":[{"value":"/ Retrieve a single header from the list of headers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92321,"byte_end":92375,"line_start":468,"line_end":468,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92377,"byte_end":92380,"line_start":469,"line_end":469,"column_start":2,"column_end":5}},{"value":"/ Note this method is linearly looking from all the headers","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92382,"byte_end":92443,"line_start":470,"line_end":470,"column_start":2,"column_end":63}},{"value":"/ comparing them with the needle byte-by-byte.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92445,"byte_end":92493,"line_start":471,"line_end":471,"column_start":2,"column_end":50}},{"value":"/ If you want to consume multiple headers it's better to iterate","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92495,"byte_end":92561,"line_start":472,"line_end":472,"column_start":2,"column_end":68}},{"value":"/ and collect them on your own.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92563,"byte_end":92596,"line_start":473,"line_end":473,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92848,"byte_end":92857,"line_start":485,"line_end":485,"column_start":9,"column_end":18},"name":"into_iter","qualname":"<Headers>::into_iter","value":"pub fn into_iter(&Self) -> HeadersIterator","parent":null,"children":[],"decl_id":null,"docs":" Convert this headers into an iterator.\n","sig":null,"attributes":[{"value":"/ Convert this headers into an iterator.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92797,"byte_end":92839,"line_start":484,"line_end":484,"column_start":2,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2493},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":93041,"byte_end":93056,"line_start":492,"line_end":492,"column_start":12,"column_end":27},"name":"HeadersIterator","qualname":"::offchain::http::HeadersIterator","value":"HeadersIterator {  }","parent":null,"children":[{"krate":0,"index":2495},{"krate":0,"index":2496}],"decl_id":null,"docs":" A custom iterator traversing all the headers.\n","sig":null,"attributes":[{"value":"/ A custom iterator traversing all the headers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92949,"byte_end":92998,"line_start":490,"line_end":490,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":93277,"byte_end":93281,"line_start":501,"line_end":501,"column_start":9,"column_end":13},"name":"next","qualname":"<HeadersIterator>::next","value":"pub fn next(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Move the iterator to the next position.","sig":null,"attributes":[{"value":"/ Move the iterator to the next position.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":93160,"byte_end":93203,"line_start":498,"line_end":498,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":93205,"byte_end":93208,"line_start":499,"line_end":499,"column_start":2,"column_end":5}},{"value":"/ Returns `true` is `current` has been set by this call.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":93210,"byte_end":93268,"line_start":500,"line_end":500,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":93534,"byte_end":93541,"line_start":510,"line_end":510,"column_start":9,"column_end":16},"name":"current","qualname":"<HeadersIterator>::current","value":"pub fn current(&Self) -> Option<(&str, &str)>","parent":null,"children":[],"decl_id":null,"docs":" Returns current element (if any).","sig":null,"attributes":[{"value":"/ Returns current element (if any).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":93422,"byte_end":93459,"line_start":507,"line_end":507,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":93461,"byte_end":93464,"line_start":508,"line_end":508,"column_start":2,"column_end":5}},{"value":"/ Note that you have to call `next` prior to calling this","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":93466,"byte_end":93525,"line_start":509,"line_end":509,"column_start":2,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":530},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::offchain::storage","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":537}],"decl_id":null,"docs":" A set of storage helpers for offchain workers.\n","sig":null,"attributes":[{"value":"/ A set of storage helpers for offchain workers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":96790,"byte_end":96840,"line_start":18,"line_end":18,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":532},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":96927,"byte_end":96939,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"StorageValue","qualname":"::offchain::storage::StorageValue","value":"StorageValueRef","parent":null,"children":[],"decl_id":null,"docs":" A storage value with a static key.\n","sig":null,"attributes":[{"value":"/ A storage value with a static key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":96879,"byte_end":96917,"line_start":22,"line_end":22,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":533},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97025,"byte_end":97040,"line_start":26,"line_end":26,"column_start":12,"column_end":27},"name":"StorageValueRef","qualname":"::offchain::storage::StorageValueRef","value":"StorageValueRef {  }","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" An abstraction over local storage value.\n","sig":null,"attributes":[{"value":"/ An abstraction over local storage value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":96969,"byte_end":97013,"line_start":25,"line_end":25,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97197,"byte_end":97207,"line_start":33,"line_end":33,"column_start":9,"column_end":19},"name":"persistent","qualname":"<StorageValueRef>::persistent","value":"pub fn persistent(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new reference to a value in the persistent local storage.\n","sig":null,"attributes":[{"value":"/ Create a new reference to a value in the persistent local storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97118,"byte_end":97188,"line_start":32,"line_end":32,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97363,"byte_end":97368,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"local","qualname":"<StorageValueRef>::local","value":"pub fn local(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new reference to a value in the fork-aware local storage.\n","sig":null,"attributes":[{"value":"/ Create a new reference to a value in the fork-aware local storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97284,"byte_end":97354,"line_start":37,"line_end":37,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97703,"byte_end":97706,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"set","qualname":"<StorageValueRef>::set","value":"pub fn set<impl codec::Encode: codec::Encode>(&Self, &impl codec::Encode)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the storage to encoding of given parameter.","sig":null,"attributes":[{"value":"/ Set the value of the storage to encoding of given parameter.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97440,"byte_end":97504,"line_start":42,"line_end":42,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97506,"byte_end":97509,"line_start":43,"line_end":43,"column_start":2,"column_end":5}},{"value":"/ Note that the storage may be accessed by workers running concurrently,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97511,"byte_end":97585,"line_start":44,"line_end":44,"column_start":2,"column_end":76}},{"value":"/ if you happen to write a `get-check-set` pattern you should most likely","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97587,"byte_end":97662,"line_start":45,"line_end":45,"column_start":2,"column_end":77}},{"value":"/ be using `mutate` instead.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97664,"byte_end":97694,"line_start":46,"line_end":46,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97906,"byte_end":97911,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"name":"clear","qualname":"<StorageValueRef>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the associated value from the storage.\n","sig":null,"attributes":[{"value":"/ Remove the associated value from the storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97848,"byte_end":97897,"line_start":53,"line_end":53,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98319,"byte_end":98322,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"name":"get","qualname":"<StorageValueRef>::get","value":"pub fn get<T: codec::Decode>(&Self) -> Option<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve & decode the value from storage.","sig":null,"attributes":[{"value":"/ Retrieve & decode the value from storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97990,"byte_end":98035,"line_start":58,"line_end":58,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98037,"byte_end":98040,"line_start":59,"line_end":59,"column_start":2,"column_end":5}},{"value":"/ Note that if you want to do some checks based on the value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98042,"byte_end":98104,"line_start":60,"line_end":60,"column_start":2,"column_end":64}},{"value":"/ and write changes after that you should rather be using `mutate`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98106,"byte_end":98175,"line_start":61,"line_end":61,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98177,"byte_end":98180,"line_start":62,"line_end":62,"column_start":2,"column_end":5}},{"value":"/ The function returns `None` if the value was not found in storage,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98182,"byte_end":98252,"line_start":63,"line_end":63,"column_start":2,"column_end":72}},{"value":"/ otherwise a decoding of the value to requested type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98254,"byte_end":98310,"line_start":64,"line_end":64,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98902,"byte_end":98908,"line_start":78,"line_end":78,"column_start":9,"column_end":15},"name":"mutate","qualname":"<StorageValueRef>::mutate","value":"pub fn mutate<T, E, F>(&Self, F) -> Result<Result<T, T>, E> where\nT: codec::Codec, F: FnOnce(Option<Option<T>>) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve & decode the value and set it to a new one atomically.","sig":null,"attributes":[{"value":"/ Retrieve & decode the value and set it to a new one atomically.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98476,"byte_end":98543,"line_start":70,"line_end":70,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98545,"byte_end":98548,"line_start":71,"line_end":71,"column_start":2,"column_end":5}},{"value":"/ Function `f` should return a new value that we should attempt to write to storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98550,"byte_end":98636,"line_start":72,"line_end":72,"column_start":2,"column_end":88}},{"value":"/ This function returns:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98638,"byte_end":98664,"line_start":73,"line_end":73,"column_start":2,"column_end":28}},{"value":"/ 1. `Ok(Ok(T))` in case the value has been successfully set.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98666,"byte_end":98729,"line_start":74,"line_end":74,"column_start":2,"column_end":65}},{"value":"/ 2. `Ok(Err(T))` in case the value was calculated by the passed closure `f`,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98731,"byte_end":98810,"line_start":75,"line_end":75,"column_start":2,"column_end":81}},{"value":"/    but it could not be stored.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98812,"byte_end":98846,"line_start":76,"line_end":76,"column_start":2,"column_end":36}},{"value":"/ 3. `Err(_)` in case `f` returns an error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":98848,"byte_end":98893,"line_start":77,"line_end":77,"column_start":2,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":554},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage_lock","qualname":"::offchain::storage_lock","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":4390},{"krate":0,"index":560},{"krate":0,"index":4392},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":2503},{"krate":0,"index":2510},{"krate":0,"index":2505},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":2520},{"krate":0,"index":2541},{"krate":0,"index":2535},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2524},{"krate":0,"index":2526},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":610},{"krate":0,"index":615},{"krate":0,"index":619},{"krate":0,"index":630},{"krate":0,"index":635},{"krate":0,"index":641},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":654}],"decl_id":null,"docs":" # Off-chain Storage Lock","sig":null,"attributes":[{"value":"/ # Off-chain Storage Lock","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":101528,"byte_end":101556,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":101557,"byte_end":101560,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ A storage-based lock with a defined expiry time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":101561,"byte_end":101613,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":101614,"byte_end":101617,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The lock is using Local Storage and allows synchronizing access to critical","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":101618,"byte_end":101697,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ section of your code for concurrently running Off-chain Workers. Usage of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":101698,"byte_end":101775,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ `PERSISTENT` variant of the storage persists the lock value across a full node","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":101776,"byte_end":101858,"line_start":24,"line_end":24,"column_start":1,"column_end":83}},{"value":"/ restart or re-orgs.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":101859,"byte_end":101882,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":101883,"byte_end":101886,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ A use case for the lock is to make sure that a particular section of the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":101887,"byte_end":101963,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ code is only run by one Off-chain Worker at a time. This may include","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":101964,"byte_end":102036,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ performing a side-effect (i.e. an HTTP call) or alteration of single or","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102037,"byte_end":102112,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ multiple Local Storage entries.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102113,"byte_end":102148,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102149,"byte_end":102152,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ One use case would be collective updates of multiple data items or append /","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102153,"byte_end":102232,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ remove of i.e. sets, vectors which are stored in the off-chain storage DB.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102233,"byte_end":102311,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102312,"byte_end":102315,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Example:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102316,"byte_end":102331,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102332,"byte_end":102335,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102336,"byte_end":102347,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use codec::{Decode, Encode, Codec};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102348,"byte_end":102389,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ // in your off-chain worker code","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102390,"byte_end":102426,"line_start":39,"line_end":39,"column_start":1,"column_end":37}},{"value":"/ use sp_runtime::offchain::{","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102427,"byte_end":102458,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/\t\tstorage::StorageValueRef,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102459,"byte_end":102489,"line_start":41,"line_end":41,"column_start":1,"column_end":31}},{"value":"/\t\tstorage_lock::{StorageLock, Time},","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102490,"byte_end":102529,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ };","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102530,"byte_end":102536,"line_start":43,"line_end":43,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102537,"byte_end":102540,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ fn append_to_in_storage_vec<'a, T>(key: &'a [u8], _: T) where T: Codec {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102541,"byte_end":102617,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/    // `access::lock` defines the storage entry which is used for","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102618,"byte_end":102686,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/    // persisting the lock in the underlying database.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102687,"byte_end":102744,"line_start":47,"line_end":47,"column_start":1,"column_end":58}},{"value":"/    // The entry name _must_ be unique and can be interpreted as a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102745,"byte_end":102814,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/    // unique mutex instance reference tag.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102815,"byte_end":102861,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/    let mut lock = StorageLock::<Time>::new(b\"access::lock\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102862,"byte_end":102926,"line_start":50,"line_end":50,"column_start":1,"column_end":65}},{"value":"/    {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102927,"byte_end":102935,"line_start":51,"line_end":51,"column_start":1,"column_end":9}},{"value":"/         let _guard = lock.lock();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102936,"byte_end":102973,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/         let acc = StorageValueRef::persistent(key);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":102974,"byte_end":103029,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/         let v: Vec<T> = acc.get::<Vec<T>>().unwrap().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":103030,"byte_end":103096,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/         // modify `v` as desired","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":103097,"byte_end":103133,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/         // i.e. perform some heavy computation with","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":103134,"byte_end":103189,"line_start":56,"line_end":56,"column_start":1,"column_end":56}},{"value":"/         // side effects that should only be done once.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":103190,"byte_end":103248,"line_start":57,"line_end":57,"column_start":1,"column_end":59}},{"value":"/         acc.set(&v);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":103249,"byte_end":103273,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/         // drop `_guard` implicitly at end of scope","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":103274,"byte_end":103329,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/    }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":103330,"byte_end":103338,"line_start":60,"line_end":60,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":103339,"byte_end":103344,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":103345,"byte_end":103352,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":569},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104251,"byte_end":104259,"line_start":84,"line_end":84,"column_start":11,"column_end":19},"name":"Lockable","qualname":"::offchain::storage_lock::Lockable","value":"Lockable: Sized","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"decl_id":null,"docs":" Lockable item for use with a persisted storage lock.","sig":null,"attributes":[{"value":"/ Lockable item for use with a persisted storage lock.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104065,"byte_end":104121,"line_start":80,"line_end":80,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104122,"byte_end":104125,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Bound for an item that has a stateful ordered meaning","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104126,"byte_end":104183,"line_start":82,"line_end":82,"column_start":1,"column_end":58}},{"value":"/ without explicitly requiring `Ord` trait in general.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104184,"byte_end":104240,"line_start":83,"line_end":83,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":570},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104329,"byte_end":104337,"line_start":86,"line_end":86,"column_start":7,"column_end":15},"name":"Deadline","qualname":"::offchain::storage_lock::Lockable::Deadline","value":"type Deadline: Sized + Codec + Clone;","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" An instant type specifying i.e. a point in time.\n","sig":null,"attributes":[{"value":"/ An instant type specifying i.e. a point in time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104270,"byte_end":104322,"line_start":85,"line_end":85,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104480,"byte_end":104488,"line_start":90,"line_end":90,"column_start":5,"column_end":13},"name":"deadline","qualname":"::offchain::storage_lock::Lockable::deadline","value":"pub fn deadline(&Self) -> Self::Deadline","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Calculate the deadline based on a current state\n such as time or block number and derives the deadline.\n","sig":null,"attributes":[{"value":"/ Calculate the deadline based on a current state","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104364,"byte_end":104415,"line_start":88,"line_end":88,"column_start":2,"column_end":53}},{"value":"/ such as time or block number and derives the deadline.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104417,"byte_end":104475,"line_start":89,"line_end":89,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104624,"byte_end":104635,"line_start":94,"line_end":94,"column_start":5,"column_end":16},"name":"has_expired","qualname":"::offchain::storage_lock::Lockable::has_expired","value":"pub fn has_expired(&Self::Deadline) -> bool","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Verify the deadline has not expired compared to the\n current state, i.e. time or block number.\n","sig":null,"attributes":[{"value":"/ Verify the deadline has not expired compared to the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104517,"byte_end":104572,"line_start":92,"line_end":92,"column_start":2,"column_end":57}},{"value":"/ current state, i.e. time or block number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104574,"byte_end":104619,"line_start":93,"line_end":93,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104852,"byte_end":104858,"line_start":100,"line_end":100,"column_start":5,"column_end":11},"name":"snooze","qualname":"::offchain::storage_lock::Lockable::snooze","value":"pub fn snooze(&Self::Deadline)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Snooze at least until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Snooze at least until `deadline` is reached.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104674,"byte_end":104722,"line_start":96,"line_end":96,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104724,"byte_end":104727,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ Note that `deadline` is only passed to allow optimizations","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104729,"byte_end":104791,"line_start":98,"line_end":98,"column_start":2,"column_end":64}},{"value":"/ for `Lockables` which have a time based component.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104793,"byte_end":104847,"line_start":99,"line_end":99,"column_start":2,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2503},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":105125,"byte_end":105129,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"Time","qualname":"::offchain::storage_lock::Time","value":"Time {  }","parent":null,"children":[{"krate":0,"index":2504}],"decl_id":null,"docs":" Lockable based on the current timestamp with a configurable expiration time.\n","sig":null,"attributes":[{"value":"/ Lockable based on the current timestamp with a configurable expiration time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":105007,"byte_end":105087,"line_start":107,"line_end":107,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":2520},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":106210,"byte_end":106230,"line_start":150,"line_end":150,"column_start":12,"column_end":32},"name":"BlockAndTimeDeadline","qualname":"::offchain::storage_lock::BlockAndTimeDeadline","value":"BlockAndTimeDeadline { block_number, timestamp }","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2523}],"decl_id":null,"docs":" A deadline based on block number and time.\n","sig":null,"attributes":[{"value":"/ A deadline based on block number and time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":106111,"byte_end":106157,"line_start":148,"line_end":148,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2522},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":106332,"byte_end":106344,"line_start":152,"line_end":152,"column_start":6,"column_end":18},"name":"block_number","qualname":"::offchain::storage_lock::BlockAndTimeDeadline::block_number","value":"<B as offchain::storage_lock::BlockNumberProvider>::BlockNumber","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":" The block number until which the lock is still valid _at least_.\n","sig":null,"attributes":[{"value":"/ The block number until which the lock is still valid _at least_.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":106258,"byte_end":106326,"line_start":151,"line_end":151,"column_start":2,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2523},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":106459,"byte_end":106468,"line_start":154,"line_end":154,"column_start":6,"column_end":15},"name":"timestamp","qualname":"::offchain::storage_lock::BlockAndTimeDeadline::timestamp","value":"sp_core::offchain::Timestamp","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":" The timestamp until which the lock is still valid _at least_.\n","sig":null,"attributes":[{"value":"/ The timestamp until which the lock is still valid _at least_.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":106388,"byte_end":106453,"line_start":153,"line_end":153,"column_start":2,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":590},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":107152,"byte_end":107164,"line_start":180,"line_end":180,"column_start":12,"column_end":24},"name":"BlockAndTime","qualname":"::offchain::storage_lock::BlockAndTime","value":"BlockAndTime {  }","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"decl_id":null,"docs":" Lockable based on block number and timestamp.","sig":null,"attributes":[{"value":"/ Lockable based on block number and timestamp.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":107011,"byte_end":107060,"line_start":176,"line_end":176,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":107061,"byte_end":107064,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Expiration is defined if both, block number _and_ timestamp","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":107065,"byte_end":107128,"line_start":178,"line_end":178,"column_start":1,"column_end":64}},{"value":"/ expire.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":107129,"byte_end":107140,"line_start":179,"line_end":179,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":610},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109313,"byte_end":109324,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"StorageLock","qualname":"::offchain::storage_lock::StorageLock","value":"StorageLock {  }","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" Storage based lock.","sig":null,"attributes":[{"value":"/ Storage based lock.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109051,"byte_end":109074,"line_start":241,"line_end":241,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109075,"byte_end":109078,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ A lock that is persisted in the DB and provides the ability to guard against","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109079,"byte_end":109159,"line_start":243,"line_end":243,"column_start":1,"column_end":81}},{"value":"/ concurrent access in an off-chain worker, with a defined expiry deadline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109160,"byte_end":109236,"line_start":244,"line_end":244,"column_start":1,"column_end":77}},{"value":"/ based on the concrete [`Lockable`](Lockable) implementation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109237,"byte_end":109301,"line_start":245,"line_end":245,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109598,"byte_end":109601,"line_start":254,"line_end":254,"column_start":9,"column_end":12},"name":"new","qualname":"<StorageLock>::new","value":"pub fn new(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new storage lock with a `default()` instance of type `L`.\n","sig":null,"attributes":[{"value":"/ Create a new storage lock with a `default()` instance of type `L`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109519,"byte_end":109589,"line_start":253,"line_end":253,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109807,"byte_end":109820,"line_start":261,"line_end":261,"column_start":9,"column_end":22},"name":"with_lockable","qualname":"<StorageLock>::with_lockable","value":"pub fn with_lockable(&'a [u8], L) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new storage lock with an explicit instance of a lockable `L`.\n","sig":null,"attributes":[{"value":"/ Create a new storage lock with an explicit instance of a lockable `L`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109724,"byte_end":109798,"line_start":260,"line_end":260,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":111602,"byte_end":111610,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"try_lock","qualname":"<StorageLock>::try_lock","value":"pub fn try_lock(&mut Self)\n-> Result<StorageLockGuard, <L as Lockable>::Deadline>","parent":null,"children":[],"decl_id":null,"docs":" A single attempt to lock using the storage entry.","sig":null,"attributes":[{"value":"/ A single attempt to lock using the storage entry.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":111341,"byte_end":111394,"line_start":314,"line_end":314,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":111396,"byte_end":111399,"line_start":315,"line_end":315,"column_start":2,"column_end":5}},{"value":"/ Returns a lock guard on success, otherwise an error containing the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":111401,"byte_end":111471,"line_start":316,"line_end":316,"column_start":2,"column_end":72}},{"value":"/ `<Self::Lockable>::Deadline` in for the currently active lock","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":111473,"byte_end":111538,"line_start":317,"line_end":317,"column_start":2,"column_end":67}},{"value":"/ by another task `Err(<L as Lockable>::Deadline)`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":111540,"byte_end":111593,"line_start":318,"line_end":318,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112144,"byte_end":112148,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"name":"lock","qualname":"<StorageLock>::lock","value":"pub fn lock(&mut Self) -> StorageLockGuard","parent":null,"children":[],"decl_id":null,"docs":" Repeated lock attempts until the lock is successfully acquired.","sig":null,"attributes":[{"value":"/ Repeated lock attempts until the lock is successfully acquired.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":111799,"byte_end":111866,"line_start":324,"line_end":324,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":111868,"byte_end":111871,"line_start":325,"line_end":325,"column_start":2,"column_end":5}},{"value":"/ If one uses `fn forget(..)`, it is highly likely `fn try_lock(..)`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":111873,"byte_end":111943,"line_start":326,"line_end":326,"column_start":2,"column_end":72}},{"value":"/ is the correct API to use instead of `fn lock(..)`, since that might","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":111945,"byte_end":112017,"line_start":327,"line_end":327,"column_start":2,"column_end":74}},{"value":"/ never unlock in the anticipated span i.e. when used with `BlockAndTime`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112019,"byte_end":112094,"line_start":328,"line_end":328,"column_start":2,"column_end":77}},{"value":"/ during a certain block number span.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112096,"byte_end":112135,"line_start":329,"line_end":329,"column_start":2,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112488,"byte_end":112504,"line_start":344,"line_end":344,"column_start":12,"column_end":28},"name":"StorageLockGuard","qualname":"::offchain::storage_lock::StorageLockGuard","value":"StorageLockGuard {  }","parent":null,"children":[{"krate":0,"index":634}],"decl_id":null,"docs":" RAII style guard for a lock.\n","sig":null,"attributes":[{"value":"/ RAII style guard for a lock.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112444,"byte_end":112476,"line_start":343,"line_end":343,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112991,"byte_end":112997,"line_start":356,"line_end":356,"column_start":9,"column_end":15},"name":"forget","qualname":"<StorageLockGuard>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Consume the guard but **do not** unlock the underlying lock.","sig":null,"attributes":[{"value":"/ Consume the guard but **do not** unlock the underlying lock.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112631,"byte_end":112695,"line_start":349,"line_end":349,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112697,"byte_end":112700,"line_start":350,"line_end":350,"column_start":2,"column_end":5}},{"value":"/ Can be used to implement a grace period after doing some","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112702,"byte_end":112762,"line_start":351,"line_end":351,"column_start":2,"column_end":62}},{"value":"/ heavy computations and sending a transaction to be included","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112764,"byte_end":112827,"line_start":352,"line_end":352,"column_start":2,"column_end":65}},{"value":"/ on-chain. By forgetting the lock, it will stay locked until","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112829,"byte_end":112892,"line_start":353,"line_end":353,"column_start":2,"column_end":65}},{"value":"/ its expiration deadline is reached while the off-chain worker","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112894,"byte_end":112959,"line_start":354,"line_end":354,"column_start":2,"column_end":67}},{"value":"/ can already exit.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112961,"byte_end":112982,"line_start":355,"line_end":355,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113290,"byte_end":113301,"line_start":365,"line_end":365,"column_start":9,"column_end":20},"name":"extend_lock","qualname":"<StorageLockGuard>::extend_lock","value":"pub fn extend_lock(&mut Self) -> Result<<L as Lockable>::Deadline, ()>","parent":null,"children":[],"decl_id":null,"docs":" Extend the lock by guard deadline if it already exists.","sig":null,"attributes":[{"value":"/ Extend the lock by guard deadline if it already exists.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113043,"byte_end":113102,"line_start":360,"line_end":360,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113104,"byte_end":113107,"line_start":361,"line_end":361,"column_start":2,"column_end":5}},{"value":"/ i.e. large sets of items for which it is hard to calculate a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113109,"byte_end":113173,"line_start":362,"line_end":362,"column_start":2,"column_end":66}},{"value":"/ meaning full conservative deadline which does not block for a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113175,"byte_end":113240,"line_start":363,"line_end":363,"column_start":2,"column_end":67}},{"value":"/ very long time on node termination.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113242,"byte_end":113281,"line_start":364,"line_end":364,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113749,"byte_end":113762,"line_start":385,"line_end":385,"column_start":9,"column_end":22},"name":"with_deadline","qualname":"<StorageLock>::with_deadline","value":"pub fn with_deadline(&'a [u8], Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Explicitly create a time based storage lock with a non-default\n expiration timeout.\n","sig":null,"attributes":[{"value":"/ Explicitly create a time based storage lock with a non-default","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113649,"byte_end":113715,"line_start":383,"line_end":383,"column_start":2,"column_end":68}},{"value":"/ expiration timeout.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113717,"byte_end":113740,"line_start":384,"line_end":384,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":114185,"byte_end":114213,"line_start":401,"line_end":401,"column_start":9,"column_end":37},"name":"with_block_and_time_deadline","qualname":"<StorageLock>::with_block_and_time_deadline","value":"pub fn with_block_and_time_deadline(&'a [u8], u32, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Explicitly create a time and block number based storage lock with\n a non-default expiration duration and block number offset.\n","sig":null,"attributes":[{"value":"/ Explicitly create a time and block number based storage lock with","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":114043,"byte_end":114112,"line_start":399,"line_end":399,"column_start":2,"column_end":71}},{"value":"/ a non-default expiration duration and block number offset.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":114114,"byte_end":114176,"line_start":400,"line_end":400,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":114684,"byte_end":114703,"line_start":418,"line_end":418,"column_start":9,"column_end":28},"name":"with_block_deadline","qualname":"<StorageLock>::with_block_deadline","value":"pub fn with_block_deadline(&'a [u8], u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Explicitly create a time and block number based storage lock with\n the default expiration duration and a non-default block number offset.\n","sig":null,"attributes":[{"value":"/ Explicitly create a time and block number based storage lock with","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":114530,"byte_end":114599,"line_start":416,"line_end":416,"column_start":2,"column_end":71}},{"value":"/ the default expiration duration and a non-default block number offset.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":114601,"byte_end":114675,"line_start":417,"line_end":417,"column_start":2,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":654},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115131,"byte_end":115150,"line_start":432,"line_end":432,"column_start":11,"column_end":30},"name":"BlockNumberProvider","qualname":"::offchain::storage_lock::BlockNumberProvider","value":"BlockNumberProvider","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656}],"decl_id":null,"docs":" Bound for a block number source\n used with [`BlockAndTime<BlockNumberProvider>`](BlockAndTime).\n","sig":null,"attributes":[{"value":"/ Bound for a block number source","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115018,"byte_end":115053,"line_start":430,"line_end":430,"column_start":1,"column_end":36}},{"value":"/ used with [`BlockAndTime<BlockNumberProvider>`](BlockAndTime).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115054,"byte_end":115120,"line_start":431,"line_end":431,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":655},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115198,"byte_end":115209,"line_start":434,"line_end":434,"column_start":7,"column_end":18},"name":"BlockNumber","qualname":"::offchain::storage_lock::BlockNumberProvider::BlockNumber","value":"type BlockNumber: Codec + Clone + Ord + Eq + AtLeast32BitUnsigned;","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Type of `BlockNumber` to provide.\n","sig":null,"attributes":[{"value":"/ Type of `BlockNumber` to provide.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115154,"byte_end":115191,"line_start":433,"line_end":433,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115699,"byte_end":115719,"line_start":450,"line_end":450,"column_start":5,"column_end":25},"name":"current_block_number","qualname":"::offchain::storage_lock::BlockNumberProvider::current_block_number","value":"pub fn current_block_number() -> Self::BlockNumber","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Returns the current block number.","sig":null,"attributes":[{"value":"/ Returns the current block number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115261,"byte_end":115298,"line_start":435,"line_end":435,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115300,"byte_end":115303,"line_start":436,"line_end":436,"column_start":2,"column_end":5}},{"value":"/ Provides an abstraction over an arbitrary way of providing the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115305,"byte_end":115371,"line_start":437,"line_end":437,"column_start":2,"column_end":68}},{"value":"/ current block number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115373,"byte_end":115398,"line_start":438,"line_end":438,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115400,"byte_end":115403,"line_start":439,"line_end":439,"column_start":2,"column_end":5}},{"value":"/ In case of using crate `sp_runtime` without the crate `frame`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115405,"byte_end":115470,"line_start":440,"line_end":440,"column_start":2,"column_end":67}},{"value":"/ system, it is already implemented for","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115472,"byte_end":115513,"line_start":441,"line_end":441,"column_start":2,"column_end":43}},{"value":"/ `frame_system::Module<T: Config>` as:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115515,"byte_end":115556,"line_start":442,"line_end":442,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115558,"byte_end":115561,"line_start":443,"line_end":443,"column_start":2,"column_end":5}},{"value":"/ ```ignore","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115563,"byte_end":115576,"line_start":444,"line_end":444,"column_start":2,"column_end":15}},{"value":"/ fn current_block_number() -> Self {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115578,"byte_end":115617,"line_start":445,"line_end":445,"column_start":2,"column_end":41}},{"value":"/     frame_system::Module<Config>::block_number()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115619,"byte_end":115671,"line_start":446,"line_end":446,"column_start":2,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115673,"byte_end":115678,"line_start":447,"line_end":447,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115680,"byte_end":115687,"line_start":448,"line_end":448,"column_start":2,"column_end":9}},{"value":"/ .","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":115689,"byte_end":115694,"line_start":449,"line_end":449,"column_start":2,"column_end":7}}]},{"kind":"Mod","id":{"krate":0,"index":658},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"testing","qualname":"::testing","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":4408},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":4412},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":4420},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":4428},{"krate":0,"index":674},{"krate":0,"index":4430},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":4438},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":4454},{"krate":0,"index":689},{"krate":0,"index":4456},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":4460},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":4466},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":4472},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":2549},{"krate":0,"index":2614},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2605},{"krate":0,"index":2595},{"krate":0,"index":2590},{"krate":0,"index":2588},{"krate":0,"index":2585},{"krate":0,"index":2579},{"krate":0,"index":2560},{"krate":0,"index":2554},{"krate":0,"index":2552},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":2616},{"krate":0,"index":717},{"krate":0,"index":722},{"krate":0,"index":735},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":2620},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2663},{"krate":0,"index":2661},{"krate":0,"index":2658},{"krate":0,"index":2652},{"krate":0,"index":2635},{"krate":0,"index":2629},{"krate":0,"index":2624},{"krate":0,"index":747},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":2672},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":2703},{"krate":0,"index":2705},{"krate":0,"index":2700},{"krate":0,"index":2697},{"krate":0,"index":2685},{"krate":0,"index":2679},{"krate":0,"index":2676},{"krate":0,"index":756},{"krate":0,"index":761},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":2714},{"krate":0,"index":2753},{"krate":0,"index":2755},{"krate":0,"index":2748},{"krate":0,"index":2750},{"krate":0,"index":2745},{"krate":0,"index":2738},{"krate":0,"index":2735},{"krate":0,"index":2727},{"krate":0,"index":2721},{"krate":0,"index":2718},{"krate":0,"index":773},{"krate":0,"index":783},{"krate":0,"index":2759},{"krate":0,"index":2792},{"krate":0,"index":2795},{"krate":0,"index":2785},{"krate":0,"index":2788},{"krate":0,"index":2781},{"krate":0,"index":2771},{"krate":0,"index":2764},{"krate":0,"index":789},{"krate":0,"index":2800},{"krate":0,"index":793},{"krate":0,"index":799},{"krate":0,"index":803},{"krate":0,"index":809},{"krate":0,"index":816}],"decl_id":null,"docs":" Testing utilities.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1419,"byte_end":1442,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/ Testing utilities.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":120432,"byte_end":120454,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2549},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121535,"byte_end":121550,"line_start":40,"line_end":40,"column_start":12,"column_end":27},"name":"UintAuthorityId","qualname":"::testing::UintAuthorityId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A dummy type which can be used instead of regular cryptographic primitives.","sig":null,"attributes":[{"value":"/ A dummy type which can be used instead of regular cryptographic primitives.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121107,"byte_end":121186,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121187,"byte_end":121190,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ 1. Wraps a `u64` `AccountId` and is able to `IdentifyAccount`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121191,"byte_end":121257,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/ 2. Can be converted to any `Public` key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121258,"byte_end":121302,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/ 3. Implements `RuntimeAppPublic` so it can be used instead of regular application-specific","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121303,"byte_end":121397,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/    crypto.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121398,"byte_end":121412,"line_start":38,"line_end":38,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2551},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121551,"byte_end":121558,"line_start":40,"line_end":40,"column_start":28,"column_end":35},"name":"0","qualname":"::testing::UintAuthorityId::0","value":"u64","parent":{"krate":0,"index":2549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121825,"byte_end":121838,"line_start":56,"line_end":56,"column_start":9,"column_end":22},"name":"to_public_key","qualname":"<UintAuthorityId>::to_public_key","value":"pub fn to_public_key<T: Public>(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Convert this authority id into a public key.\n","sig":null,"attributes":[{"value":"/ Convert this authority id into a public key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121768,"byte_end":121816,"line_start":55,"line_end":55,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":122604,"byte_end":122616,"line_start":83,"line_end":83,"column_start":9,"column_end":21},"name":"set_all_keys","qualname":"<UintAuthorityId>::set_all_keys","value":"pub fn set_all_keys<T: Into<UintAuthorityId>,\n                    impl IntoIterator<Item = T>: IntoIterator<Item =\n                    T>>(impl IntoIterator<Item = T>)","parent":null,"children":[],"decl_id":null,"docs":" Set the list of keys returned by the runtime call for all keys of that type.\n","sig":null,"attributes":[{"value":"/ Set the list of keys returned by the runtime call for all keys of that type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":122515,"byte_end":122595,"line_start":82,"line_end":82,"column_start":2,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2620},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124191,"byte_end":124204,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"TestSignature","qualname":"::testing::TestSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A dummy signature type, to match `UintAuthorityId`.\n","sig":null,"attributes":[{"value":"/ A dummy signature type, to match `UintAuthorityId`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124039,"byte_end":124094,"line_start":144,"line_end":144,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2622},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124205,"byte_end":124212,"line_start":146,"line_end":146,"column_start":26,"column_end":33},"name":"0","qualname":"::testing::TestSignature::0","value":"u64","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2623},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124214,"byte_end":124225,"line_start":146,"line_end":146,"column_start":35,"column_end":46},"name":"1","qualname":"::testing::TestSignature::1","value":"sp_application_crypto::Vec<u8>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":751},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124458,"byte_end":124468,"line_start":157,"line_end":157,"column_start":10,"column_end":20},"name":"DigestItem","qualname":"::testing::DigestItem","value":"generic::DigestItem<H256>","parent":null,"children":[],"decl_id":null,"docs":" Digest item\n","sig":null,"attributes":[{"value":"/ Digest item","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124433,"byte_end":124448,"line_start":156,"line_end":156,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":752},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124526,"byte_end":124532,"line_start":160,"line_end":160,"column_start":10,"column_end":16},"name":"Digest","qualname":"::testing::Digest","value":"generic::Digest<H256>","parent":null,"children":[],"decl_id":null,"docs":" Header Digest\n","sig":null,"attributes":[{"value":"/ Header Digest","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124499,"byte_end":124516,"line_start":159,"line_end":159,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":753},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124585,"byte_end":124591,"line_start":163,"line_end":163,"column_start":10,"column_end":16},"name":"Header","qualname":"::testing::Header","value":"generic::Header<u64, BlakeTwo256>","parent":null,"children":[],"decl_id":null,"docs":" Block Header\n","sig":null,"attributes":[{"value":"/ Block Header","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124559,"byte_end":124575,"line_start":162,"line_end":162,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124731,"byte_end":124746,"line_start":167,"line_end":167,"column_start":9,"column_end":24},"name":"new_from_number","qualname":"<Header>::new_from_number","value":"pub fn new_from_number(<Self as traits::Header>::Number) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new header with the given number and default hash for all other fields.\n","sig":null,"attributes":[{"value":"/ A new header with the given number and default hash for all other fields.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124645,"byte_end":124722,"line_start":166,"line_end":166,"column_start":2,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2672},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125106,"byte_end":125122,"line_start":180,"line_end":180,"column_start":12,"column_end":28},"name":"ExtrinsicWrapper","qualname":"::testing::ExtrinsicWrapper","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque extrinsic wrapper type.\n","sig":null,"attributes":[{"value":"/ An opaque extrinsic wrapper type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124971,"byte_end":125008,"line_start":178,"line_end":178,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2714},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125881,"byte_end":125886,"line_start":215,"line_end":215,"column_start":12,"column_end":17},"name":"Block","qualname":"::testing::Block","value":"Block { header, extrinsics }","parent":null,"children":[{"krate":0,"index":2716},{"krate":0,"index":2717}],"decl_id":null,"docs":" Testing block\n","sig":null,"attributes":[{"value":"/ Testing block","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125755,"byte_end":125772,"line_start":213,"line_end":213,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2716},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125916,"byte_end":125922,"line_start":217,"line_end":217,"column_start":6,"column_end":12},"name":"header","qualname":"::testing::Block::header","value":"generic::header::Header<u64, traits::BlakeTwo256>","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":" Block header\n","sig":null,"attributes":[{"value":"/ Block header","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125894,"byte_end":125910,"line_start":216,"line_end":216,"column_start":2,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2717},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125961,"byte_end":125971,"line_start":219,"line_end":219,"column_start":6,"column_end":16},"name":"extrinsics","qualname":"::testing::Block::extrinsics","value":"sp_application_crypto::Vec<Xt>","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":" List of extrinsics\n","sig":null,"attributes":[{"value":"/ List of extrinsics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125933,"byte_end":125955,"line_start":218,"line_end":218,"column_start":2,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2759},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127214,"byte_end":127220,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"TestXt","qualname":"::testing::TestXt","value":"TestXt { signature, call }","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2763}],"decl_id":null,"docs":" Test transaction, tuple of (sender, call, signed_extra)\n with index only used if sender is some.","sig":null,"attributes":[{"value":"/ Test transaction, tuple of (sender, call, signed_extra)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":126968,"byte_end":127027,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/ with index only used if sender is some.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127028,"byte_end":127071,"line_start":255,"line_end":255,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127072,"byte_end":127075,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ If sender is some then the transaction is signed otherwise it is unsigned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127076,"byte_end":127154,"line_start":257,"line_end":257,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":2762},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127274,"byte_end":127283,"line_start":261,"line_end":261,"column_start":6,"column_end":15},"name":"signature","qualname":"::testing::TestXt::signature","value":"std::option::Option<(u64, Extra)>","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" Signature of the extrinsic.\n","sig":null,"attributes":[{"value":"/ Signature of the extrinsic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127237,"byte_end":127268,"line_start":260,"line_end":260,"column_start":2,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2763},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127340,"byte_end":127344,"line_start":263,"line_end":263,"column_start":6,"column_end":10},"name":"call","qualname":"::testing::TestXt::call","value":"Call","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" Call of the extrinsic.\n","sig":null,"attributes":[{"value":"/ Call of the extrinsic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127308,"byte_end":127334,"line_start":262,"line_end":262,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127431,"byte_end":127434,"line_start":268,"line_end":268,"column_start":9,"column_end":12},"name":"new","qualname":"<TestXt<Call, Extra>>::new","value":"pub fn new(Call, Option<(u64, Extra)>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TextXt`.\n","sig":null,"attributes":[{"value":"/ Create a new `TextXt`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127396,"byte_end":127422,"line_start":267,"line_end":267,"column_start":2,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":825},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":4484},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":4490},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":4498},{"krate":0,"index":839},{"krate":0,"index":4500},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":4514},{"krate":0,"index":849},{"krate":0,"index":4516},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":901},{"krate":0,"index":905},{"krate":0,"index":909},{"krate":0,"index":913},{"krate":0,"index":917},{"krate":0,"index":2806},{"krate":0,"index":2815},{"krate":0,"index":2810},{"krate":0,"index":2808},{"krate":0,"index":924},{"krate":0,"index":2821},{"krate":0,"index":2834},{"krate":0,"index":2828},{"krate":0,"index":2826},{"krate":0,"index":926},{"krate":0,"index":2840},{"krate":0,"index":2849},{"krate":0,"index":2844},{"krate":0,"index":2842},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":936},{"krate":0,"index":2855},{"krate":0,"index":2859},{"krate":0,"index":941},{"krate":0,"index":947},{"krate":0,"index":952},{"krate":0,"index":957},{"krate":0,"index":964},{"krate":0,"index":972},{"krate":0,"index":976},{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":987},{"krate":0,"index":991},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":2862},{"krate":0,"index":2867},{"krate":0,"index":2872},{"krate":0,"index":2877},{"krate":0,"index":2882},{"krate":0,"index":2887},{"krate":0,"index":2892},{"krate":0,"index":2897},{"krate":0,"index":2902},{"krate":0,"index":2907},{"krate":0,"index":2912},{"krate":0,"index":2917},{"krate":0,"index":2922},{"krate":0,"index":2927},{"krate":0,"index":2932},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":2937},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2962},{"krate":0,"index":2960},{"krate":0,"index":2954},{"krate":0,"index":2939},{"krate":0,"index":1022},{"krate":0,"index":1027},{"krate":0,"index":2970},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2995},{"krate":0,"index":2993},{"krate":0,"index":2987},{"krate":0,"index":2972},{"krate":0,"index":1031},{"krate":0,"index":1036},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1070},{"krate":0,"index":1080},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1108},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1124},{"krate":0,"index":3021},{"krate":0,"index":3037},{"krate":0,"index":3054},{"krate":0,"index":3072},{"krate":0,"index":3091},{"krate":0,"index":3111},{"krate":0,"index":3132},{"krate":0,"index":3154},{"krate":0,"index":3177},{"krate":0,"index":3201},{"krate":0,"index":3226},{"krate":0,"index":3252},{"krate":0,"index":1139},{"krate":0,"index":1146},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1161},{"krate":0,"index":1168},{"krate":0,"index":1173},{"krate":0,"index":1177},{"krate":0,"index":1182},{"krate":0,"index":1186},{"krate":0,"index":1189},{"krate":0,"index":1193},{"krate":0,"index":1202},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3286},{"krate":0,"index":3291},{"krate":0,"index":3297},{"krate":0,"index":3304},{"krate":0,"index":3312},{"krate":0,"index":3321},{"krate":0,"index":3331},{"krate":0,"index":3342},{"krate":0,"index":3354},{"krate":0,"index":3367},{"krate":0,"index":1235}],"decl_id":null,"docs":" Primitives for the runtime modules.\n","sig":null,"attributes":[{"value":"/ Primitives for the runtime modules.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":130705,"byte_end":130744,"line_start":18,"line_end":18,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":879},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131715,"byte_end":131719,"line_start":46,"line_end":46,"column_start":11,"column_end":15},"name":"Lazy","qualname":"::traits::Lazy","value":"Lazy<T: ?Sized>","parent":null,"children":[{"krate":0,"index":881}],"decl_id":null,"docs":" A lazy value.\n","sig":null,"attributes":[{"value":"/ A lazy value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131687,"byte_end":131704,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131868,"byte_end":131871,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"get","qualname":"::traits::Lazy::get","value":"pub fn get(&mut Self) -> &T","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":" Get a reference to the underlying value.","sig":null,"attributes":[{"value":"/ Get a reference to the underlying value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131734,"byte_end":131778,"line_start":47,"line_end":47,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131780,"byte_end":131783,"line_start":48,"line_end":48,"column_start":2,"column_end":5}},{"value":"/ This will compute the value if the function is invoked for the first time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131785,"byte_end":131863,"line_start":49,"line_end":49,"column_start":2,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":885},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132119,"byte_end":132134,"line_start":59,"line_end":59,"column_start":11,"column_end":26},"name":"IdentifyAccount","qualname":"::traits::IdentifyAccount","value":"IdentifyAccount","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887}],"decl_id":null,"docs":" Some type that is able to be collapsed into an account ID. It is not possible to recreate the\n original value from the account ID.\n","sig":null,"attributes":[{"value":"/ Some type that is able to be collapsed into an account ID. It is not possible to recreate the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":131971,"byte_end":132068,"line_start":57,"line_end":57,"column_start":1,"column_end":98}},{"value":"/ original value from the account ID.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132069,"byte_end":132108,"line_start":58,"line_end":58,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":886},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132198,"byte_end":132207,"line_start":61,"line_end":61,"column_start":7,"column_end":16},"name":"AccountId","qualname":"::traits::IdentifyAccount::AccountId","value":"type AccountId;","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" The account ID that this can be transformed into.\n","sig":null,"attributes":[{"value":"/ The account ID that this can be transformed into.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132138,"byte_end":132191,"line_start":60,"line_end":60,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132245,"byte_end":132257,"line_start":63,"line_end":63,"column_start":5,"column_end":17},"name":"into_account","qualname":"::traits::IdentifyAccount::into_account","value":"pub fn into_account(Self) -> Self::AccountId","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" Transform into an account.\n","sig":null,"attributes":[{"value":"/ Transform into an account.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132210,"byte_end":132240,"line_start":62,"line_end":62,"column_start":2,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":897},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132689,"byte_end":132695,"line_start":82,"line_end":82,"column_start":11,"column_end":17},"name":"Verify","qualname":"::traits::Verify","value":"Verify","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"decl_id":null,"docs":" Means of signature verification.\n","sig":null,"attributes":[{"value":"/ Means of signature verification.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132642,"byte_end":132678,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":898},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132729,"byte_end":132735,"line_start":84,"line_end":84,"column_start":7,"column_end":13},"name":"Signer","qualname":"::traits::Verify::Signer","value":"type Signer: IdentifyAccount;","parent":{"krate":0,"index":897},"children":[],"decl_id":null,"docs":" Type of the signer.\n","sig":null,"attributes":[{"value":"/ Type of the signer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132699,"byte_end":132722,"line_start":83,"line_end":83,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132844,"byte_end":132850,"line_start":88,"line_end":88,"column_start":5,"column_end":11},"name":"verify","qualname":"::traits::Verify::verify","value":"pub fn verify<L: Lazy<[u8]>>(&Self, L,\n                             &<Self::Signer as IdentifyAccount>::AccountId)\n-> bool","parent":{"krate":0,"index":897},"children":[],"decl_id":null,"docs":" Verify a signature.","sig":null,"attributes":[{"value":"/ Verify a signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132755,"byte_end":132778,"line_start":85,"line_end":85,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132780,"byte_end":132783,"line_start":86,"line_end":86,"column_start":2,"column_end":5}},{"value":"/ Return `true` if signature is valid for the value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132785,"byte_end":132839,"line_start":87,"line_end":87,"column_start":2,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":913},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":133875,"byte_end":133884,"line_start":121,"line_end":121,"column_start":11,"column_end":20},"name":"AppVerify","qualname":"::traits::AppVerify","value":"AppVerify","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915}],"decl_id":null,"docs":" Means of signature verification of an application key.\n","sig":null,"attributes":[{"value":"/ Means of signature verification of an application key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":133806,"byte_end":133864,"line_start":120,"line_end":120,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":914},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":133918,"byte_end":133927,"line_start":123,"line_end":123,"column_start":7,"column_end":16},"name":"AccountId","qualname":"::traits::AppVerify::AccountId","value":"type AccountId;","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Type of the signer.\n","sig":null,"attributes":[{"value":"/ Type of the signer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":133888,"byte_end":133911,"line_start":122,"line_end":122,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":134009,"byte_end":134015,"line_start":125,"line_end":125,"column_start":5,"column_end":11},"name":"verify","qualname":"::traits::AppVerify::verify","value":"pub fn verify<L: Lazy<[u8]>>(&Self, L, &Self::AccountId) -> bool","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Verify a signature. Return `true` if signature is valid for the value.\n","sig":null,"attributes":[{"value":"/ Verify a signature. Return `true` if signature is valid for the value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":133930,"byte_end":134004,"line_start":124,"line_end":124,"column_start":2,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2806},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":135082,"byte_end":135091,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"BadOrigin","qualname":"::traits::BadOrigin","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type that indicates that the origin is invalid.\n","sig":null,"attributes":[{"value":"/ An error type that indicates that the origin is invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":134970,"byte_end":135030,"line_start":146,"line_end":146,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2822},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":135414,"byte_end":135425,"line_start":160,"line_end":160,"column_start":2,"column_end":13},"name":"NoProviders","qualname":"::traits::StoredMapError::NoProviders","value":"StoredMapError::NoProviders","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Attempt to create map value when it is a consumer and there are no providers in place.\n","sig":null,"attributes":[{"value":"/ Attempt to create map value when it is a consumer and there are no providers in place.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":135322,"byte_end":135412,"line_start":159,"line_end":159,"column_start":2,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2824},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":135544,"byte_end":135561,"line_start":163,"line_end":163,"column_start":2,"column_end":19},"name":"ConsumerRemaining","qualname":"::traits::StoredMapError::ConsumerRemaining","value":"StoredMapError::ConsumerRemaining","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Attempt to anull/remove value when it is the last provider and there is still at\n least one consumer left.\n","sig":null,"attributes":[{"value":"/ Attempt to anull/remove value when it is the last provider and there is still at","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":135428,"byte_end":135512,"line_start":161,"line_end":161,"column_start":2,"column_end":86}},{"value":"/ least one consumer left.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":135514,"byte_end":135542,"line_start":162,"line_end":162,"column_start":2,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2821},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":135304,"byte_end":135318,"line_start":158,"line_end":158,"column_start":10,"column_end":24},"name":"StoredMapError","qualname":"::traits::StoredMapError","value":"pub enum StoredMapError {\n\n    /// Attempt to create map value when it is a consumer and there are no providers in place.\n    NoProviders,\n\n    /// Attempt to anull/remove value when it is the last provider and there is still at\n    /// least one consumer left.\n    ConsumerRemaining,\n}","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":2824}],"decl_id":null,"docs":" Error that can be returned by our impl of `StoredMap`.\n","sig":null,"attributes":[{"value":"/ Error that can be returned by our impl of `StoredMap`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":135196,"byte_end":135254,"line_start":156,"line_end":156,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2840},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":135892,"byte_end":135903,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"LookupError","qualname":"::traits::LookupError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that indicates that a lookup failed.\n","sig":null,"attributes":[{"value":"/ An error that indicates that a lookup failed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":135791,"byte_end":135840,"line_start":175,"line_end":175,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":932},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136249,"byte_end":136255,"line_start":192,"line_end":192,"column_start":11,"column_end":17},"name":"Lookup","qualname":"::traits::Lookup","value":"Lookup","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935}],"decl_id":null,"docs":" Means of changing one type into another in a manner dependent on the source type.\n","sig":null,"attributes":[{"value":"/ Means of changing one type into another in a manner dependent on the source type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136153,"byte_end":136238,"line_start":191,"line_end":191,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":933},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136290,"byte_end":136296,"line_start":194,"line_end":194,"column_start":7,"column_end":13},"name":"Source","qualname":"::traits::Lookup::Source","value":"type Source;","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Type to lookup from.\n","sig":null,"attributes":[{"value":"/ Type to lookup from.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136259,"byte_end":136283,"line_start":193,"line_end":193,"column_start":2,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":934},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136330,"byte_end":136336,"line_start":196,"line_end":196,"column_start":7,"column_end":13},"name":"Target","qualname":"::traits::Lookup::Target","value":"type Target;","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Type to lookup into.\n","sig":null,"attributes":[{"value":"/ Type to lookup into.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136299,"byte_end":136323,"line_start":195,"line_end":195,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136365,"byte_end":136371,"line_start":198,"line_end":198,"column_start":5,"column_end":11},"name":"lookup","qualname":"::traits::Lookup::lookup","value":"pub fn lookup(&Self, Self::Source) -> Result<Self::Target, LookupError>","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Attempt a lookup.\n","sig":null,"attributes":[{"value":"/ Attempt a lookup.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136339,"byte_end":136360,"line_start":197,"line_end":197,"column_start":2,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":936},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136632,"byte_end":136644,"line_start":204,"line_end":204,"column_start":11,"column_end":23},"name":"StaticLookup","qualname":"::traits::StaticLookup","value":"StaticLookup","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940}],"decl_id":null,"docs":" Means of changing one type into another in a manner dependent on the source type.\n This variant is different to `Lookup` in that it doesn't (can cannot) require any\n context.\n","sig":null,"attributes":[{"value":"/ Means of changing one type into another in a manner dependent on the source type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136437,"byte_end":136522,"line_start":201,"line_end":201,"column_start":1,"column_end":86}},{"value":"/ This variant is different to `Lookup` in that it doesn't (can cannot) require any","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136523,"byte_end":136608,"line_start":202,"line_end":202,"column_start":1,"column_end":86}},{"value":"/ context.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136609,"byte_end":136621,"line_start":203,"line_end":203,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":937},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136679,"byte_end":136685,"line_start":206,"line_end":206,"column_start":7,"column_end":13},"name":"Source","qualname":"::traits::StaticLookup::Source","value":"type Source: Codec + Clone + PartialEq + Debug;","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Type to lookup from.\n","sig":null,"attributes":[{"value":"/ Type to lookup from.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136648,"byte_end":136672,"line_start":205,"line_end":205,"column_start":2,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":938},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136754,"byte_end":136760,"line_start":208,"line_end":208,"column_start":7,"column_end":13},"name":"Target","qualname":"::traits::StaticLookup::Target","value":"type Target;","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Type to lookup into.\n","sig":null,"attributes":[{"value":"/ Type to lookup into.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136723,"byte_end":136747,"line_start":207,"line_end":207,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136789,"byte_end":136795,"line_start":210,"line_end":210,"column_start":5,"column_end":11},"name":"lookup","qualname":"::traits::StaticLookup::lookup","value":"pub fn lookup(Self::Source) -> Result<Self::Target, LookupError>","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Attempt a lookup.\n","sig":null,"attributes":[{"value":"/ Attempt a lookup.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136763,"byte_end":136784,"line_start":209,"line_end":209,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136896,"byte_end":136904,"line_start":212,"line_end":212,"column_start":5,"column_end":13},"name":"unlookup","qualname":"::traits::StaticLookup::unlookup","value":"pub fn unlookup(Self::Target) -> Self::Source","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Convert from Target back to Source.\n","sig":null,"attributes":[{"value":"/ Convert from Target back to Source.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136852,"byte_end":136891,"line_start":211,"line_end":211,"column_start":2,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2855},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":137027,"byte_end":137041,"line_start":217,"line_end":217,"column_start":12,"column_end":26},"name":"IdentityLookup","qualname":"::traits::IdentityLookup","value":"","parent":null,"children":[],"decl_id":null,"docs":" A lookup implementation returning the input value.\n","sig":null,"attributes":[{"value":"/ A lookup implementation returning the input value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136942,"byte_end":136996,"line_start":215,"line_end":215,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":952},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":137490,"byte_end":137505,"line_start":232,"line_end":232,"column_start":12,"column_end":27},"name":"AccountIdLookup","qualname":"::traits::AccountIdLookup","value":"","parent":null,"children":[],"decl_id":null,"docs":" A lookup implementation returning the `AccountId` from a `MultiAddress`.\n","sig":null,"attributes":[{"value":"/ A lookup implementation returning the `AccountId` from a `MultiAddress`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":137402,"byte_end":137478,"line_start":231,"line_end":231,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":972},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":138679,"byte_end":138686,"line_start":270,"line_end":270,"column_start":11,"column_end":18},"name":"Convert","qualname":"::traits::Convert","value":"Convert<A, B>","parent":null,"children":[{"krate":0,"index":975}],"decl_id":null,"docs":" Extensible conversion trait. Generic over both source and destination types.\n","sig":null,"attributes":[{"value":"/ Extensible conversion trait. Generic over both source and destination types.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":138588,"byte_end":138668,"line_start":269,"line_end":269,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":138721,"byte_end":138728,"line_start":272,"line_end":272,"column_start":5,"column_end":12},"name":"convert","qualname":"::traits::Convert::convert","value":"pub fn convert(A) -> B","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Make conversion.\n","sig":null,"attributes":[{"value":"/ Make conversion.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":138696,"byte_end":138716,"line_start":271,"line_end":271,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":980},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":138898,"byte_end":138906,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"Identity","qualname":"::traits::Identity","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure that performs identity conversion.\n","sig":null,"attributes":[{"value":"/ A structure that performs identity conversion.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":138836,"byte_end":138886,"line_start":279,"line_end":279,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":985},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139081,"byte_end":139092,"line_start":286,"line_end":286,"column_start":12,"column_end":23},"name":"ConvertInto","qualname":"::traits::ConvertInto","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure that performs standard conversion using the standard Rust conversion traits.\n","sig":null,"attributes":[{"value":"/ A structure that performs standard conversion using the standard Rust conversion traits.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":138977,"byte_end":139069,"line_start":285,"line_end":285,"column_start":1,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":991},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139368,"byte_end":139385,"line_start":294,"line_end":294,"column_start":11,"column_end":28},"name":"CheckedConversion","qualname":"::traits::CheckedConversion","value":"CheckedConversion","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":994}],"decl_id":null,"docs":" Convenience type to work around the highly unergonomic syntax needed\n to invoke the functions of overloaded generic traits, in this case\n `TryFrom` and `TryInto`.\n","sig":null,"attributes":[{"value":"/ Convenience type to work around the highly unergonomic syntax needed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139185,"byte_end":139257,"line_start":291,"line_end":291,"column_start":1,"column_end":73}},{"value":"/ to invoke the functions of overloaded generic traits, in this case","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139258,"byte_end":139328,"line_start":292,"line_end":292,"column_start":1,"column_end":71}},{"value":"/ `TryFrom` and `TryInto`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139329,"byte_end":139357,"line_start":293,"line_end":293,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139663,"byte_end":139675,"line_start":300,"line_end":300,"column_start":5,"column_end":17},"name":"checked_from","qualname":"::traits::CheckedConversion::checked_from","value":"pub fn checked_from<T>(T) -> Option<Self> where Self: TryFrom<T>","parent":{"krate":0,"index":991},"children":[],"decl_id":null,"docs":" Convert from a value of `T` into an equivalent instance of `Option<Self>`.","sig":null,"attributes":[{"value":"/ Convert from a value of `T` into an equivalent instance of `Option<Self>`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139389,"byte_end":139467,"line_start":295,"line_end":295,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139469,"byte_end":139472,"line_start":296,"line_end":296,"column_start":2,"column_end":5}},{"value":"/ This just uses `TryFrom` internally but with this","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139474,"byte_end":139527,"line_start":297,"line_end":297,"column_start":2,"column_end":55}},{"value":"/ variant you can provide the destination type using turbofish syntax","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139529,"byte_end":139600,"line_start":298,"line_end":298,"column_start":2,"column_end":73}},{"value":"/ in case Rust happens not to assume the correct type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139602,"byte_end":139658,"line_start":299,"line_end":299,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140033,"byte_end":140045,"line_start":308,"line_end":308,"column_start":5,"column_end":17},"name":"checked_into","qualname":"::traits::CheckedConversion::checked_into","value":"pub fn checked_into<T>(Self) -> Option<T> where Self: TryInto<T>","parent":{"krate":0,"index":991},"children":[],"decl_id":null,"docs":" Consume self to return `Some` equivalent value of `Option<T>`.","sig":null,"attributes":[{"value":"/ Consume self to return `Some` equivalent value of `Option<T>`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139771,"byte_end":139837,"line_start":303,"line_end":303,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139839,"byte_end":139842,"line_start":304,"line_end":304,"column_start":2,"column_end":5}},{"value":"/ This just uses `TryInto` internally but with this","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139844,"byte_end":139897,"line_start":305,"line_end":305,"column_start":2,"column_end":55}},{"value":"/ variant you can provide the destination type using turbofish syntax","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139899,"byte_end":139970,"line_start":306,"line_end":306,"column_start":2,"column_end":73}},{"value":"/ in case Rust happens not to assume the correct type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139972,"byte_end":140028,"line_start":307,"line_end":307,"column_start":2,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":998},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140367,"byte_end":140372,"line_start":316,"line_end":316,"column_start":11,"column_end":16},"name":"Scale","qualname":"::traits::Scale","value":"Scale<Other>","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003}],"decl_id":null,"docs":" Multiply and divide by a number that isn't necessarily the same type. Basically just the same\n as `Mul` and `Div` except it can be used for all basic numeric types.\n","sig":null,"attributes":[{"value":"/ Multiply and divide by a number that isn't necessarily the same type. Basically just the same","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140185,"byte_end":140282,"line_start":314,"line_end":314,"column_start":1,"column_end":98}},{"value":"/ as `Mul` and `Div` except it can be used for all basic numeric types.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140283,"byte_end":140356,"line_start":315,"line_end":315,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1000},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140447,"byte_end":140453,"line_start":318,"line_end":318,"column_start":7,"column_end":13},"name":"Output","qualname":"::traits::Scale::Output","value":"type Output;","parent":{"krate":0,"index":998},"children":[],"decl_id":null,"docs":" The output type of the product of `self` and `Other`.\n","sig":null,"attributes":[{"value":"/ The output type of the product of `self` and `Other`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140383,"byte_end":140440,"line_start":317,"line_end":317,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140508,"byte_end":140511,"line_start":321,"line_end":321,"column_start":5,"column_end":8},"name":"mul","qualname":"::traits::Scale::mul","value":"pub fn mul(Self, Other) -> Self::Output","parent":{"krate":0,"index":998},"children":[],"decl_id":null,"docs":" @return the product of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ @return the product of `self` and `other`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140457,"byte_end":140503,"line_start":320,"line_end":320,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140611,"byte_end":140614,"line_start":324,"line_end":324,"column_start":5,"column_end":8},"name":"div","qualname":"::traits::Scale::div","value":"pub fn div(Self, Other) -> Self::Output","parent":{"krate":0,"index":998},"children":[],"decl_id":null,"docs":" @return the integer division of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ @return the integer division of `self` and `other`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140551,"byte_end":140606,"line_start":323,"line_end":323,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140714,"byte_end":140717,"line_start":327,"line_end":327,"column_start":5,"column_end":8},"name":"rem","qualname":"::traits::Scale::rem","value":"pub fn rem(Self, Other) -> Self::Output","parent":{"krate":0,"index":998},"children":[],"decl_id":null,"docs":" @return the modulo remainder of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ @return the modulo remainder of `self` and `other`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140654,"byte_end":140709,"line_start":326,"line_end":326,"column_start":2,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":1005},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141568,"byte_end":141573,"line_start":357,"line_end":357,"column_start":11,"column_end":16},"name":"Clear","qualname":"::traits::Clear","value":"Clear","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007}],"decl_id":null,"docs":" Trait for things that can be clear (have no bits set). For numeric types, essentially the same\n as `Zero`.\n","sig":null,"attributes":[{"value":"/ Trait for things that can be clear (have no bits set). For numeric types, essentially the same","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141444,"byte_end":141542,"line_start":355,"line_end":355,"column_start":1,"column_end":99}},{"value":"/ as `Zero`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141543,"byte_end":141557,"line_start":356,"line_end":356,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141611,"byte_end":141619,"line_start":359,"line_end":359,"column_start":5,"column_end":13},"name":"is_clear","qualname":"::traits::Clear::is_clear","value":"pub fn is_clear(&Self) -> bool","parent":{"krate":0,"index":1005},"children":[],"decl_id":null,"docs":" True iff no bits are set.\n","sig":null,"attributes":[{"value":"/ True iff no bits are set.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141577,"byte_end":141606,"line_start":358,"line_end":358,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141686,"byte_end":141691,"line_start":362,"line_end":362,"column_start":5,"column_end":10},"name":"clear","qualname":"::traits::Clear::clear","value":"pub fn clear() -> Self","parent":{"krate":0,"index":1005},"children":[],"decl_id":null,"docs":" Return the value of Self that is clear.\n","sig":null,"attributes":[{"value":"/ Return the value of Self that is clear.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141638,"byte_end":141681,"line_start":361,"line_end":361,"column_start":2,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":1012},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141899,"byte_end":141911,"line_start":371,"line_end":371,"column_start":11,"column_end":23},"name":"SimpleBitOps","qualname":"::traits::SimpleBitOps","value":"SimpleBitOps: Sized + Clear + sp_std::ops::BitOr<Self, Output = Self> +\nsp_std::ops::BitXor<Self, Output = Self> + sp_std::ops::BitAnd<Self, Output =\nSelf>","parent":null,"children":[],"decl_id":null,"docs":" A meta trait for all bit ops.\n","sig":null,"attributes":[{"value":"/ A meta trait for all bit ops.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141855,"byte_end":141888,"line_start":370,"line_end":370,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":1015},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142386,"byte_end":142390,"line_start":387,"line_end":387,"column_start":11,"column_end":15},"name":"Hash","qualname":"::traits::Hash","value":"Hash: 'static + MaybeSerializeDeserialize + Debug + Clone + Eq + PartialEq +\nHasher<Out = <Self as Hash>::Output>","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1021}],"decl_id":null,"docs":" Abstraction around hashing\n","sig":null,"attributes":[{"value":"/ Abstraction around hashing","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142241,"byte_end":142271,"line_start":384,"line_end":384,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1016},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142537,"byte_end":142543,"line_start":389,"line_end":389,"column_start":7,"column_end":13},"name":"Output","qualname":"::traits::Hash::Output","value":"type Output: Member + MaybeSerializeDeserialize + Debug + sp_std::hash::Hash\n\t\t+ AsRef<[u8]> + AsMut<[u8]> + Copy + Default + Encode + Decode;","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" The hash type produced.\n","sig":null,"attributes":[{"value":"/ The hash type produced.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142503,"byte_end":142530,"line_start":388,"line_end":388,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142722,"byte_end":142726,"line_start":393,"line_end":393,"column_start":5,"column_end":9},"name":"hash","qualname":"::traits::Hash::hash","value":"pub fn hash(&[u8]) -> Self::Output","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Produce the hash of some byte-slice.\n","sig":null,"attributes":[{"value":"/ Produce the hash of some byte-slice.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142677,"byte_end":142717,"line_start":392,"line_end":392,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142844,"byte_end":142851,"line_start":398,"line_end":398,"column_start":5,"column_end":12},"name":"hash_of","qualname":"::traits::Hash::hash_of","value":"pub fn hash_of<S: Encode>(&S) -> Self::Output","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Produce the hash of some codec-encodable value.\n","sig":null,"attributes":[{"value":"/ Produce the hash of some codec-encodable value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142788,"byte_end":142839,"line_start":397,"line_end":397,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":143005,"byte_end":143022,"line_start":403,"line_end":403,"column_start":5,"column_end":22},"name":"ordered_trie_root","qualname":"::traits::Hash::ordered_trie_root","value":"pub fn ordered_trie_root(Vec<Vec<u8>>) -> Self::Output","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" The ordered Patricia tree root of the given `input`.\n","sig":null,"attributes":[{"value":"/ The ordered Patricia tree root of the given `input`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142944,"byte_end":143000,"line_start":402,"line_end":402,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":143116,"byte_end":143125,"line_start":406,"line_end":406,"column_start":5,"column_end":14},"name":"trie_root","qualname":"::traits::Hash::trie_root","value":"pub fn trie_root(Vec<(Vec<u8>, Vec<u8>)>) -> Self::Output","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" The Patricia tree root of the given mapping.\n","sig":null,"attributes":[{"value":"/ The Patricia tree root of the given mapping.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":143063,"byte_end":143111,"line_start":405,"line_end":405,"column_start":2,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2937},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":143332,"byte_end":143343,"line_start":412,"line_end":412,"column_start":12,"column_end":23},"name":"BlakeTwo256","qualname":"::traits::BlakeTwo256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Blake2-256 Hash implementation.\n","sig":null,"attributes":[{"value":"/ Blake2-256 Hash implementation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":143178,"byte_end":143213,"line_start":409,"line_end":409,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2970},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":143998,"byte_end":144007,"line_start":439,"line_end":439,"column_start":12,"column_end":21},"name":"Keccak256","qualname":"::traits::Keccak256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Keccak-256 Hash implementation.\n","sig":null,"attributes":[{"value":"/ Keccak-256 Hash implementation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":143844,"byte_end":143879,"line_start":436,"line_end":436,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1040},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":144604,"byte_end":144614,"line_start":464,"line_end":464,"column_start":11,"column_end":21},"name":"CheckEqual","qualname":"::traits::CheckEqual","value":"CheckEqual","parent":null,"children":[{"krate":0,"index":1041}],"decl_id":null,"docs":" Something that can be checked for equality and printed out to a debug channel if bad.\n","sig":null,"attributes":[{"value":"/ Something that can be checked for equality and printed out to a debug channel if bad.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":144504,"byte_end":144593,"line_start":463,"line_end":463,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":144654,"byte_end":144665,"line_start":466,"line_end":466,"column_start":5,"column_end":16},"name":"check_equal","qualname":"::traits::CheckEqual::check_equal","value":"pub fn check_equal(&Self, &Self)","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Perform the equality check.\n","sig":null,"attributes":[{"value":"/ Perform the equality check.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":144618,"byte_end":144649,"line_start":465,"line_end":465,"column_start":2,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":3003},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":145758,"byte_end":145770,"line_start":512,"line_end":512,"column_start":8,"column_end":20},"name":"MaybeDisplay","qualname":"::traits::MaybeDisplay","value":"MaybeDisplay: Display","parent":null,"children":[],"decl_id":null,"docs":" A type that implements Display when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":10647403,"byte_end":10647426,"line_start":383,"line_end":383,"column_start":4,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3006},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":145850,"byte_end":145862,"line_start":515,"line_end":515,"column_start":8,"column_end":20},"name":"MaybeFromStr","qualname":"::traits::MaybeFromStr","value":"MaybeFromStr: FromStr","parent":null,"children":[],"decl_id":null,"docs":" A type that implements FromStr when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":10647403,"byte_end":10647426,"line_start":383,"line_end":383,"column_start":4,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3009},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":145939,"byte_end":145948,"line_start":518,"line_end":518,"column_start":8,"column_end":17},"name":"MaybeHash","qualname":"::traits::MaybeHash","value":"MaybeHash: sp_std::hash::Hash","parent":null,"children":[],"decl_id":null,"docs":" A type that implements Hash when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":10647403,"byte_end":10647426,"line_start":383,"line_end":383,"column_start":4,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3012},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146041,"byte_end":146055,"line_start":521,"line_end":521,"column_start":8,"column_end":22},"name":"MaybeSerialize","qualname":"::traits::MaybeSerialize","value":"MaybeSerialize: Serialize","parent":null,"children":[],"decl_id":null,"docs":" A type that implements Serialize when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":10647403,"byte_end":10647426,"line_start":383,"line_end":383,"column_start":4,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3015},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146167,"byte_end":146192,"line_start":524,"line_end":524,"column_start":8,"column_end":33},"name":"MaybeSerializeDeserialize","qualname":"::traits::MaybeSerializeDeserialize","value":"MaybeSerializeDeserialize: DeserializeOwned + Serialize","parent":null,"children":[],"decl_id":null,"docs":" A type that implements Serialize, DeserializeOwned and Debug when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":10647403,"byte_end":10647426,"line_start":383,"line_end":383,"column_start":4,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3018},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146273,"byte_end":146290,"line_start":527,"line_end":527,"column_start":8,"column_end":25},"name":"MaybeMallocSizeOf","qualname":"::traits::MaybeMallocSizeOf","value":"MaybeMallocSizeOf: parity_util_mem::MallocSizeOf","parent":null,"children":[],"decl_id":null,"docs":" A type that implements MallocSizeOf.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-3.0.0/src/lib.rs","byte_start":10647403,"byte_end":10647426,"line_start":383,"line_end":383,"column_start":4,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":1048},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146388,"byte_end":146394,"line_start":531,"line_end":531,"column_start":11,"column_end":17},"name":"Member","qualname":"::traits::Member","value":"Member: Send + Sync + Sized + Debug + Eq + PartialEq + Clone + 'static","parent":null,"children":[],"decl_id":null,"docs":" A type that can be used in runtime structures.\n","sig":null,"attributes":[{"value":"/ A type that can be used in runtime structures.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146327,"byte_end":146377,"line_start":530,"line_end":530,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":1051},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146610,"byte_end":146618,"line_start":535,"line_end":535,"column_start":11,"column_end":19},"name":"IsMember","qualname":"::traits::IsMember","value":"IsMember<MemberId>","parent":null,"children":[{"krate":0,"index":1053}],"decl_id":null,"docs":" Determine if a `MemberId` is a valid member.\n","sig":null,"attributes":[{"value":"/ Determine if a `MemberId` is a valid member.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146551,"byte_end":146599,"line_start":534,"line_end":534,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146680,"byte_end":146689,"line_start":537,"line_end":537,"column_start":5,"column_end":14},"name":"is_member","qualname":"::traits::IsMember::is_member","value":"pub fn is_member(&MemberId) -> bool","parent":{"krate":0,"index":1051},"children":[],"decl_id":null,"docs":" Is the given `MemberId` a valid member?\n","sig":null,"attributes":[{"value":"/ Is the given `MemberId` a valid member?","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146632,"byte_end":146675,"line_start":536,"line_end":536,"column_start":2,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":1054},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147046,"byte_end":147052,"line_start":545,"line_end":545,"column_start":11,"column_end":17},"name":"Header","qualname":"::traits::Header","value":"Header: Clone + Send + Sync + Codec + Eq + MaybeSerialize + Debug +\nMaybeMallocSizeOf + 'static","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069}],"decl_id":null,"docs":" Something which fulfills the abstract idea of a Substrate header. It has types for a `Number`,\n a `Hash` and a `Hashing`. It provides access to an `extrinsics_root`, `state_root` and\n `parent_hash`, as well as a `digest` and a block `number`.","sig":null,"attributes":[{"value":"/ Something which fulfills the abstract idea of a Substrate header. It has types for a `Number`,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146724,"byte_end":146822,"line_start":540,"line_end":540,"column_start":1,"column_end":99}},{"value":"/ a `Hash` and a `Hashing`. It provides access to an `extrinsics_root`, `state_root` and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146823,"byte_end":146913,"line_start":541,"line_end":541,"column_start":1,"column_end":91}},{"value":"/ `parent_hash`, as well as a `digest` and a block `number`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146914,"byte_end":146976,"line_start":542,"line_end":542,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146977,"byte_end":146980,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ You can also create a `new` one from those fields.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146981,"byte_end":147035,"line_start":544,"line_end":544,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":1055},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147172,"byte_end":147178,"line_start":550,"line_end":550,"column_start":7,"column_end":13},"name":"Number","qualname":"::traits::Header::Number","value":"type Number: Member + MaybeSerializeDeserialize + Debug + sp_std::hash::Hash + Copy +\n\t\tMaybeDisplay + AtLeast32BitUnsigned + Codec + sp_std::str::FromStr + MaybeMallocSizeOf;","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Header number.\n","sig":null,"attributes":[{"value":"/ Header number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147147,"byte_end":147165,"line_start":549,"line_end":549,"column_start":2,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":1056},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147371,"byte_end":147375,"line_start":553,"line_end":553,"column_start":7,"column_end":11},"name":"Hash","qualname":"::traits::Header::Hash","value":"type Hash: Member + MaybeSerializeDeserialize + Debug + sp_std::hash::Hash + Ord\n\t\t+ Copy + MaybeDisplay + Default + SimpleBitOps + Codec + AsRef<[u8]>\n\t\t+ AsMut<[u8]> + MaybeMallocSizeOf;","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Header hash type\n","sig":null,"attributes":[{"value":"/ Header hash type","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147344,"byte_end":147364,"line_start":552,"line_end":552,"column_start":2,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1057},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147584,"byte_end":147591,"line_start":557,"line_end":557,"column_start":7,"column_end":14},"name":"Hashing","qualname":"::traits::Header::Hashing","value":"type Hashing: Hash<Output = Self::Hash>;","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Hashing algorithm\n","sig":null,"attributes":[{"value":"/ Hashing algorithm","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147556,"byte_end":147577,"line_start":556,"line_end":556,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147650,"byte_end":147653,"line_start":560,"line_end":560,"column_start":5,"column_end":8},"name":"new","qualname":"::traits::Header::new","value":"pub fn new(Self::Number, Self::Hash, Self::Hash, Self::Hash,\n           Digest<Self::Hash>) -> Self","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Creates new header.\n","sig":null,"attributes":[{"value":"/ Creates new header.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147622,"byte_end":147645,"line_start":559,"line_end":559,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147857,"byte_end":147863,"line_start":569,"line_end":569,"column_start":5,"column_end":11},"name":"number","qualname":"::traits::Header::number","value":"pub fn number(&Self) -> &Self::Number","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Returns a reference to the header number.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the header number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147807,"byte_end":147852,"line_start":568,"line_end":568,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147922,"byte_end":147932,"line_start":571,"line_end":571,"column_start":5,"column_end":15},"name":"set_number","qualname":"::traits::Header::set_number","value":"pub fn set_number(&mut Self, Self::Number)","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Sets the header number.\n","sig":null,"attributes":[{"value":"/ Sets the header number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147890,"byte_end":147917,"line_start":570,"line_end":570,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148021,"byte_end":148036,"line_start":574,"line_end":574,"column_start":5,"column_end":20},"name":"extrinsics_root","qualname":"::traits::Header::extrinsics_root","value":"pub fn extrinsics_root(&Self) -> &Self::Hash","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Returns a reference to the extrinsics root.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the extrinsics root.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147969,"byte_end":148016,"line_start":573,"line_end":573,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148094,"byte_end":148113,"line_start":576,"line_end":576,"column_start":5,"column_end":24},"name":"set_extrinsics_root","qualname":"::traits::Header::set_extrinsics_root","value":"pub fn set_extrinsics_root(&mut Self, Self::Hash)","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Sets the extrinsic root.\n","sig":null,"attributes":[{"value":"/ Sets the extrinsic root.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148061,"byte_end":148089,"line_start":575,"line_end":575,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148193,"byte_end":148203,"line_start":579,"line_end":579,"column_start":5,"column_end":15},"name":"state_root","qualname":"::traits::Header::state_root","value":"pub fn state_root(&Self) -> &Self::Hash","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Returns a reference to the state root.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the state root.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148146,"byte_end":148188,"line_start":578,"line_end":578,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148257,"byte_end":148271,"line_start":581,"line_end":581,"column_start":5,"column_end":19},"name":"set_state_root","qualname":"::traits::Header::set_state_root","value":"pub fn set_state_root(&mut Self, Self::Hash)","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Sets the state root.\n","sig":null,"attributes":[{"value":"/ Sets the state root.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148228,"byte_end":148252,"line_start":580,"line_end":580,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148352,"byte_end":148363,"line_start":584,"line_end":584,"column_start":5,"column_end":16},"name":"parent_hash","qualname":"::traits::Header::parent_hash","value":"pub fn parent_hash(&Self) -> &Self::Hash","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Returns a reference to the parent hash.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the parent hash.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148304,"byte_end":148347,"line_start":583,"line_end":583,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148418,"byte_end":148433,"line_start":586,"line_end":586,"column_start":5,"column_end":20},"name":"set_parent_hash","qualname":"::traits::Header::set_parent_hash","value":"pub fn set_parent_hash(&mut Self, Self::Hash)","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Sets the parent hash.\n","sig":null,"attributes":[{"value":"/ Sets the parent hash.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148388,"byte_end":148413,"line_start":585,"line_end":585,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148509,"byte_end":148515,"line_start":589,"line_end":589,"column_start":5,"column_end":11},"name":"digest","qualname":"::traits::Header::digest","value":"pub fn digest(&Self) -> &Digest<Self::Hash>","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Returns a reference to the digest.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the digest.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148466,"byte_end":148504,"line_start":588,"line_end":588,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148595,"byte_end":148605,"line_start":591,"line_end":591,"column_start":5,"column_end":15},"name":"digest_mut","qualname":"::traits::Header::digest_mut","value":"pub fn digest_mut(&mut Self) -> &mut Digest<Self::Hash>","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Get a mutable reference to the digest.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the digest.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148548,"byte_end":148590,"line_start":590,"line_end":590,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148687,"byte_end":148691,"line_start":594,"line_end":594,"column_start":5,"column_end":9},"name":"hash","qualname":"::traits::Header::hash","value":"pub fn hash(&Self) -> Self::Hash","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Returns the hash of the header.\n","sig":null,"attributes":[{"value":"/ Returns the hash of the header.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148647,"byte_end":148682,"line_start":593,"line_end":593,"column_start":2,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":1070},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149008,"byte_end":149013,"line_start":603,"line_end":603,"column_start":11,"column_end":16},"name":"Block","qualname":"::traits::Block","value":"Block: Clone + Send + Sync + Codec + Eq + MaybeSerialize + Debug +\nMaybeMallocSizeOf + 'static","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079}],"decl_id":null,"docs":" Something which fulfills the abstract idea of a Substrate block. It has types for\n `Extrinsic` pieces of information as well as a `Header`.","sig":null,"attributes":[{"value":"/ Something which fulfills the abstract idea of a Substrate block. It has types for","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148762,"byte_end":148847,"line_start":599,"line_end":599,"column_start":1,"column_end":86}},{"value":"/ `Extrinsic` pieces of information as well as a `Header`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148848,"byte_end":148908,"line_start":600,"line_end":600,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148909,"byte_end":148912,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ You can get an iterator over each of the `extrinsics` and retrieve the `header`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":148913,"byte_end":148997,"line_start":602,"line_end":602,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":1071},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149137,"byte_end":149146,"line_start":605,"line_end":605,"column_start":7,"column_end":16},"name":"Extrinsic","qualname":"::traits::Block::Extrinsic","value":"type Extrinsic: Member + Codec + Extrinsic + MaybeSerialize + MaybeMallocSizeOf;","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" Type for extrinsics.\n","sig":null,"attributes":[{"value":"/ Type for extrinsics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149106,"byte_end":149130,"line_start":604,"line_end":604,"column_start":2,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":1072},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149237,"byte_end":149243,"line_start":607,"line_end":607,"column_start":7,"column_end":13},"name":"Header","qualname":"::traits::Block::Header","value":"type Header: Header<Hash=Self::Hash> + MaybeMallocSizeOf;","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" Header type.\n","sig":null,"attributes":[{"value":"/ Header type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149214,"byte_end":149230,"line_start":606,"line_end":606,"column_start":2,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":1073},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149318,"byte_end":149322,"line_start":609,"line_end":609,"column_start":7,"column_end":11},"name":"Hash","qualname":"::traits::Block::Hash","value":"type Hash: Member + MaybeSerializeDeserialize + Debug + sp_std::hash::Hash + Ord\n\t\t+ Copy + MaybeDisplay + Default + SimpleBitOps + Codec + AsRef<[u8]> + AsMut<[u8]>\n\t\t+ MaybeMallocSizeOf;","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" Block hash type.\n","sig":null,"attributes":[{"value":"/ Block hash type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149291,"byte_end":149311,"line_start":608,"line_end":608,"column_start":2,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149547,"byte_end":149553,"line_start":614,"line_end":614,"column_start":5,"column_end":11},"name":"header","qualname":"::traits::Block::header","value":"pub fn header(&Self) -> &Self::Header","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" Returns a reference to the header.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the header.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149504,"byte_end":149542,"line_start":613,"line_end":613,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149635,"byte_end":149645,"line_start":616,"line_end":616,"column_start":5,"column_end":15},"name":"extrinsics","qualname":"::traits::Block::extrinsics","value":"pub fn extrinsics(&Self) -> &[Self::Extrinsic]","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" Returns a reference to the list of extrinsics.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the list of extrinsics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149580,"byte_end":149630,"line_start":615,"line_end":615,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149737,"byte_end":149748,"line_start":618,"line_end":618,"column_start":5,"column_end":16},"name":"deconstruct","qualname":"::traits::Block::deconstruct","value":"pub fn deconstruct(Self) -> (Self::Header, Vec<Self::Extrinsic>)","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" Split the block into header and list of extrinsics.\n","sig":null,"attributes":[{"value":"/ Split the block into header and list of extrinsics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149677,"byte_end":149732,"line_start":617,"line_end":617,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149851,"byte_end":149854,"line_start":620,"line_end":620,"column_start":5,"column_end":8},"name":"new","qualname":"::traits::Block::new","value":"pub fn new(Self::Header, Vec<Self::Extrinsic>) -> Self","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" Creates new block from header and extrinsics.\n","sig":null,"attributes":[{"value":"/ Creates new block from header and extrinsics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149797,"byte_end":149846,"line_start":619,"line_end":619,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149960,"byte_end":149964,"line_start":622,"line_end":622,"column_start":5,"column_end":9},"name":"hash","qualname":"::traits::Block::hash","value":"pub fn hash(&Self) -> Self::Hash","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" Returns the hash of the block.\n","sig":null,"attributes":[{"value":"/ Returns the hash of the block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149921,"byte_end":149955,"line_start":621,"line_end":621,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150188,"byte_end":150199,"line_start":627,"line_end":627,"column_start":5,"column_end":16},"name":"encode_from","qualname":"::traits::Block::encode_from","value":"pub fn encode_from(&Self::Header, &[Self::Extrinsic]) -> Vec<u8>","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" Creates an encoded block from the given `header` and `extrinsics` without requiring the\n creation of an instance.\n","sig":null,"attributes":[{"value":"/ Creates an encoded block from the given `header` and `extrinsics` without requiring the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150062,"byte_end":150153,"line_start":625,"line_end":625,"column_start":2,"column_end":93}},{"value":"/ creation of an instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150155,"byte_end":150183,"line_start":626,"line_end":626,"column_start":2,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1080},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150326,"byte_end":150335,"line_start":632,"line_end":632,"column_start":11,"column_end":20},"name":"Extrinsic","qualname":"::traits::Extrinsic","value":"Extrinsic: Sized + MaybeMallocSizeOf","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084}],"decl_id":null,"docs":" Something that acts like an `Extrinsic`.\n","sig":null,"attributes":[{"value":"/ Something that acts like an `Extrinsic`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150271,"byte_end":150315,"line_start":631,"line_end":631,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1081},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150395,"byte_end":150399,"line_start":634,"line_end":634,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::Extrinsic::Call","value":"type Call;","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" The function call.\n","sig":null,"attributes":[{"value":"/ The function call.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150366,"byte_end":150388,"line_start":633,"line_end":633,"column_start":2,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":1082},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150592,"byte_end":150608,"line_start":641,"line_end":641,"column_start":7,"column_end":23},"name":"SignaturePayload","qualname":"::traits::Extrinsic::SignaturePayload","value":"type SignaturePayload;","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" The payload we carry for signed extrinsics.","sig":null,"attributes":[{"value":"/ The payload we carry for signed extrinsics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150403,"byte_end":150450,"line_start":636,"line_end":636,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150452,"byte_end":150455,"line_start":637,"line_end":637,"column_start":2,"column_end":5}},{"value":"/ Usually it will contain a `Signature` and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150457,"byte_end":150502,"line_start":638,"line_end":638,"column_start":2,"column_end":47}},{"value":"/ may include some additional data that are specific to signed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150504,"byte_end":150568,"line_start":639,"line_end":639,"column_start":2,"column_end":66}},{"value":"/ extrinsics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150570,"byte_end":150585,"line_start":640,"line_end":640,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150735,"byte_end":150744,"line_start":645,"line_end":645,"column_start":5,"column_end":14},"name":"is_signed","qualname":"::traits::Extrinsic::is_signed","value":"pub fn is_signed(&Self) -> Option<bool>","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" Is this `Extrinsic` signed?\n If no information are available about signed/unsigned, `None` should be returned.\n","sig":null,"attributes":[{"value":"/ Is this `Extrinsic` signed?","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150612,"byte_end":150643,"line_start":643,"line_end":643,"column_start":2,"column_end":33}},{"value":"/ If no information are available about signed/unsigned, `None` should be returned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150645,"byte_end":150730,"line_start":644,"line_end":644,"column_start":2,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151135,"byte_end":151138,"line_start":653,"line_end":653,"column_start":5,"column_end":8},"name":"new","qualname":"::traits::Extrinsic::new","value":"pub fn new(Self::Call, Option<Self::SignaturePayload>) -> Option<Self>","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" Create new instance of the extrinsic.","sig":null,"attributes":[{"value":"/ Create new instance of the extrinsic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150779,"byte_end":150820,"line_start":647,"line_end":647,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150822,"byte_end":150825,"line_start":648,"line_end":648,"column_start":2,"column_end":5}},{"value":"/ Extrinsics can be split into:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150827,"byte_end":150860,"line_start":649,"line_end":649,"column_start":2,"column_end":35}},{"value":"/ 1. Inherents (no signature; created by validators during block production)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150862,"byte_end":150940,"line_start":650,"line_end":650,"column_start":2,"column_end":80}},{"value":"/ 2. Unsigned Transactions (no signature; represent \"system calls\" or other special kinds of calls)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150942,"byte_end":151043,"line_start":651,"line_end":651,"column_start":2,"column_end":103}},{"value":"/ 3. Signed Transactions (with signature; a regular transactions with known origin)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151045,"byte_end":151130,"line_start":652,"line_end":652,"column_start":2,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":1085},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151322,"byte_end":151339,"line_start":657,"line_end":657,"column_start":11,"column_end":28},"name":"ExtrinsicMetadata","qualname":"::traits::ExtrinsicMetadata","value":"ExtrinsicMetadata","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087}],"decl_id":null,"docs":" Implementor is an [`Extrinsic`] and provides metadata about this extrinsic.\n","sig":null,"attributes":[{"value":"/ Implementor is an [`Extrinsic`] and provides metadata about this extrinsic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151232,"byte_end":151311,"line_start":656,"line_end":656,"column_start":1,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":1086},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151386,"byte_end":151393,"line_start":659,"line_end":659,"column_start":8,"column_end":15},"name":"VERSION","qualname":"::traits::ExtrinsicMetadata::VERSION","value":"u8","parent":{"krate":0,"index":1085},"children":[],"decl_id":null,"docs":" The version of the `Extrinsic`.\n","sig":null,"attributes":[{"value":"/ The version of the `Extrinsic`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151343,"byte_end":151378,"line_start":658,"line_end":658,"column_start":2,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1087},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151459,"byte_end":151475,"line_start":662,"line_end":662,"column_start":7,"column_end":23},"name":"SignedExtensions","qualname":"::traits::ExtrinsicMetadata::SignedExtensions","value":"type SignedExtensions: SignedExtension;","parent":{"krate":0,"index":1085},"children":[],"decl_id":null,"docs":" Signed extensions attached to this `Extrinsic`.\n","sig":null,"attributes":[{"value":"/ Signed extensions attached to this `Extrinsic`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151401,"byte_end":151452,"line_start":661,"line_end":661,"column_start":2,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":1088},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151548,"byte_end":151555,"line_start":666,"line_end":666,"column_start":10,"column_end":17},"name":"HashFor","qualname":"::traits::HashFor","value":"<<B as Block>::Header as Header>::Hashing","parent":null,"children":[],"decl_id":null,"docs":" Extract the hashing type for a block.\n","sig":null,"attributes":[{"value":"/ Extract the hashing type for a block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151497,"byte_end":151538,"line_start":665,"line_end":665,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":1090},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151654,"byte_end":151663,"line_start":668,"line_end":668,"column_start":10,"column_end":19},"name":"NumberFor","qualname":"::traits::NumberFor","value":"<<B as Block>::Header as Header>::Number","parent":null,"children":[],"decl_id":null,"docs":" Extract the number type for a block.\n","sig":null,"attributes":[{"value":"/ Extract the number type for a block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151604,"byte_end":151644,"line_start":667,"line_end":667,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1092},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151761,"byte_end":151770,"line_start":670,"line_end":670,"column_start":10,"column_end":19},"name":"DigestFor","qualname":"::traits::DigestFor","value":"Digest<<<B as Block>::Header as Header>::Hash>","parent":null,"children":[],"decl_id":null,"docs":" Extract the digest type for a block.\n","sig":null,"attributes":[{"value":"/ Extract the digest type for a block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151711,"byte_end":151751,"line_start":669,"line_end":669,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1094},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151879,"byte_end":151892,"line_start":672,"line_end":672,"column_start":10,"column_end":23},"name":"DigestItemFor","qualname":"::traits::DigestItemFor","value":"DigestItem<<<B as Block>::Header as Header>::Hash>","parent":null,"children":[],"decl_id":null,"docs":" Extract the digest item type for a block.\n","sig":null,"attributes":[{"value":"/ Extract the digest item type for a block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151824,"byte_end":151869,"line_start":671,"line_end":671,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":1096},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152265,"byte_end":152274,"line_start":678,"line_end":678,"column_start":11,"column_end":20},"name":"Checkable","qualname":"::traits::Checkable","value":"Checkable<Context>: Sized","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099}],"decl_id":null,"docs":" A \"checkable\" piece of information, used by the standard Substrate Executive in order to\n check the validity of a piece of extrinsic information, usually by verifying the signature.\n Implement for pieces of information that require some additional context `Context` in order to be\n checked.\n","sig":null,"attributes":[{"value":"/ A \"checkable\" piece of information, used by the standard Substrate Executive in order to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":151951,"byte_end":152043,"line_start":674,"line_end":674,"column_start":1,"column_end":93}},{"value":"/ check the validity of a piece of extrinsic information, usually by verifying the signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152044,"byte_end":152139,"line_start":675,"line_end":675,"column_start":1,"column_end":96}},{"value":"/ Implement for pieces of information that require some additional context `Context` in order to be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152140,"byte_end":152241,"line_start":676,"line_end":676,"column_start":1,"column_end":102}},{"value":"/ checked.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152242,"byte_end":152254,"line_start":677,"line_end":677,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":1098},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152334,"byte_end":152341,"line_start":680,"line_end":680,"column_start":7,"column_end":14},"name":"Checked","qualname":"::traits::Checkable::Checked","value":"type Checked;","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" Returned if `check` succeeds.\n","sig":null,"attributes":[{"value":"/ Returned if `check` succeeds.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152294,"byte_end":152327,"line_start":679,"line_end":679,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152395,"byte_end":152400,"line_start":683,"line_end":683,"column_start":5,"column_end":10},"name":"check","qualname":"::traits::Checkable::check","value":"pub fn check(Self, &Context)\n-> Result<Self::Checked, TransactionValidityError>","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" Check self, given an instance of Context.\n","sig":null,"attributes":[{"value":"/ Check self, given an instance of Context.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152345,"byte_end":152390,"line_start":682,"line_end":682,"column_start":2,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":1100},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152780,"byte_end":152794,"line_start":690,"line_end":690,"column_start":11,"column_end":25},"name":"BlindCheckable","qualname":"::traits::BlindCheckable","value":"BlindCheckable: Sized","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102}],"decl_id":null,"docs":" A \"checkable\" piece of information, used by the standard Substrate Executive in order to\n check the validity of a piece of extrinsic information, usually by verifying the signature.\n Implement for pieces of information that don't require additional context in order to be\n checked.\n","sig":null,"attributes":[{"value":"/ A \"checkable\" piece of information, used by the standard Substrate Executive in order to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152475,"byte_end":152567,"line_start":686,"line_end":686,"column_start":1,"column_end":93}},{"value":"/ check the validity of a piece of extrinsic information, usually by verifying the signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152568,"byte_end":152663,"line_start":687,"line_end":687,"column_start":1,"column_end":96}},{"value":"/ Implement for pieces of information that don't require additional context in order to be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152664,"byte_end":152756,"line_start":688,"line_end":688,"column_start":1,"column_end":93}},{"value":"/ checked.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152757,"byte_end":152769,"line_start":689,"line_end":689,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":1101},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152845,"byte_end":152852,"line_start":692,"line_end":692,"column_start":7,"column_end":14},"name":"Checked","qualname":"::traits::BlindCheckable::Checked","value":"type Checked;","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" Returned if `check` succeeds.\n","sig":null,"attributes":[{"value":"/ Returned if `check` succeeds.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152805,"byte_end":152838,"line_start":691,"line_end":691,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152876,"byte_end":152881,"line_start":695,"line_end":695,"column_start":5,"column_end":10},"name":"check","qualname":"::traits::BlindCheckable::check","value":"pub fn check(Self) -> Result<Self::Checked, TransactionValidityError>","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" Check self.\n","sig":null,"attributes":[{"value":"/ Check self.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152856,"byte_end":152871,"line_start":694,"line_end":694,"column_start":2,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":1108},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153369,"byte_end":153381,"line_start":709,"line_end":709,"column_start":11,"column_end":23},"name":"Dispatchable","qualname":"::traits::Dispatchable","value":"Dispatchable","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"decl_id":null,"docs":" A lazy call (module function and argument values) that can be executed via its `dispatch`\n method.\n","sig":null,"attributes":[{"value":"/ A lazy call (module function and argument values) that can be executed via its `dispatch`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153253,"byte_end":153346,"line_start":707,"line_end":707,"column_start":1,"column_end":94}},{"value":"/ method.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153347,"byte_end":153358,"line_start":708,"line_end":708,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":1109},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153675,"byte_end":153681,"line_start":713,"line_end":713,"column_start":7,"column_end":13},"name":"Origin","qualname":"::traits::Dispatchable::Origin","value":"type Origin;","parent":{"krate":0,"index":1108},"children":[],"decl_id":null,"docs":" Every function call from your runtime has an origin, which specifies where the extrinsic was\n generated from. In the case of a signed extrinsic (transaction), the origin contains an\n identifier for the caller. The origin can be empty in the case of an inherent extrinsic.\n","sig":null,"attributes":[{"value":"/ Every function call from your runtime has an origin, which specifies where the extrinsic was","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153385,"byte_end":153481,"line_start":710,"line_end":710,"column_start":2,"column_end":98}},{"value":"/ generated from. In the case of a signed extrinsic (transaction), the origin contains an","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153483,"byte_end":153574,"line_start":711,"line_end":711,"column_start":2,"column_end":93}},{"value":"/ identifier for the caller. The origin can be empty in the case of an inherent extrinsic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153576,"byte_end":153668,"line_start":712,"line_end":712,"column_start":2,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1110},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153698,"byte_end":153704,"line_start":715,"line_end":715,"column_start":7,"column_end":13},"name":"Config","qualname":"::traits::Dispatchable::Config","value":"type Config;","parent":{"krate":0,"index":1108},"children":[],"decl_id":null,"docs":" ...\n","sig":null,"attributes":[{"value":"/ ...","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153684,"byte_end":153691,"line_start":714,"line_end":714,"column_start":2,"column_end":9}}]},{"kind":"Type","id":{"krate":0,"index":1111},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153955,"byte_end":153959,"line_start":719,"line_end":719,"column_start":7,"column_end":11},"name":"Info","qualname":"::traits::Dispatchable::Info","value":"type Info;","parent":{"krate":0,"index":1108},"children":[],"decl_id":null,"docs":" An opaque set of information attached to the transaction. This could be constructed anywhere\n down the line in a runtime. The current Substrate runtime uses a struct with the same name\n to represent the dispatch class and weight.\n","sig":null,"attributes":[{"value":"/ An opaque set of information attached to the transaction. This could be constructed anywhere","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153707,"byte_end":153803,"line_start":716,"line_end":716,"column_start":2,"column_end":98}},{"value":"/ down the line in a runtime. The current Substrate runtime uses a struct with the same name","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153805,"byte_end":153899,"line_start":717,"line_end":717,"column_start":2,"column_end":96}},{"value":"/ to represent the dispatch class and weight.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153901,"byte_end":153948,"line_start":718,"line_end":718,"column_start":2,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1112},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":154140,"byte_end":154148,"line_start":722,"line_end":722,"column_start":7,"column_end":15},"name":"PostInfo","qualname":"::traits::Dispatchable::PostInfo","value":"type PostInfo: Eq + PartialEq + Clone + Copy + Encode + Decode + Printable;","parent":{"krate":0,"index":1108},"children":[],"decl_id":null,"docs":" Additional information that is returned by `dispatch`. Can be used to supply the caller\n with information about a `Dispatchable` that is ownly known post dispatch.\n","sig":null,"attributes":[{"value":"/ Additional information that is returned by `dispatch`. Can be used to supply the caller","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153962,"byte_end":154053,"line_start":720,"line_end":720,"column_start":2,"column_end":93}},{"value":"/ with information about a `Dispatchable` that is ownly known post dispatch.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":154055,"byte_end":154133,"line_start":721,"line_end":721,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":154277,"byte_end":154285,"line_start":724,"line_end":724,"column_start":5,"column_end":13},"name":"dispatch","qualname":"::traits::Dispatchable::dispatch","value":"pub fn dispatch(Self, Self::Origin)\n-> crate::DispatchResultWithInfo<Self::PostInfo>","parent":{"krate":0,"index":1108},"children":[],"decl_id":null,"docs":" Actually dispatch this call and return the result of it.\n","sig":null,"attributes":[{"value":"/ Actually dispatch this call and return the result of it.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":154212,"byte_end":154272,"line_start":723,"line_end":723,"column_start":2,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":1114},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":154439,"byte_end":154453,"line_start":728,"line_end":728,"column_start":10,"column_end":24},"name":"DispatchInfoOf","qualname":"::traits::DispatchInfoOf","value":"<T as Dispatchable>::Info","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to reference the `Info` type of a `Dispatchable`.\n","sig":null,"attributes":[{"value":"/ Shortcut to reference the `Info` type of a `Dispatchable`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":154367,"byte_end":154429,"line_start":727,"line_end":727,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1116},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":154562,"byte_end":154580,"line_start":730,"line_end":730,"column_start":10,"column_end":28},"name":"PostDispatchInfoOf","qualname":"::traits::PostDispatchInfoOf","value":"<T as Dispatchable>::PostInfo","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to reference the `PostInfo` type of a `Dispatchable`.\n","sig":null,"attributes":[{"value":"/ Shortcut to reference the `PostInfo` type of a `Dispatchable`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":154486,"byte_end":154552,"line_start":729,"line_end":729,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":1124},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155092,"byte_end":155107,"line_start":744,"line_end":744,"column_start":11,"column_end":26},"name":"SignedExtension","qualname":"::traits::SignedExtension","value":"SignedExtension: Codec + Debug + Sync + Send + Clone + Eq + PartialEq","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1138}],"decl_id":null,"docs":" Means by which a transaction may be extended. This type embodies both the data and the logic\n that should be additionally associated with the transaction. It should be plain old data.\n","sig":null,"attributes":[{"value":"/ Means by which a transaction may be extended. This type embodies both the data and the logic","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":154891,"byte_end":154987,"line_start":742,"line_end":742,"column_start":1,"column_end":97}},{"value":"/ that should be additionally associated with the transaction. It should be plain old data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":154988,"byte_end":155081,"line_start":743,"line_end":743,"column_start":1,"column_end":94}}]},{"kind":"Const","id":{"krate":0,"index":1125},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155327,"byte_end":155337,"line_start":749,"line_end":749,"column_start":8,"column_end":18},"name":"IDENTIFIER","qualname":"::traits::SignedExtension::IDENTIFIER","value":"&'static str","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Unique identifier of this signed extension.","sig":null,"attributes":[{"value":"/ Unique identifier of this signed extension.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155165,"byte_end":155212,"line_start":745,"line_end":745,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155214,"byte_end":155217,"line_start":746,"line_end":746,"column_start":2,"column_end":5}},{"value":"/ This will be exposed in the metadata to identify the signed extension used","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155219,"byte_end":155297,"line_start":747,"line_end":747,"column_start":2,"column_end":80}},{"value":"/ in an extrinsic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155299,"byte_end":155319,"line_start":748,"line_end":748,"column_start":2,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1126},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155409,"byte_end":155418,"line_start":752,"line_end":752,"column_start":7,"column_end":16},"name":"AccountId","qualname":"::traits::SignedExtension::AccountId","value":"type AccountId;","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" The type which encodes the sender identity.\n","sig":null,"attributes":[{"value":"/ The type which encodes the sender identity.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155355,"byte_end":155402,"line_start":751,"line_end":751,"column_start":2,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1127},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155482,"byte_end":155486,"line_start":755,"line_end":755,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::SignedExtension::Call","value":"type Call: Dispatchable;","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" The type which encodes the call to be dispatched.\n","sig":null,"attributes":[{"value":"/ The type which encodes the call to be dispatched.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155422,"byte_end":155475,"line_start":754,"line_end":754,"column_start":2,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":1128},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155670,"byte_end":155686,"line_start":759,"line_end":759,"column_start":7,"column_end":23},"name":"AdditionalSigned","qualname":"::traits::SignedExtension::AdditionalSigned","value":"type AdditionalSigned: Encode;","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Any additional data that will go into the signed payload. This may be created dynamically\n from the transaction using the `additional_signed` function.\n","sig":null,"attributes":[{"value":"/ Any additional data that will go into the signed payload. This may be created dynamically","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155504,"byte_end":155597,"line_start":757,"line_end":757,"column_start":2,"column_end":95}},{"value":"/ from the transaction using the `additional_signed` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155599,"byte_end":155663,"line_start":758,"line_end":758,"column_start":2,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1129},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155797,"byte_end":155800,"line_start":762,"line_end":762,"column_start":7,"column_end":10},"name":"Pre","qualname":"::traits::SignedExtension::Pre","value":"type Pre: Default;","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" The type that encodes information that can be passed from pre_dispatch to post-dispatch.\n","sig":null,"attributes":[{"value":"/ The type that encodes information that can be passed from pre_dispatch to post-dispatch.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155698,"byte_end":155790,"line_start":761,"line_end":761,"column_start":2,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155999,"byte_end":156016,"line_start":766,"line_end":766,"column_start":5,"column_end":22},"name":"additional_signed","qualname":"::traits::SignedExtension::additional_signed","value":"pub fn additional_signed(&Self)\n-> Result<Self::AdditionalSigned, TransactionValidityError>","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Construct any additional data that should be in the signed payload of the transaction. Can\n also perform any pre-signature-verification checks and return an error if needed.\n","sig":null,"attributes":[{"value":"/ Construct any additional data that should be in the signed payload of the transaction. Can","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155813,"byte_end":155907,"line_start":764,"line_end":764,"column_start":2,"column_end":96}},{"value":"/ also perform any pre-signature-verification checks and return an error if needed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155909,"byte_end":155994,"line_start":765,"line_end":765,"column_start":2,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156528,"byte_end":156536,"line_start":777,"line_end":777,"column_start":5,"column_end":13},"name":"validate","qualname":"::traits::SignedExtension::validate","value":"pub fn validate(&Self, &Self::AccountId, &Self::Call,\n                &DispatchInfoOf<Self::Call>, usize) -> TransactionValidity","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Validate a signed transaction for the transaction queue.","sig":null,"attributes":[{"value":"/ Validate a signed transaction for the transaction queue.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156087,"byte_end":156147,"line_start":768,"line_end":768,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156149,"byte_end":156152,"line_start":769,"line_end":769,"column_start":2,"column_end":5}},{"value":"/ This function can be called frequently by the transaction queue,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156154,"byte_end":156222,"line_start":770,"line_end":770,"column_start":2,"column_end":70}},{"value":"/ to obtain transaction validity against current state.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156224,"byte_end":156281,"line_start":771,"line_end":771,"column_start":2,"column_end":59}},{"value":"/ It should perform all checks that determine a valid transaction,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156283,"byte_end":156351,"line_start":772,"line_end":772,"column_start":2,"column_end":70}},{"value":"/ that can pay for its execution and quickly eliminate ones","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156353,"byte_end":156414,"line_start":773,"line_end":773,"column_start":2,"column_end":63}},{"value":"/ that are stale or incorrect.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156416,"byte_end":156448,"line_start":774,"line_end":774,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156450,"byte_end":156453,"line_start":775,"line_end":775,"column_start":2,"column_end":5}},{"value":"/ Make sure to perform the same checks in `pre_dispatch` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156455,"byte_end":156523,"line_start":776,"line_end":776,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":157103,"byte_end":157115,"line_start":795,"line_end":795,"column_start":5,"column_end":17},"name":"pre_dispatch","qualname":"::traits::SignedExtension::pre_dispatch","value":"pub fn pre_dispatch(Self, &Self::AccountId, &Self::Call,\n                    &DispatchInfoOf<Self::Call>, usize)\n-> Result<Self::Pre, TransactionValidityError>","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Do any pre-flight stuff for a signed transaction.","sig":null,"attributes":[{"value":"/ Do any pre-flight stuff for a signed transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156715,"byte_end":156768,"line_start":787,"line_end":787,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156770,"byte_end":156773,"line_start":788,"line_end":788,"column_start":2,"column_end":5}},{"value":"/ Note this function by default delegates to `validate`, so that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156775,"byte_end":156841,"line_start":789,"line_end":789,"column_start":2,"column_end":68}},{"value":"/ all checks performed for the transaction queue are also performed during","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156843,"byte_end":156919,"line_start":790,"line_end":790,"column_start":2,"column_end":78}},{"value":"/ the dispatch phase (applying the extrinsic).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156921,"byte_end":156969,"line_start":791,"line_end":791,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156971,"byte_end":156974,"line_start":792,"line_end":792,"column_start":2,"column_end":5}},{"value":"/ If you ever override this function, you need to make sure to always","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":156976,"byte_end":157047,"line_start":793,"line_end":793,"column_start":2,"column_end":73}},{"value":"/ perform the same validation as in `validate`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":157049,"byte_end":157098,"line_start":794,"line_end":794,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":157800,"byte_end":157817,"line_start":815,"line_end":815,"column_start":5,"column_end":22},"name":"validate_unsigned","qualname":"::traits::SignedExtension::validate_unsigned","value":"pub fn validate_unsigned(&Self::Call, &DispatchInfoOf<Self::Call>, usize)\n-> TransactionValidity","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Validate an unsigned transaction for the transaction queue.","sig":null,"attributes":[{"value":"/ Validate an unsigned transaction for the transaction queue.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":157375,"byte_end":157438,"line_start":807,"line_end":807,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":157440,"byte_end":157443,"line_start":808,"line_end":808,"column_start":2,"column_end":5}},{"value":"/ This function can be called frequently by the transaction queue","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":157445,"byte_end":157512,"line_start":809,"line_end":809,"column_start":2,"column_end":69}},{"value":"/ to obtain transaction validity against current state.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":157514,"byte_end":157571,"line_start":810,"line_end":810,"column_start":2,"column_end":59}},{"value":"/ It should perform all checks that determine a valid unsigned transaction,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":157573,"byte_end":157650,"line_start":811,"line_end":811,"column_start":2,"column_end":79}},{"value":"/ and quickly eliminate ones that are stale or incorrect.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":157652,"byte_end":157711,"line_start":812,"line_end":812,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":157713,"byte_end":157716,"line_start":813,"line_end":813,"column_start":2,"column_end":5}},{"value":"/ Make sure to perform the same checks in `pre_dispatch_unsigned` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":157718,"byte_end":157795,"line_start":814,"line_end":814,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158369,"byte_end":158390,"line_start":831,"line_end":831,"column_start":5,"column_end":26},"name":"pre_dispatch_unsigned","qualname":"::traits::SignedExtension::pre_dispatch_unsigned","value":"pub fn pre_dispatch_unsigned(&Self::Call, &DispatchInfoOf<Self::Call>, usize)\n-> Result<Self::Pre, TransactionValidityError>","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Do any pre-flight stuff for a unsigned transaction.","sig":null,"attributes":[{"value":"/ Do any pre-flight stuff for a unsigned transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":157961,"byte_end":158016,"line_start":823,"line_end":823,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158018,"byte_end":158021,"line_start":824,"line_end":824,"column_start":2,"column_end":5}},{"value":"/ Note this function by default delegates to `validate_unsigned`, so that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158023,"byte_end":158098,"line_start":825,"line_end":825,"column_start":2,"column_end":77}},{"value":"/ all checks performed for the transaction queue are also performed during","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158100,"byte_end":158176,"line_start":826,"line_end":826,"column_start":2,"column_end":78}},{"value":"/ the dispatch phase (applying the extrinsic).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158178,"byte_end":158226,"line_start":827,"line_end":827,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158228,"byte_end":158231,"line_start":828,"line_end":828,"column_start":2,"column_end":5}},{"value":"/ If you ever override this function, you need to make sure to always","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158233,"byte_end":158304,"line_start":829,"line_end":829,"column_start":2,"column_end":73}},{"value":"/ perform the same validation as in `validate_unsigned`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158306,"byte_end":158364,"line_start":830,"line_end":830,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159420,"byte_end":159433,"line_start":854,"line_end":854,"column_start":5,"column_end":18},"name":"post_dispatch","qualname":"::traits::SignedExtension::post_dispatch","value":"pub fn post_dispatch(Self::Pre, &DispatchInfoOf<Self::Call>,\n                     &PostDispatchInfoOf<Self::Call>, usize, &DispatchResult)\n-> Result<(), TransactionValidityError>","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Do any post-flight stuff for an extrinsic.","sig":null,"attributes":[{"value":"/ Do any post-flight stuff for an extrinsic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158622,"byte_end":158668,"line_start":841,"line_end":841,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158670,"byte_end":158673,"line_start":842,"line_end":842,"column_start":2,"column_end":5}},{"value":"/ This gets given the `DispatchResult` `_result` from the extrinsic and can, if desired,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158675,"byte_end":158765,"line_start":843,"line_end":843,"column_start":2,"column_end":92}},{"value":"/ introduce a `TransactionValidityError`, causing the block to become invalid for including","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158767,"byte_end":158860,"line_start":844,"line_end":844,"column_start":2,"column_end":95}},{"value":"/ it.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158862,"byte_end":158869,"line_start":845,"line_end":845,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158871,"byte_end":158874,"line_start":846,"line_end":846,"column_start":2,"column_end":5}},{"value":"/ WARNING: It is dangerous to return an error here. To do so will fundamentally invalidate the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158876,"byte_end":158972,"line_start":847,"line_end":847,"column_start":2,"column_end":98}},{"value":"/ transaction and any block that it is included in, causing the block author to not be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":158974,"byte_end":159062,"line_start":848,"line_end":848,"column_start":2,"column_end":90}},{"value":"/ compensated for their work in validating the transaction or producing the block so far.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159064,"byte_end":159155,"line_start":849,"line_end":849,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159157,"byte_end":159160,"line_start":850,"line_end":850,"column_start":2,"column_end":5}},{"value":"/ It can only be used safely when you *know* that the extrinsic is one that can only be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159162,"byte_end":159251,"line_start":851,"line_end":851,"column_start":2,"column_end":91}},{"value":"/ introduced by the current block author; generally this implies that it is an inherent and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159253,"byte_end":159346,"line_start":852,"line_end":852,"column_start":2,"column_end":95}},{"value":"/ will come from either an offchain-worker or via `InherentData`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159348,"byte_end":159415,"line_start":853,"line_end":853,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":160030,"byte_end":160040,"line_start":871,"line_end":871,"column_start":5,"column_end":15},"name":"identifier","qualname":"::traits::SignedExtension::identifier","value":"pub fn identifier() -> Vec<&'static str>","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Returns the list of unique identifier for this signed extension.","sig":null,"attributes":[{"value":"/ Returns the list of unique identifier for this signed extension.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159641,"byte_end":159709,"line_start":864,"line_end":864,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159711,"byte_end":159714,"line_start":865,"line_end":865,"column_start":2,"column_end":5}},{"value":"/ As a [`SignedExtension`] can be a tuple of [`SignedExtension`]s we need to return a `Vec`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159716,"byte_end":159809,"line_start":866,"line_end":866,"column_start":2,"column_end":95}},{"value":"/ that holds all the unique identifiers. Each individual `SignedExtension` must return","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159811,"byte_end":159899,"line_start":867,"line_end":867,"column_start":2,"column_end":90}},{"value":"/ *exactly* one identifier.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159901,"byte_end":159930,"line_start":868,"line_end":868,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159932,"byte_end":159935,"line_start":869,"line_end":869,"column_start":2,"column_end":5}},{"value":"/ This method provides a default implementation that returns `vec![SELF::IDENTIFIER]`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":159937,"byte_end":160025,"line_start":870,"line_end":870,"column_start":2,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":1146},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":162938,"byte_end":162947,"line_start":960,"line_end":960,"column_start":11,"column_end":20},"name":"Applyable","qualname":"::traits::Applyable","value":"Applyable: Sized + Send + Sync","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1150}],"decl_id":null,"docs":" An \"executable\" piece of information, used by the standard Substrate Executive in order to\n enact a piece of extrinsic information by marshalling and dispatching to a named function\n call.","sig":null,"attributes":[{"value":"/ An \"executable\" piece of information, used by the standard Substrate Executive in order to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":162562,"byte_end":162656,"line_start":954,"line_end":954,"column_start":1,"column_end":95}},{"value":"/ enact a piece of extrinsic information by marshalling and dispatching to a named function","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":162657,"byte_end":162750,"line_start":955,"line_end":955,"column_start":1,"column_end":94}},{"value":"/ call.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":162751,"byte_end":162760,"line_start":956,"line_end":956,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":162761,"byte_end":162764,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ Also provides information on to whom this information is attributable and an index that allows","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":162765,"byte_end":162863,"line_start":958,"line_end":958,"column_start":1,"column_end":99}},{"value":"/ each piece of attributable information to be disambiguated.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":162864,"byte_end":162927,"line_start":959,"line_end":959,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1147},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163053,"byte_end":163057,"line_start":962,"line_end":962,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::Applyable::Call","value":"type Call: Dispatchable;","parent":{"krate":0,"index":1146},"children":[],"decl_id":null,"docs":" Type by which we can dispatch. Restricts the `UnsignedValidator` type.\n","sig":null,"attributes":[{"value":"/ Type by which we can dispatch. Restricts the `UnsignedValidator` type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":162972,"byte_end":163046,"line_start":961,"line_end":961,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163167,"byte_end":163175,"line_start":965,"line_end":965,"column_start":5,"column_end":13},"name":"validate","qualname":"::traits::Applyable::validate","value":"pub fn validate<V: ValidateUnsigned<Call =\n                Self::Call>>(&Self, TransactionSource,\n                             &DispatchInfoOf<Self::Call>, usize)\n-> TransactionValidity","parent":{"krate":0,"index":1146},"children":[],"decl_id":null,"docs":" Checks to see if this is a valid *transaction*. It returns information on it if so.\n","sig":null,"attributes":[{"value":"/ Checks to see if this is a valid *transaction*. It returns information on it if so.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163075,"byte_end":163162,"line_start":964,"line_end":964,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163455,"byte_end":163460,"line_start":974,"line_end":974,"column_start":5,"column_end":10},"name":"apply","qualname":"::traits::Applyable::apply","value":"pub fn apply<V: ValidateUnsigned<Call =\n             Self::Call>>(Self, &DispatchInfoOf<Self::Call>, usize)\n-> crate::ApplyExtrinsicResultWithInfo<PostDispatchInfoOf<Self::Call>>","parent":{"krate":0,"index":1146},"children":[],"decl_id":null,"docs":" Executes all necessary logic needed prior to dispatch and deconstructs into function call,\n index and sender.\n","sig":null,"attributes":[{"value":"/ Executes all necessary logic needed prior to dispatch and deconstructs into function call,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163333,"byte_end":163427,"line_start":972,"line_end":972,"column_start":2,"column_end":96}},{"value":"/ index and sender.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163429,"byte_end":163450,"line_start":973,"line_end":973,"column_start":2,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":1152},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163722,"byte_end":163741,"line_start":982,"line_end":982,"column_start":11,"column_end":30},"name":"GetRuntimeBlockType","qualname":"::traits::GetRuntimeBlockType","value":"GetRuntimeBlockType","parent":null,"children":[{"krate":0,"index":1153}],"decl_id":null,"docs":" A marker trait for something that knows the type of the runtime block.\n","sig":null,"attributes":[{"value":"/ A marker trait for something that knows the type of the runtime block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163637,"byte_end":163711,"line_start":981,"line_end":981,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":1153},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163780,"byte_end":163792,"line_start":984,"line_end":984,"column_start":7,"column_end":19},"name":"RuntimeBlock","qualname":"::traits::GetRuntimeBlockType::RuntimeBlock","value":"type RuntimeBlock: self::Block;","parent":{"krate":0,"index":1152},"children":[],"decl_id":null,"docs":" The `RuntimeBlock` type.\n","sig":null,"attributes":[{"value":"/ The `RuntimeBlock` type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163745,"byte_end":163773,"line_start":983,"line_end":983,"column_start":2,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1154},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163892,"byte_end":163908,"line_start":988,"line_end":988,"column_start":11,"column_end":27},"name":"GetNodeBlockType","qualname":"::traits::GetNodeBlockType","value":"GetNodeBlockType","parent":null,"children":[{"krate":0,"index":1155}],"decl_id":null,"docs":" A marker trait for something that knows the type of the node block.\n","sig":null,"attributes":[{"value":"/ A marker trait for something that knows the type of the node block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163810,"byte_end":163881,"line_start":987,"line_end":987,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":1155},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163944,"byte_end":163953,"line_start":990,"line_end":990,"column_start":7,"column_end":16},"name":"NodeBlock","qualname":"::traits::GetNodeBlockType::NodeBlock","value":"type NodeBlock: self::Block;","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":" The `NodeBlock` type.\n","sig":null,"attributes":[{"value":"/ The `NodeBlock` type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163912,"byte_end":163937,"line_start":989,"line_end":989,"column_start":2,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":1156},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164312,"byte_end":164328,"line_start":999,"line_end":999,"column_start":11,"column_end":27},"name":"ValidateUnsigned","qualname":"::traits::ValidateUnsigned","value":"ValidateUnsigned","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1160}],"decl_id":null,"docs":" Something that can validate unsigned extrinsics for the transaction pool.","sig":null,"attributes":[{"value":"/ Something that can validate unsigned extrinsics for the transaction pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":163971,"byte_end":164048,"line_start":993,"line_end":993,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164049,"byte_end":164052,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ Note that any checks done here are only used for determining the validity of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164053,"byte_end":164133,"line_start":995,"line_end":995,"column_start":1,"column_end":81}},{"value":"/ the transaction for the transaction pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164134,"byte_end":164179,"line_start":996,"line_end":996,"column_start":1,"column_end":46}},{"value":"/ During block execution phase one need to perform the same checks anyway,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164180,"byte_end":164256,"line_start":997,"line_end":997,"column_start":1,"column_end":77}},{"value":"/ since this function is not being called.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164257,"byte_end":164301,"line_start":998,"line_end":998,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1157},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164363,"byte_end":164367,"line_start":1001,"line_end":1001,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::ValidateUnsigned::Call","value":"type Call;","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" The call to validate\n","sig":null,"attributes":[{"value":"/ The call to validate","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164332,"byte_end":164356,"line_start":1000,"line_end":1000,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164852,"byte_end":164864,"line_start":1013,"line_end":1013,"column_start":5,"column_end":17},"name":"pre_dispatch","qualname":"::traits::ValidateUnsigned::pre_dispatch","value":"pub fn pre_dispatch(&Self::Call) -> Result<(), TransactionValidityError>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Validate the call right before dispatch.","sig":null,"attributes":[{"value":"/ Validate the call right before dispatch.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164371,"byte_end":164415,"line_start":1003,"line_end":1003,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164417,"byte_end":164420,"line_start":1004,"line_end":1004,"column_start":2,"column_end":5}},{"value":"/ This method should be used to prevent transactions already in the pool","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164422,"byte_end":164496,"line_start":1005,"line_end":1005,"column_start":2,"column_end":76}},{"value":"/ (i.e. passing `validate_unsigned`) from being included in blocks","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164498,"byte_end":164566,"line_start":1006,"line_end":1006,"column_start":2,"column_end":70}},{"value":"/ in case we know they now became invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164568,"byte_end":164612,"line_start":1007,"line_end":1007,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164614,"byte_end":164617,"line_start":1008,"line_end":1008,"column_start":2,"column_end":5}},{"value":"/ By default it's a good idea to call `validate_unsigned` from within","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164619,"byte_end":164690,"line_start":1009,"line_end":1009,"column_start":2,"column_end":73}},{"value":"/ this function again to make sure we never include an invalid transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164692,"byte_end":164769,"line_start":1010,"line_end":1010,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164771,"byte_end":164774,"line_start":1011,"line_end":1011,"column_start":2,"column_end":5}},{"value":"/ Changes made to storage WILL be persisted if the call returns `Ok`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":164776,"byte_end":164847,"line_start":1012,"line_end":1012,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165271,"byte_end":165288,"line_start":1025,"line_end":1025,"column_start":5,"column_end":22},"name":"validate_unsigned","qualname":"::traits::ValidateUnsigned::validate_unsigned","value":"pub fn validate_unsigned(TransactionSource, &Self::Call)\n-> TransactionValidity","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Return the validity of the call","sig":null,"attributes":[{"value":"/ Return the validity of the call","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165031,"byte_end":165066,"line_start":1019,"line_end":1019,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165068,"byte_end":165071,"line_start":1020,"line_end":1020,"column_start":2,"column_end":5}},{"value":"/ This doesn't execute any side-effects; it merely checks","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165073,"byte_end":165132,"line_start":1021,"line_end":1021,"column_start":2,"column_end":61}},{"value":"/ whether the transaction would panic if it were included or not.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165134,"byte_end":165201,"line_start":1022,"line_end":1022,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165203,"byte_end":165206,"line_start":1023,"line_end":1023,"column_start":2,"column_end":5}},{"value":"/ Changes made to storage should be discarded by caller.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165208,"byte_end":165266,"line_start":1024,"line_end":1024,"column_start":2,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1161},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165490,"byte_end":165500,"line_start":1030,"line_end":1030,"column_start":11,"column_end":21},"name":"OpaqueKeys","qualname":"::traits::OpaqueKeys","value":"OpaqueKeys: Clone","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1167}],"decl_id":null,"docs":" Opaque data type that may be destructured into a series of raw byte slices (which represent\n individual keys).\n","sig":null,"attributes":[{"value":"/ Opaque data type that may be destructured into a series of raw byte slices (which represent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165362,"byte_end":165457,"line_start":1028,"line_end":1028,"column_start":1,"column_end":96}},{"value":"/ individual keys).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165458,"byte_end":165479,"line_start":1029,"line_end":1029,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1162},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165593,"byte_end":165611,"line_start":1032,"line_end":1032,"column_start":7,"column_end":25},"name":"KeyTypeIdProviders","qualname":"::traits::OpaqueKeys::KeyTypeIdProviders","value":"type KeyTypeIdProviders;","parent":{"krate":0,"index":1161},"children":[],"decl_id":null,"docs":" Types bound to this opaque keys that provide the key type ids returned.\n","sig":null,"attributes":[{"value":"/ Types bound to this opaque keys that provide the key type ids returned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165511,"byte_end":165586,"line_start":1031,"line_end":1031,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165670,"byte_end":165677,"line_start":1035,"line_end":1035,"column_start":5,"column_end":12},"name":"key_ids","qualname":"::traits::OpaqueKeys::key_ids","value":"pub fn key_ids() -> &'static [crate::KeyTypeId]","parent":{"krate":0,"index":1161},"children":[],"decl_id":null,"docs":" Return the key-type IDs supported by this set.\n","sig":null,"attributes":[{"value":"/ Return the key-type IDs supported by this set.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165615,"byte_end":165665,"line_start":1034,"line_end":1034,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165768,"byte_end":165775,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12},"name":"get_raw","qualname":"::traits::OpaqueKeys::get_raw","value":"pub fn get_raw(&Self, super::KeyTypeId) -> &[u8]","parent":{"krate":0,"index":1161},"children":[],"decl_id":null,"docs":" Get the raw bytes of key with key-type ID `i`.\n","sig":null,"attributes":[{"value":"/ Get the raw bytes of key with key-type ID `i`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165713,"byte_end":165763,"line_start":1036,"line_end":1036,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165865,"byte_end":165868,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8},"name":"get","qualname":"::traits::OpaqueKeys::get","value":"pub fn get<T: Decode>(&Self, super::KeyTypeId) -> Option<T>","parent":{"krate":0,"index":1161},"children":[],"decl_id":null,"docs":" Get the decoded key with key-type ID `i`.\n","sig":null,"attributes":[{"value":"/ Get the decoded key with key-type ID `i`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165815,"byte_end":165860,"line_start":1038,"line_end":1038,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":166016,"byte_end":166040,"line_start":1043,"line_end":1043,"column_start":5,"column_end":29},"name":"ownership_proof_is_valid","qualname":"::traits::OpaqueKeys::ownership_proof_is_valid","value":"pub fn ownership_proof_is_valid(&Self, &[u8]) -> bool","parent":{"krate":0,"index":1161},"children":[],"decl_id":null,"docs":" Verify a proof of ownership for the keys.\n","sig":null,"attributes":[{"value":"/ Verify a proof of ownership for the keys.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165966,"byte_end":166011,"line_start":1042,"line_end":1042,"column_start":2,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1168},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":166275,"byte_end":166291,"line_start":1050,"line_end":1050,"column_start":12,"column_end":28},"name":"AppendZerosInput","qualname":"::traits::AppendZerosInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" Input that adds infinite number of zero after wrapped input.","sig":null,"attributes":[{"value":"/ Input that adds infinite number of zero after wrapped input.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":166083,"byte_end":166147,"line_start":1046,"line_end":1046,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":166148,"byte_end":166151,"line_start":1047,"line_end":1047,"column_start":1,"column_end":4}},{"value":"/ This can add an infinite stream of zeros onto any input, not just a slice as with","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":166152,"byte_end":166237,"line_start":1048,"line_end":1048,"column_start":1,"column_end":86}},{"value":"/ `TrailingZerosInput`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":166238,"byte_end":166263,"line_start":1049,"line_end":1049,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":166412,"byte_end":166415,"line_start":1054,"line_end":1054,"column_start":9,"column_end":12},"name":"new","qualname":"<AppendZerosInput>::new","value":"pub fn new(&'a mut T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from the given byte array.\n","sig":null,"attributes":[{"value":"/ Create a new instance from the given byte array.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":166351,"byte_end":166403,"line_start":1053,"line_end":1053,"column_start":2,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1182},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":167315,"byte_end":167332,"line_start":1093,"line_end":1093,"column_start":12,"column_end":29},"name":"TrailingZeroInput","qualname":"::traits::TrailingZeroInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" Input that adds infinite number of zero after wrapped input.\n","sig":null,"attributes":[{"value":"/ Input that adds infinite number of zero after wrapped input.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":167239,"byte_end":167303,"line_start":1092,"line_end":1092,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":167444,"byte_end":167447,"line_start":1097,"line_end":1097,"column_start":9,"column_end":12},"name":"new","qualname":"<TrailingZeroInput>::new","value":"pub fn new(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from the given byte array.\n","sig":null,"attributes":[{"value":"/ Create a new instance from the given byte array.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":167383,"byte_end":167435,"line_start":1096,"line_end":1096,"column_start":2,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1193},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168031,"byte_end":168050,"line_start":1120,"line_end":1120,"column_start":11,"column_end":30},"name":"AccountIdConversion","qualname":"::traits::AccountIdConversion","value":"AccountIdConversion<AccountId>: Sized","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200}],"decl_id":null,"docs":" This type can be converted into and possibly from an AccountId (which itself is generic).\n","sig":null,"attributes":[{"value":"/ This type can be converted into and possibly from an AccountId (which itself is generic).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":167927,"byte_end":168020,"line_start":1119,"line_end":1119,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168128,"byte_end":168140,"line_start":1122,"line_end":1122,"column_start":5,"column_end":17},"name":"into_account","qualname":"::traits::AccountIdConversion::into_account","value":"pub fn into_account(&Self) -> AccountId","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" Convert into an account ID. This is infallible.\n","sig":null,"attributes":[{"value":"/ Convert into an account ID. This is infallible.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168072,"byte_end":168123,"line_start":1121,"line_end":1121,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168266,"byte_end":168282,"line_start":1125,"line_end":1125,"column_start":5,"column_end":21},"name":"try_from_account","qualname":"::traits::AccountIdConversion::try_from_account","value":"pub fn try_from_account(&AccountId) -> Option<Self>","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" Try to convert an account ID into this type. Might not succeed.\n","sig":null,"attributes":[{"value":"/ Try to convert an account ID into this type. Might not succeed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168194,"byte_end":168261,"line_start":1124,"line_end":1124,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168880,"byte_end":168896,"line_start":1138,"line_end":1138,"column_start":5,"column_end":21},"name":"into_sub_account","qualname":"::traits::AccountIdConversion::into_sub_account","value":"pub fn into_sub_account<S: Encode>(&Self, S) -> AccountId","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" Convert this value amalgamated with the a secondary \"sub\" value into an account ID. This is\n infallible.","sig":null,"attributes":[{"value":"/ Convert this value amalgamated with the a secondary \"sub\" value into an account ID. This is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168372,"byte_end":168467,"line_start":1129,"line_end":1129,"column_start":2,"column_end":97}},{"value":"/ infallible.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168469,"byte_end":168484,"line_start":1130,"line_end":1130,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168486,"byte_end":168489,"line_start":1131,"line_end":1131,"column_start":2,"column_end":5}},{"value":"/ NOTE: The account IDs from this and from `into_account` are *not* guaranteed to be distinct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168491,"byte_end":168586,"line_start":1132,"line_end":1132,"column_start":2,"column_end":97}},{"value":"/ for any given value of `self`, nor are different invocations to this with different types","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168588,"byte_end":168681,"line_start":1133,"line_end":1133,"column_start":2,"column_end":95}},{"value":"/ `T`. For example, the following will all encode to the same account ID value:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168683,"byte_end":168764,"line_start":1134,"line_end":1134,"column_start":2,"column_end":83}},{"value":"/ - `self.into_sub_account(0u32)`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168766,"byte_end":168801,"line_start":1135,"line_end":1135,"column_start":2,"column_end":37}},{"value":"/ - `self.into_sub_account(vec![0u8; 0])`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168803,"byte_end":168846,"line_start":1136,"line_end":1136,"column_start":2,"column_end":45}},{"value":"/ - `self.into_account()`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168848,"byte_end":168875,"line_start":1137,"line_end":1137,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":169011,"byte_end":169031,"line_start":1141,"line_end":1141,"column_start":5,"column_end":25},"name":"try_from_sub_account","qualname":"::traits::AccountIdConversion::try_from_sub_account","value":"pub fn try_from_sub_account<S: Decode>(&AccountId) -> Option<(Self, S)>","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" Try to convert an account ID into this type. Might not succeed.\n","sig":null,"attributes":[{"value":"/ Try to convert an account ID into this type. Might not succeed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168939,"byte_end":169006,"line_start":1140,"line_end":1140,"column_start":2,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":1214},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":174053,"byte_end":174062,"line_start":1320,"line_end":1320,"column_start":11,"column_end":20},"name":"Printable","qualname":"::traits::Printable","value":"Printable","parent":null,"children":[{"krate":0,"index":1215}],"decl_id":null,"docs":" Trait for things which can be printed from the runtime.\n","sig":null,"attributes":[{"value":"/ Trait for things which can be printed from the runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":173983,"byte_end":174042,"line_start":1319,"line_end":1319,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":174092,"byte_end":174097,"line_start":1322,"line_end":1322,"column_start":5,"column_end":10},"name":"print","qualname":"::traits::Printable::print","value":"pub fn print(&Self)","parent":{"krate":0,"index":1214},"children":[],"decl_id":null,"docs":" Print the object.\n","sig":null,"attributes":[{"value":"/ Print the object.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":174066,"byte_end":174087,"line_start":1321,"line_end":1321,"column_start":2,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":1235},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":175101,"byte_end":175110,"line_start":1392,"line_end":1392,"column_start":11,"column_end":20},"name":"BlockIdTo","qualname":"::traits::BlockIdTo","value":"BlockIdTo<Block: self::Block>","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239}],"decl_id":null,"docs":" Something that can convert a [`BlockId`](crate::generic::BlockId) to a number or a hash.\n","sig":null,"attributes":[{"value":"/ Something that can convert a [`BlockId`](crate::generic::BlockId) to a number or a hash.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":174974,"byte_end":175066,"line_start":1390,"line_end":1390,"column_start":1,"column_end":93}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":175067,"byte_end":175090,"line_start":1391,"line_end":1391,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":1237},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":175199,"byte_end":175204,"line_start":1394,"line_end":1394,"column_start":7,"column_end":12},"name":"Error","qualname":"::traits::BlockIdTo::Error","value":"type Error: std::fmt::Debug;","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":" The error type that will be returned by the functions.\n","sig":null,"attributes":[{"value":"/ The error type that will be returned by the functions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":175134,"byte_end":175192,"line_start":1393,"line_end":1393,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":175295,"byte_end":175302,"line_start":1397,"line_end":1397,"column_start":5,"column_end":12},"name":"to_hash","qualname":"::traits::BlockIdTo::to_hash","value":"pub fn to_hash(&Self, &crate::generic::BlockId<Block>)\n-> Result<Option<Block::Hash>, Self::Error>","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":" Convert the given `block_id` to the corresponding block hash.\n","sig":null,"attributes":[{"value":"/ Convert the given `block_id` to the corresponding block hash.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":175225,"byte_end":175290,"line_start":1396,"line_end":1396,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":175480,"byte_end":175489,"line_start":1403,"line_end":1403,"column_start":5,"column_end":14},"name":"to_number","qualname":"::traits::BlockIdTo::to_number","value":"pub fn to_number(&Self, &crate::generic::BlockId<Block>)\n-> Result<Option<NumberFor<Block>>, Self::Error>","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":" Convert the given `block_id` to the corresponding block number.\n","sig":null,"attributes":[{"value":"/ Convert the given `block_id` to the corresponding block number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":175408,"byte_end":175475,"line_start":1402,"line_end":1402,"column_start":2,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":1240},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transaction_validity","qualname":"::transaction_validity","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":4574},{"krate":0,"index":1244},{"krate":0,"index":4576},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":3381},{"krate":0,"index":3431},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3418},{"krate":0,"index":3412},{"krate":0,"index":3411},{"krate":0,"index":3409},{"krate":0,"index":3403},{"krate":0,"index":1249},{"krate":0,"index":1252},{"krate":0,"index":3433},{"krate":0,"index":3469},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3456},{"krate":0,"index":3450},{"krate":0,"index":3449},{"krate":0,"index":3447},{"krate":0,"index":3441},{"krate":0,"index":1254},{"krate":0,"index":3471},{"krate":0,"index":3506},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3493},{"krate":0,"index":3487},{"krate":0,"index":3486},{"krate":0,"index":3484},{"krate":0,"index":3478},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1265},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":3508},{"krate":0,"index":3539},{"krate":0,"index":3537},{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3531},{"krate":0,"index":3532},{"krate":0,"index":3525},{"krate":0,"index":3519},{"krate":0,"index":3517},{"krate":0,"index":3515},{"krate":0,"index":3540},{"krate":0,"index":3566},{"krate":0,"index":3562},{"krate":0,"index":3563},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3553},{"krate":0,"index":3548},{"krate":0,"index":3546},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":3568},{"krate":0,"index":3575},{"krate":0,"index":3573},{"krate":0,"index":3571},{"krate":0,"index":1279},{"krate":0,"index":1289},{"krate":0,"index":1291}],"decl_id":null,"docs":" Transaction validity interface.\n","sig":null,"attributes":[{"value":"/ Transaction validity interface.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":178822,"byte_end":178857,"line_start":18,"line_end":18,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1246},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179014,"byte_end":179033,"line_start":25,"line_end":25,"column_start":10,"column_end":29},"name":"TransactionPriority","qualname":"::transaction_validity::TransactionPriority","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Priority for a transaction. Additive. Higher is better.\n","sig":null,"attributes":[{"value":"/ Priority for a transaction. Additive. Higher is better.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":178945,"byte_end":179004,"line_start":24,"line_end":24,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1247},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179174,"byte_end":179194,"line_start":29,"line_end":29,"column_start":10,"column_end":30},"name":"TransactionLongevity","qualname":"::transaction_validity::TransactionLongevity","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Minimum number of blocks a transaction will remain valid for.\n `TransactionLongevity::max_value()` means \"forever\".\n","sig":null,"attributes":[{"value":"/ Minimum number of blocks a transaction will remain valid for.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179042,"byte_end":179107,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ `TransactionLongevity::max_value()` means \"forever\".","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179108,"byte_end":179164,"line_start":28,"line_end":28,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":1248},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179304,"byte_end":179318,"line_start":32,"line_end":32,"column_start":10,"column_end":24},"name":"TransactionTag","qualname":"::transaction_validity::TransactionTag","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Tag for a transaction. No two transactions with the same tag should be placed on-chain.\n","sig":null,"attributes":[{"value":"/ Tag for a transaction. No two transactions with the same tag should be placed on-chain.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179203,"byte_end":179294,"line_start":31,"line_end":31,"column_start":1,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3382},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179572,"byte_end":179576,"line_start":39,"line_end":39,"column_start":2,"column_end":6},"name":"Call","qualname":"::transaction_validity::InvalidTransaction::Call","value":"InvalidTransaction::Call","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" The call of the transaction is not expected.\n","sig":null,"attributes":[{"value":"/ The call of the transaction is not expected.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179522,"byte_end":179570,"line_start":38,"line_end":38,"column_start":2,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3384},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179672,"byte_end":179679,"line_start":41,"line_end":41,"column_start":2,"column_end":9},"name":"Payment","qualname":"::transaction_validity::InvalidTransaction::Payment","value":"InvalidTransaction::Payment","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" General error to do with the inability to pay some fees (e.g. account balance too low).\n","sig":null,"attributes":[{"value":"/ General error to do with the inability to pay some fees (e.g. account balance too low).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179579,"byte_end":179670,"line_start":40,"line_end":40,"column_start":2,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3386},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179771,"byte_end":179777,"line_start":43,"line_end":43,"column_start":2,"column_end":8},"name":"Future","qualname":"::transaction_validity::InvalidTransaction::Future","value":"InvalidTransaction::Future","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" General error to do with the transaction not yet being valid (e.g. nonce too high).\n","sig":null,"attributes":[{"value":"/ General error to do with the transaction not yet being valid (e.g. nonce too high).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179682,"byte_end":179769,"line_start":42,"line_end":42,"column_start":2,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3388},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179863,"byte_end":179868,"line_start":45,"line_end":45,"column_start":2,"column_end":7},"name":"Stale","qualname":"::transaction_validity::InvalidTransaction::Stale","value":"InvalidTransaction::Stale","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" General error to do with the transaction being outdated (e.g. nonce too low).\n","sig":null,"attributes":[{"value":"/ General error to do with the transaction being outdated (e.g. nonce too low).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179780,"byte_end":179861,"line_start":44,"line_end":44,"column_start":2,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3390},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180441,"byte_end":180449,"line_start":55,"line_end":55,"column_start":2,"column_end":10},"name":"BadProof","qualname":"::transaction_validity::InvalidTransaction::BadProof","value":"InvalidTransaction::BadProof","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" General error to do with the transaction's proofs (e.g. signature).","sig":null,"attributes":[{"value":"/ General error to do with the transaction's proofs (e.g. signature).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179871,"byte_end":179942,"line_start":46,"line_end":46,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179944,"byte_end":179947,"line_start":47,"line_end":47,"column_start":2,"column_end":5}},{"value":"/ # Possible causes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179949,"byte_end":179970,"line_start":48,"line_end":48,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179972,"byte_end":179975,"line_start":49,"line_end":49,"column_start":2,"column_end":5}},{"value":"/ When using a signed extension that provides additional data for signing, it is required","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179977,"byte_end":180068,"line_start":50,"line_end":50,"column_start":2,"column_end":93}},{"value":"/ that the signing and the verifying side use the same additional data. Additional","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180070,"byte_end":180154,"line_start":51,"line_end":51,"column_start":2,"column_end":86}},{"value":"/ data will only be used to generate the signature, but will not be part of the transaction","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180156,"byte_end":180249,"line_start":52,"line_end":52,"column_start":2,"column_end":95}},{"value":"/ itself. As the verifying side does not know which additional data was used while signing","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180251,"byte_end":180343,"line_start":53,"line_end":53,"column_start":2,"column_end":94}},{"value":"/ it will only be able to assume a bad signature and cannot express a more meaningful error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180345,"byte_end":180439,"line_start":54,"line_end":54,"column_start":2,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3392},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180894,"byte_end":180911,"line_start":64,"line_end":64,"column_start":2,"column_end":19},"name":"AncientBirthBlock","qualname":"::transaction_validity::InvalidTransaction::AncientBirthBlock","value":"InvalidTransaction::AncientBirthBlock","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" The transaction birth block is ancient.","sig":null,"attributes":[{"value":"/ The transaction birth block is ancient.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180452,"byte_end":180495,"line_start":56,"line_end":56,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180497,"byte_end":180500,"line_start":57,"line_end":57,"column_start":2,"column_end":5}},{"value":"/ # Possible causes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180502,"byte_end":180523,"line_start":58,"line_end":58,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180525,"byte_end":180528,"line_start":59,"line_end":59,"column_start":2,"column_end":5}},{"value":"/ For `FRAME`-based runtimes this would be caused by `current block number","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180530,"byte_end":180606,"line_start":60,"line_end":60,"column_start":2,"column_end":78}},{"value":"/ - Era::birth block number > BlockHashCount`. (e.g. in Polkadot `BlockHashCount` = 2400, so a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180608,"byte_end":180704,"line_start":61,"line_end":61,"column_start":2,"column_end":98}},{"value":"/ transaction with birth block number 1337 would be valid up until block number 1337 + 2400,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180706,"byte_end":180800,"line_start":62,"line_end":62,"column_start":2,"column_end":96}},{"value":"/ after which point the transaction would be considered to have an ancient birth block.)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180802,"byte_end":180892,"line_start":63,"line_end":63,"column_start":2,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3394},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181090,"byte_end":181107,"line_start":69,"line_end":69,"column_start":2,"column_end":19},"name":"ExhaustsResources","qualname":"::transaction_validity::InvalidTransaction::ExhaustsResources","value":"InvalidTransaction::ExhaustsResources","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" The transaction would exhaust the resources of current block.","sig":null,"attributes":[{"value":"/ The transaction would exhaust the resources of current block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180914,"byte_end":180979,"line_start":65,"line_end":65,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180981,"byte_end":180984,"line_start":66,"line_end":66,"column_start":2,"column_end":5}},{"value":"/ The transaction might be valid, but there are not enough resources","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":180986,"byte_end":181056,"line_start":67,"line_end":67,"column_start":2,"column_end":72}},{"value":"/ left in the current block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181058,"byte_end":181088,"line_start":68,"line_end":68,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3396},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181183,"byte_end":181189,"line_start":71,"line_end":71,"column_start":2,"column_end":8},"name":"Custom","qualname":"::transaction_validity::InvalidTransaction::Custom","value":"InvalidTransaction::Custom(u8)","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Any other custom invalid validity that is not covered by this enum.\n","sig":null,"attributes":[{"value":"/ Any other custom invalid validity that is not covered by this enum.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181110,"byte_end":181181,"line_start":70,"line_end":70,"column_start":2,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3399},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181458,"byte_end":181470,"line_start":75,"line_end":75,"column_start":2,"column_end":14},"name":"BadMandatory","qualname":"::transaction_validity::InvalidTransaction::BadMandatory","value":"InvalidTransaction::BadMandatory","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" An extrinsic with a Mandatory dispatch resulted in Error. This is indicative of either a\n malicious validator or a buggy `provide_inherent`. In any case, it can result in dangerously\n overweight blocks and therefore if found, invalidates the block.\n","sig":null,"attributes":[{"value":"/ An extrinsic with a Mandatory dispatch resulted in Error. This is indicative of either a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181196,"byte_end":181288,"line_start":72,"line_end":72,"column_start":2,"column_end":94}},{"value":"/ malicious validator or a buggy `provide_inherent`. In any case, it can result in dangerously","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181290,"byte_end":181386,"line_start":73,"line_end":73,"column_start":2,"column_end":98}},{"value":"/ overweight blocks and therefore if found, invalidates the block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181388,"byte_end":181456,"line_start":74,"line_end":74,"column_start":2,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3401},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181608,"byte_end":181625,"line_start":78,"line_end":78,"column_start":2,"column_end":19},"name":"MandatoryDispatch","qualname":"::transaction_validity::InvalidTransaction::MandatoryDispatch","value":"InvalidTransaction::MandatoryDispatch","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" A transaction with a mandatory dispatch. This is invalid; only inherent extrinsics are\n allowed to have mandatory dispatches.\n","sig":null,"attributes":[{"value":"/ A transaction with a mandatory dispatch. This is invalid; only inherent extrinsics are","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181473,"byte_end":181563,"line_start":76,"line_end":76,"column_start":2,"column_end":92}},{"value":"/ allowed to have mandatory dispatches.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181565,"byte_end":181606,"line_start":77,"line_end":77,"column_start":2,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":3381},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179500,"byte_end":179518,"line_start":37,"line_end":37,"column_start":10,"column_end":28},"name":"InvalidTransaction","qualname":"::transaction_validity::InvalidTransaction","value":"pub enum InvalidTransaction {\n\n    /// The call of the transaction is not expected.\n    Call,\n\n    /// General error to do with the inability to pay some fees (e.g. account balance too low).\n    Payment,\n\n    /// General error to do with the transaction not yet being valid (e.g. nonce too high).\n    Future,\n\n    /// General error to do with the transaction being outdated (e.g. nonce too low).\n    Stale,\n\n    /// General error to do with the transaction's proofs (e.g. signature).\n    ///\n    /// # Possible causes\n    ///\n    /// When using a signed extension that provides additional data for signing, it is required\n    /// that the signing and the verifying side use the same additional data. Additional\n    /// data will only be used to generate the signature, but will not be part of the transaction\n    /// itself. As the verifying side does not know which additional data was used while signing\n    /// it will only be able to assume a bad signature and cannot express a more meaningful error.\n    BadProof,\n\n    /// The transaction birth block is ancient.\n    ///\n    /// # Possible causes\n    ///\n    /// For `FRAME`-based runtimes this would be caused by `current block number\n    /// - Era::birth block number > BlockHashCount`. (e.g. in Polkadot `BlockHashCount` = 2400, so a\n    /// transaction with birth block number 1337 would be valid up until block number 1337 + 2400,\n    /// after which point the transaction would be considered to have an ancient birth block.)\n    AncientBirthBlock,\n\n    /// The transaction would exhaust the resources of current block.\n    ///\n    /// The transaction might be valid, but there are not enough resources\n    /// left in the current block.\n    ExhaustsResources,\n\n    /// Any other custom invalid validity that is not covered by this enum.\n    Custom(u8),\n\n    /// An extrinsic with a Mandatory dispatch resulted in Error. This is indicative of either a\n    /// malicious validator or a buggy `provide_inherent`. In any case, it can result in dangerously\n    /// overweight blocks and therefore if found, invalidates the block.\n    BadMandatory,\n\n    /// A transaction with a mandatory dispatch. This is invalid; only inherent extrinsics are\n    /// allowed to have mandatory dispatches.\n    MandatoryDispatch,\n}","parent":null,"children":[{"krate":0,"index":3382},{"krate":0,"index":3384},{"krate":0,"index":3386},{"krate":0,"index":3388},{"krate":0,"index":3390},{"krate":0,"index":3392},{"krate":0,"index":3394},{"krate":0,"index":3396},{"krate":0,"index":3399},{"krate":0,"index":3401}],"decl_id":null,"docs":" An invalid transaction validity.\n","sig":null,"attributes":[{"value":"/ An invalid transaction validity.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":179331,"byte_end":179367,"line_start":34,"line_end":34,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181741,"byte_end":181760,"line_start":83,"line_end":83,"column_start":9,"column_end":28},"name":"exhausted_resources","qualname":"<InvalidTransaction>::exhausted_resources","value":"pub fn exhausted_resources(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the reason for the invalidity was block resource exhaustion.\n","sig":null,"attributes":[{"value":"/ Returns if the reason for the invalidity was block resource exhaustion.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181657,"byte_end":181732,"line_start":82,"line_end":82,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181936,"byte_end":181949,"line_start":91,"line_end":91,"column_start":9,"column_end":22},"name":"was_mandatory","qualname":"<InvalidTransaction>::was_mandatory","value":"pub fn was_mandatory(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the reason for the invalidity was a mandatory call failing.\n","sig":null,"attributes":[{"value":"/ Returns if the reason for the invalidity was a mandatory call failing.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181853,"byte_end":181927,"line_start":90,"line_end":90,"column_start":2,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3434},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":183309,"byte_end":183321,"line_start":125,"line_end":125,"column_start":2,"column_end":14},"name":"CannotLookup","qualname":"::transaction_validity::UnknownTransaction::CannotLookup","value":"UnknownTransaction::CannotLookup","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" Could not lookup some information that is required to validate the transaction.\n","sig":null,"attributes":[{"value":"/ Could not lookup some information that is required to validate the transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":183224,"byte_end":183307,"line_start":124,"line_end":124,"column_start":2,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3436},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":183384,"byte_end":183403,"line_start":127,"line_end":127,"column_start":2,"column_end":21},"name":"NoUnsignedValidator","qualname":"::transaction_validity::UnknownTransaction::NoUnsignedValidator","value":"UnknownTransaction::NoUnsignedValidator","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" No validator found for the given unsigned transaction.\n","sig":null,"attributes":[{"value":"/ No validator found for the given unsigned transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":183324,"byte_end":183382,"line_start":126,"line_end":126,"column_start":2,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3438},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":183479,"byte_end":183485,"line_start":129,"line_end":129,"column_start":2,"column_end":8},"name":"Custom","qualname":"::transaction_validity::UnknownTransaction::Custom","value":"UnknownTransaction::Custom(u8)","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" Any other custom unknown validity that is not covered by this enum.\n","sig":null,"attributes":[{"value":"/ Any other custom unknown validity that is not covered by this enum.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":183406,"byte_end":183477,"line_start":128,"line_end":128,"column_start":2,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":3433},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":183202,"byte_end":183220,"line_start":123,"line_end":123,"column_start":10,"column_end":28},"name":"UnknownTransaction","qualname":"::transaction_validity::UnknownTransaction","value":"pub enum UnknownTransaction {\n\n    /// Could not lookup some information that is required to validate the transaction.\n    CannotLookup,\n\n    /// No validator found for the given unsigned transaction.\n    NoUnsignedValidator,\n\n    /// Any other custom unknown validity that is not covered by this enum.\n    Custom(u8),\n}","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":3436},{"krate":0,"index":3438}],"decl_id":null,"docs":" An unknown transaction validity.\n","sig":null,"attributes":[{"value":"/ An unknown transaction validity.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":183033,"byte_end":183069,"line_start":120,"line_end":120,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3472},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":184194,"byte_end":184201,"line_start":149,"line_end":149,"column_start":2,"column_end":9},"name":"Invalid","qualname":"::transaction_validity::TransactionValidityError::Invalid","value":"TransactionValidityError::Invalid(InvalidTransaction)","parent":{"krate":0,"index":3471},"children":[],"decl_id":null,"docs":" The transaction is invalid.\n","sig":null,"attributes":[{"value":"/ The transaction is invalid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":184161,"byte_end":184192,"line_start":148,"line_end":148,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3475},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":184271,"byte_end":184278,"line_start":151,"line_end":151,"column_start":2,"column_end":9},"name":"Unknown","qualname":"::transaction_validity::TransactionValidityError::Unknown","value":"TransactionValidityError::Unknown(UnknownTransaction)","parent":{"krate":0,"index":3471},"children":[],"decl_id":null,"docs":" Transaction validity can't be determined.\n","sig":null,"attributes":[{"value":"/ Transaction validity can't be determined.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":184224,"byte_end":184269,"line_start":150,"line_end":150,"column_start":2,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":3471},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":184133,"byte_end":184157,"line_start":147,"line_end":147,"column_start":10,"column_end":34},"name":"TransactionValidityError","qualname":"::transaction_validity::TransactionValidityError","value":"pub enum TransactionValidityError {\n\n    /// The transaction is invalid.\n    Invalid(InvalidTransaction),\n\n    /// Transaction validity can't be determined.\n    Unknown(UnknownTransaction),\n}","parent":null,"children":[{"krate":0,"index":3472},{"krate":0,"index":3475}],"decl_id":null,"docs":" Errors that can occur while checking the validity of a transaction.\n","sig":null,"attributes":[{"value":"/ Errors that can occur while checking the validity of a transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":183929,"byte_end":184000,"line_start":144,"line_end":144,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":184422,"byte_end":184441,"line_start":156,"line_end":156,"column_start":9,"column_end":28},"name":"exhausted_resources","qualname":"<TransactionValidityError>::exhausted_resources","value":"pub fn exhausted_resources(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the reason for the error was block resource exhaustion.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the reason for the error was block resource exhaustion.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":184336,"byte_end":184413,"line_start":155,"line_end":155,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":184697,"byte_end":184710,"line_start":165,"line_end":165,"column_start":9,"column_end":22},"name":"was_mandatory","qualname":"<TransactionValidityError>::was_mandatory","value":"pub fn was_mandatory(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the reason for the error was it being a mandatory dispatch that could not\n be completed successfully.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the reason for the error was it being a mandatory dispatch that could not","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":184561,"byte_end":184656,"line_start":163,"line_end":163,"column_start":2,"column_end":97}},{"value":"/ be completed successfully.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":184658,"byte_end":184688,"line_start":164,"line_end":164,"column_start":2,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":1269},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":185877,"byte_end":185896,"line_start":210,"line_end":210,"column_start":10,"column_end":29},"name":"TransactionValidity","qualname":"::transaction_validity::TransactionValidity","value":"Result<ValidTransaction, TransactionValidityError>","parent":null,"children":[],"decl_id":null,"docs":" Information on a transaction's validity and, if valid, on how it relates to other transactions.\n","sig":null,"attributes":[{"value":"/ Information on a transaction's validity and, if valid, on how it relates to other transactions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":185768,"byte_end":185867,"line_start":209,"line_end":209,"column_start":1,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3509},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186905,"byte_end":186912,"line_start":237,"line_end":237,"column_start":2,"column_end":9},"name":"InBlock","qualname":"::transaction_validity::TransactionSource::InBlock","value":"TransactionSource::InBlock","parent":{"krate":0,"index":3508},"children":[],"decl_id":null,"docs":" Transaction is already included in block.","sig":null,"attributes":[{"value":"/ Transaction is already included in block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186581,"byte_end":186626,"line_start":231,"line_end":231,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186628,"byte_end":186631,"line_start":232,"line_end":232,"column_start":2,"column_end":5}},{"value":"/ This means that we can't really tell where the transaction is coming from,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186633,"byte_end":186711,"line_start":233,"line_end":233,"column_start":2,"column_end":80}},{"value":"/ since it's already in the received block. Note that the custom validation logic","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186713,"byte_end":186796,"line_start":234,"line_end":234,"column_start":2,"column_end":85}},{"value":"/ using either `Local` or `External` should most likely just allow `InBlock`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186798,"byte_end":186876,"line_start":235,"line_end":235,"column_start":2,"column_end":80}},{"value":"/ transactions as well.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186878,"byte_end":186903,"line_start":236,"line_end":236,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3511},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187157,"byte_end":187162,"line_start":244,"line_end":244,"column_start":2,"column_end":7},"name":"Local","qualname":"::transaction_validity::TransactionSource::Local","value":"TransactionSource::Local","parent":{"krate":0,"index":3508},"children":[],"decl_id":null,"docs":" Transaction is coming from a local source.","sig":null,"attributes":[{"value":"/ Transaction is coming from a local source.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186916,"byte_end":186962,"line_start":239,"line_end":239,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186964,"byte_end":186967,"line_start":240,"line_end":240,"column_start":2,"column_end":5}},{"value":"/ This means that the transaction was produced internally by the node","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186969,"byte_end":187040,"line_start":241,"line_end":241,"column_start":2,"column_end":73}},{"value":"/ (for instance an Off-Chain Worker, or an Off-Chain Call), as opposed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187042,"byte_end":187114,"line_start":242,"line_end":242,"column_start":2,"column_end":74}},{"value":"/ to being received over the network.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187116,"byte_end":187155,"line_start":243,"line_end":243,"column_start":2,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3513},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187355,"byte_end":187363,"line_start":250,"line_end":250,"column_start":2,"column_end":10},"name":"External","qualname":"::transaction_validity::TransactionSource::External","value":"TransactionSource::External","parent":{"krate":0,"index":3508},"children":[],"decl_id":null,"docs":" Transaction has been received externally.","sig":null,"attributes":[{"value":"/ Transaction has been received externally.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187166,"byte_end":187211,"line_start":246,"line_end":246,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187213,"byte_end":187216,"line_start":247,"line_end":247,"column_start":2,"column_end":5}},{"value":"/ This means the transaction has been received from (usually) \"untrusted\" source,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187218,"byte_end":187301,"line_start":248,"line_end":248,"column_start":2,"column_end":85}},{"value":"/ for instance received over the network or RPC.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187303,"byte_end":187353,"line_start":249,"line_end":249,"column_start":2,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":3508},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186560,"byte_end":186577,"line_start":230,"line_end":230,"column_start":10,"column_end":27},"name":"TransactionSource","qualname":"::transaction_validity::TransactionSource","value":"pub enum TransactionSource {\n\n    /// Transaction is already included in block.\n    ///\n    /// This means that we can't really tell where the transaction is coming from,\n    /// since it's already in the received block. Note that the custom validation logic\n    /// using either `Local` or `External` should most likely just allow `InBlock`\n    /// transactions as well.\n    InBlock,\n\n    /// Transaction is coming from a local source.\n    ///\n    /// This means that the transaction was produced internally by the node\n    /// (for instance an Off-Chain Worker, or an Off-Chain Call), as opposed\n    /// to being received over the network.\n    Local,\n\n    /// Transaction has been received externally.\n    ///\n    /// This means the transaction has been received from (usually) \"untrusted\" source,\n    /// for instance received over the network or RPC.\n    External,\n}","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3511},{"krate":0,"index":3513}],"decl_id":null,"docs":" The source of the transaction.","sig":null,"attributes":[{"value":"/ The source of the transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186194,"byte_end":186228,"line_start":224,"line_end":224,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186229,"byte_end":186232,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ Depending on the source we might apply different validation schemes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186233,"byte_end":186305,"line_start":226,"line_end":226,"column_start":1,"column_end":73}},{"value":"/ For instance we can disallow specific kinds of transactions if they were not produced","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186306,"byte_end":186395,"line_start":227,"line_end":227,"column_start":1,"column_end":90}},{"value":"/ by our local node (for instance off-chain workers).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186396,"byte_end":186451,"line_start":228,"line_end":228,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3540},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187489,"byte_end":187505,"line_start":255,"line_end":255,"column_start":12,"column_end":28},"name":"ValidTransaction","qualname":"::transaction_validity::ValidTransaction","value":"ValidTransaction { priority, requires, provides, longevity, propagate }","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545}],"decl_id":null,"docs":" Information concerning a valid transaction.\n","sig":null,"attributes":[{"value":"/ Information concerning a valid transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187368,"byte_end":187415,"line_start":253,"line_end":253,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3541},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187675,"byte_end":187683,"line_start":260,"line_end":260,"column_start":6,"column_end":14},"name":"priority","qualname":"::transaction_validity::ValidTransaction::priority","value":"u64","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Priority of the transaction.","sig":null,"attributes":[{"value":"/ Priority of the transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187509,"byte_end":187541,"line_start":256,"line_end":256,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187543,"byte_end":187546,"line_start":257,"line_end":257,"column_start":2,"column_end":5}},{"value":"/ Priority determines the ordering of two transactions that have all","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187548,"byte_end":187618,"line_start":258,"line_end":258,"column_start":2,"column_end":72}},{"value":"/ their dependencies (required tags) satisfied.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187620,"byte_end":187669,"line_start":259,"line_end":259,"column_start":2,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3542},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187882,"byte_end":187890,"line_start":265,"line_end":265,"column_start":6,"column_end":14},"name":"requires","qualname":"::transaction_validity::ValidTransaction::requires","value":"sp_application_crypto::Vec<sp_application_crypto::Vec<u8>>","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Transaction dependencies","sig":null,"attributes":[{"value":"/ Transaction dependencies","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187707,"byte_end":187735,"line_start":261,"line_end":261,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187737,"byte_end":187740,"line_start":262,"line_end":262,"column_start":2,"column_end":5}},{"value":"/ A non-empty list signifies that some other transactions which provide","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187742,"byte_end":187815,"line_start":263,"line_end":263,"column_start":2,"column_end":75}},{"value":"/ given tags are required to be included before that one.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187817,"byte_end":187876,"line_start":264,"line_end":264,"column_start":2,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3543},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188266,"byte_end":188274,"line_start":272,"line_end":272,"column_start":6,"column_end":14},"name":"provides","qualname":"::transaction_validity::ValidTransaction::provides","value":"sp_application_crypto::Vec<sp_application_crypto::Vec<u8>>","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Provided tags","sig":null,"attributes":[{"value":"/ Provided tags","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187914,"byte_end":187931,"line_start":266,"line_end":266,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187933,"byte_end":187936,"line_start":267,"line_end":267,"column_start":2,"column_end":5}},{"value":"/ A list of tags this transaction provides. Successfully importing the transaction","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":187938,"byte_end":188022,"line_start":268,"line_end":268,"column_start":2,"column_end":86}},{"value":"/ will enable other transactions that depend on (require) those tags to be included as well.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188024,"byte_end":188118,"line_start":269,"line_end":269,"column_start":2,"column_end":96}},{"value":"/ Provided and required tags allow Substrate to build a dependency graph of transactions","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188120,"byte_end":188210,"line_start":270,"line_end":270,"column_start":2,"column_end":92}},{"value":"/ and import them in the right (linear) order.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188212,"byte_end":188260,"line_start":271,"line_end":271,"column_start":2,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3544},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188492,"byte_end":188501,"line_start":277,"line_end":277,"column_start":6,"column_end":15},"name":"longevity","qualname":"::transaction_validity::ValidTransaction::longevity","value":"u64","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Transaction longevity","sig":null,"attributes":[{"value":"/ Transaction longevity","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188298,"byte_end":188323,"line_start":273,"line_end":273,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188325,"byte_end":188328,"line_start":274,"line_end":274,"column_start":2,"column_end":5}},{"value":"/ Longevity describes minimum number of blocks the validity is correct.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188330,"byte_end":188403,"line_start":275,"line_end":275,"column_start":2,"column_end":75}},{"value":"/ After this period transaction should be removed from the pool or revalidated.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188405,"byte_end":188486,"line_start":276,"line_end":276,"column_start":2,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":3545},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188796,"byte_end":188805,"line_start":283,"line_end":283,"column_start":6,"column_end":15},"name":"propagate","qualname":"::transaction_validity::ValidTransaction::propagate","value":"bool","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" A flag indicating if the transaction should be propagated to other peers.","sig":null,"attributes":[{"value":"/ A flag indicating if the transaction should be propagated to other peers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188526,"byte_end":188603,"line_start":278,"line_end":278,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188605,"byte_end":188608,"line_start":279,"line_end":279,"column_start":2,"column_end":5}},{"value":"/ By setting `false` here the transaction will still be considered for","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188610,"byte_end":188682,"line_start":280,"line_end":280,"column_start":2,"column_end":74}},{"value":"/ including in blocks that are authored on the current node, but will","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188684,"byte_end":188755,"line_start":281,"line_end":281,"column_start":2,"column_end":73}},{"value":"/ never be sent to other peers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188757,"byte_end":188790,"line_start":282,"line_end":282,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":189297,"byte_end":189312,"line_start":303,"line_end":303,"column_start":9,"column_end":24},"name":"with_tag_prefix","qualname":"<ValidTransaction>::with_tag_prefix","value":"pub fn with_tag_prefix(&'static str) -> ValidTransactionBuilder","parent":null,"children":[],"decl_id":null,"docs":" Initiate `ValidTransaction` builder object with a particular prefix for tags.","sig":null,"attributes":[{"value":"/ Initiate `ValidTransaction` builder object with a particular prefix for tags.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":189059,"byte_end":189140,"line_start":299,"line_end":299,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":189142,"byte_end":189145,"line_start":300,"line_end":300,"column_start":2,"column_end":5}},{"value":"/ To avoid conflicts between different parts in runtime it's recommended to build `requires`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":189147,"byte_end":189241,"line_start":301,"line_end":301,"column_start":2,"column_end":96}},{"value":"/ and `provides` tags with a unique prefix.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":189243,"byte_end":189288,"line_start":302,"line_end":302,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":189705,"byte_end":189717,"line_start":313,"line_end":313,"column_start":9,"column_end":21},"name":"combine_with","qualname":"<ValidTransaction>::combine_with","value":"pub fn combine_with(Self, ValidTransaction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Combine two instances into one, as a best effort. This will take the superset of each of the\n `provides` and `requires` tags, it will sum the priorities, take the minimum longevity and\n the logic *And* of the propagate flags.\n","sig":null,"attributes":[{"value":"/ Combine two instances into one, as a best effort. This will take the superset of each of the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":189459,"byte_end":189555,"line_start":310,"line_end":310,"column_start":2,"column_end":98}},{"value":"/ `provides` and `requires` tags, it will sum the priorities, take the minimum longevity and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":189557,"byte_end":189651,"line_start":311,"line_end":311,"column_start":2,"column_end":96}},{"value":"/ the logic *And* of the propagate flags.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":189653,"byte_end":189696,"line_start":312,"line_end":312,"column_start":2,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3568},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190348,"byte_end":190371,"line_start":330,"line_end":330,"column_start":12,"column_end":35},"name":"ValidTransactionBuilder","qualname":"::transaction_validity::ValidTransactionBuilder","value":"ValidTransactionBuilder {  }","parent":null,"children":[{"krate":0,"index":3569},{"krate":0,"index":3570}],"decl_id":null,"docs":" `ValidTransaction` builder.","sig":null,"attributes":[{"value":"/ `ValidTransaction` builder.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190107,"byte_end":190138,"line_start":324,"line_end":324,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190139,"byte_end":190142,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190143,"byte_end":190146,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ Allows to easily construct `ValidTransaction` and most importantly takes care of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190147,"byte_end":190231,"line_start":327,"line_end":327,"column_start":1,"column_end":85}},{"value":"/ prefixing `requires` and `provides` tags to avoid conflicts.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190232,"byte_end":190296,"line_start":328,"line_end":328,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190881,"byte_end":190889,"line_start":343,"line_end":343,"column_start":9,"column_end":17},"name":"priority","qualname":"<ValidTransactionBuilder>::priority","value":"pub fn priority(Self, TransactionPriority) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the priority of a transaction.","sig":null,"attributes":[{"value":"/ Set the priority of a transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190469,"byte_end":190507,"line_start":336,"line_end":336,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190509,"byte_end":190512,"line_start":337,"line_end":337,"column_start":2,"column_end":5}},{"value":"/ Note that the final priority for `FRAME` is combined from all `SignedExtension`s.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190514,"byte_end":190599,"line_start":338,"line_end":338,"column_start":2,"column_end":87}},{"value":"/ Most likely for unsigned transactions you want the priority to be higher","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190601,"byte_end":190677,"line_start":339,"line_end":339,"column_start":2,"column_end":78}},{"value":"/ than for regular transactions. We recommend exposing a base priority for unsigned","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190679,"byte_end":190764,"line_start":340,"line_end":340,"column_start":2,"column_end":87}},{"value":"/ transactions as a runtime module parameter, so that the runtime can tune inter-module","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190766,"byte_end":190855,"line_start":341,"line_end":341,"column_start":2,"column_end":91}},{"value":"/ priorities.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190857,"byte_end":190872,"line_start":342,"line_end":342,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191357,"byte_end":191366,"line_start":354,"line_end":354,"column_start":9,"column_end":18},"name":"longevity","qualname":"<ValidTransactionBuilder>::longevity","value":"pub fn longevity(Self, TransactionLongevity) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the longevity of a transaction.","sig":null,"attributes":[{"value":"/ Set the longevity of a transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190990,"byte_end":191029,"line_start":348,"line_end":348,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191031,"byte_end":191034,"line_start":349,"line_end":349,"column_start":2,"column_end":5}},{"value":"/ By default the transaction will be considered valid forever and will not be revalidated","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191036,"byte_end":191127,"line_start":350,"line_end":350,"column_start":2,"column_end":93}},{"value":"/ by the transaction pool. It's recommended though to set the longevity to a finite value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191129,"byte_end":191220,"line_start":351,"line_end":351,"column_start":2,"column_end":93}},{"value":"/ though. If unsure, it's also reasonable to expose this parameter via module configuration","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191222,"byte_end":191315,"line_start":352,"line_end":352,"column_start":2,"column_end":95}},{"value":"/ and let the runtime decide.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191317,"byte_end":191348,"line_start":353,"line_end":353,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191763,"byte_end":191772,"line_start":364,"line_end":364,"column_start":9,"column_end":18},"name":"propagate","qualname":"<ValidTransactionBuilder>::propagate","value":"pub fn propagate(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the propagate flag.","sig":null,"attributes":[{"value":"/ Set the propagate flag.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191471,"byte_end":191498,"line_start":359,"line_end":359,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191500,"byte_end":191503,"line_start":360,"line_end":360,"column_start":2,"column_end":5}},{"value":"/ Set to `false` if the transaction is not meant to be gossiped to peers. Combined with","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191505,"byte_end":191594,"line_start":361,"line_end":361,"column_start":2,"column_end":91}},{"value":"/ `TransactionSource::Local` validation it can be used to have special kind of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191596,"byte_end":191676,"line_start":362,"line_end":362,"column_start":2,"column_end":82}},{"value":"/ transactions that are only produced and included by the validator nodes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191678,"byte_end":191754,"line_start":363,"line_end":363,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":192086,"byte_end":192098,"line_start":373,"line_end":373,"column_start":9,"column_end":21},"name":"and_requires","qualname":"<ValidTransactionBuilder>::and_requires","value":"pub fn and_requires<impl Encode: Encode>(Self, impl Encode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a `TransactionTag` to the set of required tags.","sig":null,"attributes":[{"value":"/ Add a `TransactionTag` to the set of required tags.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191861,"byte_end":191916,"line_start":369,"line_end":369,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191918,"byte_end":191921,"line_start":370,"line_end":370,"column_start":2,"column_end":5}},{"value":"/ The tag will be encoded and prefixed with module prefix (if any).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191923,"byte_end":191992,"line_start":371,"line_end":371,"column_start":2,"column_end":71}},{"value":"/ If you'd rather add a raw `require` tag, consider using `#combine_with` method.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":191994,"byte_end":192077,"line_start":372,"line_end":372,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":192507,"byte_end":192519,"line_start":385,"line_end":385,"column_start":9,"column_end":21},"name":"and_provides","qualname":"<ValidTransactionBuilder>::and_provides","value":"pub fn and_provides<impl Encode: Encode>(Self, impl Encode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a `TransactionTag` to the set of provided tags.","sig":null,"attributes":[{"value":"/ Add a `TransactionTag` to the set of provided tags.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":192282,"byte_end":192337,"line_start":381,"line_end":381,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":192339,"byte_end":192342,"line_start":382,"line_end":382,"column_start":2,"column_end":5}},{"value":"/ The tag will be encoded and prefixed with module prefix (if any).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":192344,"byte_end":192413,"line_start":383,"line_end":383,"column_start":2,"column_end":71}},{"value":"/ If you'd rather add a raw `require` tag, consider using `#combine_with` method.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":192415,"byte_end":192498,"line_start":384,"line_end":384,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":192844,"byte_end":192856,"line_start":396,"line_end":396,"column_start":9,"column_end":21},"name":"combine_with","qualname":"<ValidTransactionBuilder>::combine_with","value":"pub fn combine_with(Self, ValidTransaction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Augment the builder with existing `ValidTransaction`.","sig":null,"attributes":[{"value":"/ Augment the builder with existing `ValidTransaction`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":192703,"byte_end":192760,"line_start":393,"line_end":393,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":192762,"byte_end":192765,"line_start":394,"line_end":394,"column_start":2,"column_end":5}},{"value":"/ This method does add the prefix to `require` or `provides` tags.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":192767,"byte_end":192835,"line_start":395,"line_end":395,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":193152,"byte_end":193157,"line_start":404,"line_end":404,"column_start":9,"column_end":14},"name":"build","qualname":"<ValidTransactionBuilder>::build","value":"pub fn build(Self) -> TransactionValidity","parent":null,"children":[],"decl_id":null,"docs":" Finalize the builder and produce `TransactionValidity`.","sig":null,"attributes":[{"value":"/ Finalize the builder and produce `TransactionValidity`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":192995,"byte_end":193054,"line_start":401,"line_end":401,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":193056,"byte_end":193059,"line_start":402,"line_end":402,"column_start":2,"column_end":5}},{"value":"/ Note the result will always be `Ok`. Use `Into` to produce `ValidTransaction`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":193061,"byte_end":193143,"line_start":403,"line_end":403,"column_start":2,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":1293},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"random_number_generator","qualname":"::random_number_generator","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":4580},{"krate":0,"index":1296},{"krate":0,"index":4582},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":3577},{"krate":0,"index":3587},{"krate":0,"index":3581},{"krate":0,"index":1300}],"decl_id":null,"docs":" A simple pseudo random number generator that allows a stream of random numbers to be efficiently\n created from a single initial seed hash.\n","sig":null,"attributes":[{"value":"/ A simple pseudo random number generator that allows a stream of random numbers to be efficiently","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195225,"byte_end":195325,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ created from a single initial seed hash.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195326,"byte_end":195370,"line_start":19,"line_end":19,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3577},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196489,"byte_end":196510,"line_start":47,"line_end":47,"column_start":12,"column_end":33},"name":"RandomNumberGenerator","qualname":"::random_number_generator::RandomNumberGenerator","value":"RandomNumberGenerator {  }","parent":null,"children":[{"krate":0,"index":3579},{"krate":0,"index":3580}],"decl_id":null,"docs":" Pseudo-random number streamer. This retains the state of the random number stream. It's as\n secure as the combination of the seed with which it is constructed and the hash function it uses\n to cycle elements.","sig":null,"attributes":[{"value":"/ Pseudo-random number streamer. This retains the state of the random number stream. It's as","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195448,"byte_end":195542,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ secure as the combination of the seed with which it is constructed and the hash function it uses","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195543,"byte_end":195643,"line_start":25,"line_end":25,"column_start":1,"column_end":101}},{"value":"/ to cycle elements.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195644,"byte_end":195666,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195667,"byte_end":195670,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It can be saved and later reloaded using the Codec traits.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195671,"byte_end":195733,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195734,"byte_end":195737,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195738,"byte_end":195750,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195751,"byte_end":195758,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use sp_runtime::traits::{Hash, BlakeTwo256};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195759,"byte_end":195807,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/ use sp_runtime::RandomNumberGenerator;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195808,"byte_end":195850,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/ let random_seed = BlakeTwo256::hash(b\"Sixty-nine\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195851,"byte_end":195906,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/ let mut rng = <RandomNumberGenerator<BlakeTwo256>>::new(random_seed);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195907,"byte_end":195980,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(rng.pick_u32(100), 59);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":195981,"byte_end":196019,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(rng.pick_item(&[1, 2, 3]), Some(&1));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196020,"byte_end":196072,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196073,"byte_end":196080,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196081,"byte_end":196084,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This can use any cryptographic `Hash` function as the means of entropy-extension, and avoids","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196085,"byte_end":196181,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"/ needless extensions of entropy.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196182,"byte_end":196217,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196218,"byte_end":196221,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If you're persisting it over blocks, be aware that the sequence will start to repeat. This won't","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196222,"byte_end":196322,"line_start":43,"line_end":43,"column_start":1,"column_end":101}},{"value":"/ be a practical issue unless you're using tiny hash types (e.g. 64-bit) and pulling hundred of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196323,"byte_end":196420,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/ megabytes of data from it.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196421,"byte_end":196451,"line_start":45,"line_end":45,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196667,"byte_end":196670,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"name":"new","qualname":"<RandomNumberGenerator<Hashing>>::new","value":"pub fn new(Hashing::Output) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new source of random data.\n","sig":null,"attributes":[{"value":"/ A new source of random data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196626,"byte_end":196658,"line_start":53,"line_end":53,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196866,"byte_end":196874,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"pick_u32","qualname":"<RandomNumberGenerator<Hashing>>::pick_u32","value":"pub fn pick_u32(&mut Self, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a number at least zero, at most `max`.\n","sig":null,"attributes":[{"value":"/ Returns a number at least zero, at most `max`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196807,"byte_end":196857,"line_start":63,"line_end":63,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":197692,"byte_end":197702,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"name":"pick_usize","qualname":"<RandomNumberGenerator<Hashing>>::pick_usize","value":"pub fn pick_usize(&mut Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns a number at least zero, at most `max`.","sig":null,"attributes":[{"value":"/ Returns a number at least zero, at most `max`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":197536,"byte_end":197586,"line_start":86,"line_end":86,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":197588,"byte_end":197591,"line_start":87,"line_end":87,"column_start":2,"column_end":5}},{"value":"/ This returns a `usize`, but internally it only uses `u32` so avoid consensus problems.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":197593,"byte_end":197683,"line_start":88,"line_end":88,"column_start":2,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":197948,"byte_end":197957,"line_start":97,"line_end":97,"column_start":9,"column_end":18},"name":"pick_item","qualname":"<RandomNumberGenerator<Hashing>>::pick_item","value":"pub fn pick_item<'a, T>(&mut Self, &'a [T]) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Pick a random element from an array of `items`.","sig":null,"attributes":[{"value":"/ Pick a random element from an array of `items`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":197779,"byte_end":197830,"line_start":93,"line_end":93,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":197832,"byte_end":197835,"line_start":94,"line_end":94,"column_start":2,"column_end":5}},{"value":"/ This is guaranteed to return `Some` except in the case that the given array `items` is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":197837,"byte_end":197927,"line_start":95,"line_end":95,"column_start":2,"column_end":92}},{"value":"/ empty.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":197929,"byte_end":197939,"line_start":96,"line_end":96,"column_start":2,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3596},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":199082,"byte_end":199090,"line_start":26,"line_end":26,"column_start":2,"column_end":10},"name":"Borrowed","qualname":"::runtime_string::RuntimeString::Borrowed","value":"RuntimeString::Borrowed(&'static str)","parent":{"krate":0,"index":3595},"children":[],"decl_id":null,"docs":" The borrowed mode that wraps a `&'static str`.\n","sig":null,"attributes":[{"value":"/ The borrowed mode that wraps a `&'static str`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":199030,"byte_end":199080,"line_start":25,"line_end":25,"column_start":2,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3599},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":199175,"byte_end":199180,"line_start":29,"line_end":29,"column_start":2,"column_end":7},"name":"Owned","qualname":"::runtime_string::RuntimeString::Owned","value":"RuntimeString::Owned(String)","parent":{"krate":0,"index":3595},"children":[],"decl_id":null,"docs":" The owned mode that wraps a `String`.\n","sig":null,"attributes":[{"value":"/ The owned mode that wraps a `String`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":199107,"byte_end":199148,"line_start":27,"line_end":27,"column_start":2,"column_end":43}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":199150,"byte_end":199173,"line_start":28,"line_end":28,"column_start":2,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":3595},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":199013,"byte_end":199026,"line_start":24,"line_end":24,"column_start":10,"column_end":23},"name":"RuntimeString","qualname":"::runtime_string::RuntimeString","value":"pub enum RuntimeString {\n\n    /// The borrowed mode that wraps a `&'static str`.\n    Borrowed(&'static str),\n\n    /// The owned mode that wraps a `String`.\n    #[cfg(feature = \"std\")]\n    Owned(String),\n}","parent":null,"children":[{"krate":0,"index":3596},{"krate":0,"index":3599}],"decl_id":null,"docs":" A string that wraps a `&'static str` in the runtime and `String`/`Vec<u8>` on decode.\n","sig":null,"attributes":[{"value":"/ A string that wraps a `&'static str` in the runtime and `String`/`Vec<u8>` on decode.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":198879,"byte_end":198968,"line_start":22,"line_end":22,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3612},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202663,"byte_end":202665,"line_start":28,"line_end":28,"column_start":2,"column_end":4},"name":"Id","qualname":"::multiaddress::MultiAddress::Id","value":"MultiAddress::Id(AccountId)","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" It's an account ID (pubkey).\n","sig":null,"attributes":[{"value":"/ It's an account ID (pubkey).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202629,"byte_end":202661,"line_start":27,"line_end":27,"column_start":2,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3615},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202707,"byte_end":202712,"line_start":30,"line_end":30,"column_start":2,"column_end":7},"name":"Index","qualname":"::multiaddress::MultiAddress::Index","value":"MultiAddress::Index(AccountIndex)","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" It's an account index.\n","sig":null,"attributes":[{"value":"/ It's an account index.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202679,"byte_end":202705,"line_start":29,"line_end":29,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3617},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202783,"byte_end":202786,"line_start":32,"line_end":32,"column_start":2,"column_end":5},"name":"Raw","qualname":"::multiaddress::MultiAddress::Raw","value":"MultiAddress::Raw(Vec<u8>)","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" It's some arbitrary raw bytes.\n","sig":null,"attributes":[{"value":"/ It's some arbitrary raw bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202747,"byte_end":202781,"line_start":31,"line_end":31,"column_start":2,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3620},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202834,"byte_end":202843,"line_start":34,"line_end":34,"column_start":2,"column_end":11},"name":"Address32","qualname":"::multiaddress::MultiAddress::Address32","value":"MultiAddress::Address32([u8; ])","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" It's a 32 byte representation.\n","sig":null,"attributes":[{"value":"/ It's a 32 byte representation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202798,"byte_end":202832,"line_start":33,"line_end":33,"column_start":2,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3624},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202891,"byte_end":202900,"line_start":36,"line_end":36,"column_start":2,"column_end":11},"name":"Address20","qualname":"::multiaddress::MultiAddress::Address20","value":"MultiAddress::Address20([u8; ])","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" Its a 20 byte representation.\n","sig":null,"attributes":[{"value":"/ Its a 20 byte representation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202856,"byte_end":202889,"line_start":35,"line_end":35,"column_start":2,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3609},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202588,"byte_end":202600,"line_start":26,"line_end":26,"column_start":10,"column_end":22},"name":"MultiAddress","qualname":"::multiaddress::MultiAddress","value":"pub enum MultiAddress<AccountId, AccountIndex> {\n\n    /// It's an account ID (pubkey).\n    Id(AccountId),\n\n    /// It's an account index.\n    Index(\n          #[codec(compact)]\n          AccountIndex),\n\n    /// It's some arbitrary raw bytes.\n    Raw(Vec<u8>),\n\n    /// It's a 32 byte representation.\n    Address32([u8; ]),\n\n    /// Its a 20 byte representation.\n    Address20([u8; ]),\n}","parent":null,"children":[{"krate":0,"index":3612},{"krate":0,"index":3615},{"krate":0,"index":3617},{"krate":0,"index":3620},{"krate":0,"index":3624}],"decl_id":null,"docs":" A multi-format address wrapper for on-chain accounts.\n","sig":null,"attributes":[{"value":"/ A multi-format address wrapper for on-chain accounts.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202409,"byte_end":202466,"line_start":23,"line_end":23,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1396},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3041,"byte_end":3054,"line_start":98,"line_end":98,"column_start":10,"column_end":23},"name":"Justification","qualname":"::Justification","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" An abstraction over justification for a block's validity under a consensus algorithm.","sig":null,"attributes":[{"value":"/ An abstraction over justification for a block's validity under a consensus algorithm.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2576,"byte_end":2665,"line_start":91,"line_end":91,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2666,"byte_end":2669,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Essentially a finality proof. The exact formulation will vary between consensus","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2670,"byte_end":2753,"line_start":93,"line_end":93,"column_start":1,"column_end":84}},{"value":"/ algorithms. In the case where there are multiple valid proofs, inclusion within","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2754,"byte_end":2837,"line_start":94,"line_end":94,"column_start":1,"column_end":84}},{"value":"/ the block itself would allow swapping justifications to change the block's hash","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2838,"byte_end":2921,"line_start":95,"line_end":95,"column_start":1,"column_end":84}},{"value":"/ (and thus fork the chain). Sending a `Justification` alongside a block instead","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":2922,"byte_end":3004,"line_start":96,"line_end":96,"column_start":1,"column_end":83}},{"value":"/ bypasses this problem.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3005,"byte_end":3031,"line_start":97,"line_end":97,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3679},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3253,"byte_end":3261,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"ModuleId","qualname":"::ModuleId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A module identifier. These are per module and should be stored in a registry somewhere.\n","sig":null,"attributes":[{"value":"/ A module identifier. These are per module and should be stored in a registry somewhere.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3096,"byte_end":3187,"line_start":102,"line_end":102,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":3681},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3262,"byte_end":3273,"line_start":104,"line_end":104,"column_start":21,"column_end":32},"name":"0","qualname":"::ModuleId::0","value":"[u8; 8]","parent":{"krate":0,"index":3679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1408},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3536,"byte_end":3548,"line_start":116,"line_end":116,"column_start":11,"column_end":23},"name":"BuildStorage","qualname":"::BuildStorage","value":"BuildStorage","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410}],"decl_id":null,"docs":" Complex storage builder stuff.\n","sig":null,"attributes":[{"value":"/ Complex storage builder stuff.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3467,"byte_end":3501,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3502,"byte_end":3525,"line_start":115,"line_end":115,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3599,"byte_end":3612,"line_start":118,"line_end":118,"column_start":5,"column_end":18},"name":"build_storage","qualname":"::BuildStorage::build_storage","value":"pub fn build_storage(&Self) -> Result<sp_core::storage::Storage, String>","parent":{"krate":0,"index":1408},"children":[],"decl_id":null,"docs":" Build the storage out of this builder.\n","sig":null,"attributes":[{"value":"/ Build the storage out of this builder.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3552,"byte_end":3594,"line_start":117,"line_end":117,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3842,"byte_end":3860,"line_start":124,"line_end":124,"column_start":5,"column_end":23},"name":"assimilate_storage","qualname":"::BuildStorage::assimilate_storage","value":"pub fn assimilate_storage(&Self, &mut sp_core::storage::Storage)\n-> Result<(), String>","parent":{"krate":0,"index":1408},"children":[],"decl_id":null,"docs":" Assimilate the storage for this module into pre-existing overlays.\n","sig":null,"attributes":[{"value":"/ Assimilate the storage for this module into pre-existing overlays.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3767,"byte_end":3837,"line_start":123,"line_end":123,"column_start":2,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":1411},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":4039,"byte_end":4064,"line_start":132,"line_end":132,"column_start":11,"column_end":36},"name":"BuildModuleGenesisStorage","qualname":"::BuildModuleGenesisStorage","value":"BuildModuleGenesisStorage<T, I>: Sized","parent":null,"children":[{"krate":0,"index":1414}],"decl_id":null,"docs":" Something that can build the genesis storage of a module.\n","sig":null,"attributes":[{"value":"/ Something that can build the genesis storage of a module.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3943,"byte_end":4004,"line_start":130,"line_end":130,"column_start":1,"column_end":62}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":4005,"byte_end":4028,"line_start":131,"line_end":131,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":4169,"byte_end":4197,"line_start":134,"line_end":134,"column_start":5,"column_end":33},"name":"build_module_genesis_storage","qualname":"::BuildModuleGenesisStorage::build_module_genesis_storage","value":"pub fn build_module_genesis_storage(&Self, &mut sp_core::storage::Storage)\n-> Result<(), String>","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":" Create the module genesis storage into the given `storage` and `child_storage`.\n","sig":null,"attributes":[{"value":"/ Create the module genesis storage into the given `storage` and `child_storage`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":4081,"byte_end":4164,"line_start":133,"line_end":133,"column_start":2,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":1421},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5231,"byte_end":5248,"line_start":173,"line_end":173,"column_start":10,"column_end":27},"name":"ConsensusEngineId","qualname":"::ConsensusEngineId","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Consensus engine unique ID.\n","sig":null,"attributes":[{"value":"/ Consensus engine unique ID.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5190,"byte_end":5221,"line_start":172,"line_end":172,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3712},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5506,"byte_end":5513,"line_start":180,"line_end":180,"column_start":2,"column_end":9},"name":"Ed25519","qualname":"::MultiSignature::Ed25519","value":"MultiSignature::Ed25519(ed25519::Signature)","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" An Ed25519 signature.\n","sig":null,"attributes":[{"value":"/ An Ed25519 signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5479,"byte_end":5504,"line_start":179,"line_end":179,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3715},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5563,"byte_end":5570,"line_start":182,"line_end":182,"column_start":2,"column_end":9},"name":"Sr25519","qualname":"::MultiSignature::Sr25519","value":"MultiSignature::Sr25519(sr25519::Signature)","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" An Sr25519 signature.\n","sig":null,"attributes":[{"value":"/ An Sr25519 signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5536,"byte_end":5561,"line_start":181,"line_end":181,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3718},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5628,"byte_end":5633,"line_start":184,"line_end":184,"column_start":2,"column_end":7},"name":"Ecdsa","qualname":"::MultiSignature::Ecdsa","value":"MultiSignature::Ecdsa(ecdsa::Signature)","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" An ECDSA/SECP256k1 signature.\n","sig":null,"attributes":[{"value":"/ An ECDSA/SECP256k1 signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5593,"byte_end":5626,"line_start":183,"line_end":183,"column_start":2,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3711},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5461,"byte_end":5475,"line_start":178,"line_end":178,"column_start":10,"column_end":24},"name":"MultiSignature","qualname":"::MultiSignature","value":"pub enum MultiSignature {\n\n    /// An Ed25519 signature.\n    Ed25519(ed25519::Signature),\n\n    /// An Sr25519 signature.\n    Sr25519(sr25519::Signature),\n\n    /// An ECDSA/SECP256k1 signature.\n    Ecdsa(ecdsa::Signature),\n}","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3715},{"krate":0,"index":3718}],"decl_id":null,"docs":" Signature verify that can work with any known signature types..\n","sig":null,"attributes":[{"value":"/ Signature verify that can work with any known signature types..","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5261,"byte_end":5328,"line_start":175,"line_end":175,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3792},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7001,"byte_end":7008,"line_start":237,"line_end":237,"column_start":2,"column_end":9},"name":"Ed25519","qualname":"::MultiSigner::Ed25519","value":"MultiSigner::Ed25519(ed25519::Public)","parent":{"krate":0,"index":3791},"children":[],"decl_id":null,"docs":" An Ed25519 identity.\n","sig":null,"attributes":[{"value":"/ An Ed25519 identity.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6975,"byte_end":6999,"line_start":236,"line_end":236,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3795},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7054,"byte_end":7061,"line_start":239,"line_end":239,"column_start":2,"column_end":9},"name":"Sr25519","qualname":"::MultiSigner::Sr25519","value":"MultiSigner::Sr25519(sr25519::Public)","parent":{"krate":0,"index":3791},"children":[],"decl_id":null,"docs":" An Sr25519 identity.\n","sig":null,"attributes":[{"value":"/ An Sr25519 identity.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7028,"byte_end":7052,"line_start":238,"line_end":238,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3798},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7169,"byte_end":7174,"line_start":241,"line_end":241,"column_start":2,"column_end":7},"name":"Ecdsa","qualname":"::MultiSigner::Ecdsa","value":"MultiSigner::Ecdsa(ecdsa::Public)","parent":{"krate":0,"index":3791},"children":[],"decl_id":null,"docs":" An SECP256k1/ECDSA identity (actually, the Blake2 hash of the compressed pub key).\n","sig":null,"attributes":[{"value":"/ An SECP256k1/ECDSA identity (actually, the Blake2 hash of the compressed pub key).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7081,"byte_end":7167,"line_start":240,"line_end":240,"column_start":2,"column_end":88}}]},{"kind":"Enum","id":{"krate":0,"index":3791},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6960,"byte_end":6971,"line_start":235,"line_end":235,"column_start":10,"column_end":21},"name":"MultiSigner","qualname":"::MultiSigner","value":"pub enum MultiSigner {\n\n    /// An Ed25519 identity.\n    Ed25519(ed25519::Public),\n\n    /// An Sr25519 identity.\n    Sr25519(sr25519::Public),\n\n    /// An SECP256k1/ECDSA identity (actually, the Blake2 hash of the compressed pub key).\n    Ecdsa(ecdsa::Public),\n}","parent":null,"children":[{"krate":0,"index":3792},{"krate":0,"index":3795},{"krate":0,"index":3798}],"decl_id":null,"docs":" Public key for any known crypto algorithm.\n","sig":null,"attributes":[{"value":"/ Public key for any known crypto algorithm.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6764,"byte_end":6810,"line_start":232,"line_end":232,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3879},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":10396,"byte_end":10408,"line_start":351,"line_end":351,"column_start":12,"column_end":24},"name":"AnySignature","qualname":"::AnySignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Signature verify that can work with any known signature types..\n","sig":null,"attributes":[{"value":"/ Signature verify that can work with any known signature types..","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":10185,"byte_end":10252,"line_start":348,"line_end":348,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1486},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11457,"byte_end":11471,"line_start":387,"line_end":387,"column_start":10,"column_end":24},"name":"DispatchResult","qualname":"::DispatchResult","value":"sp_std::result::Result<(), DispatchError>","parent":null,"children":[],"decl_id":null,"docs":" This is the legacy return type of `Dispatchable`. It is still exposed for compatibility reasons.\n The new return type is `DispatchResultWithInfo`. FRAME runtimes should use\n `frame_support::dispatch::DispatchResult`.\n","sig":null,"attributes":[{"value":"/ This is the legacy return type of `Dispatchable`. It is still exposed for compatibility reasons.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11221,"byte_end":11321,"line_start":384,"line_end":384,"column_start":1,"column_end":101}},{"value":"/ The new return type is `DispatchResultWithInfo`. FRAME runtimes should use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11322,"byte_end":11400,"line_start":385,"line_end":385,"column_start":1,"column_end":79}},{"value":"/ `frame_support::dispatch::DispatchResult`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11401,"byte_end":11447,"line_start":386,"line_end":386,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1487},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11689,"byte_end":11711,"line_start":391,"line_end":391,"column_start":10,"column_end":32},"name":"DispatchResultWithInfo","qualname":"::DispatchResultWithInfo","value":"sp_std::result::Result<T, DispatchErrorWithPostInfo<T>>","parent":null,"children":[],"decl_id":null,"docs":" Return type of a `Dispatchable` which contains the `DispatchResult` and additional information\n about the `Dispatchable` that is only known post dispatch.\n","sig":null,"attributes":[{"value":"/ Return type of a `Dispatchable` which contains the `DispatchResult` and additional information","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11518,"byte_end":11616,"line_start":389,"line_end":389,"column_start":1,"column_end":99}},{"value":"/ about the `Dispatchable` that is only known post dispatch.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11617,"byte_end":11679,"line_start":390,"line_end":390,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3936},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11995,"byte_end":12000,"line_start":398,"line_end":398,"column_start":2,"column_end":7},"name":"Other","qualname":"::DispatchError::Other","value":"DispatchError::Other(&'static str)","parent":{"krate":0,"index":3935},"children":[],"decl_id":null,"docs":" Some error occurred.\n","sig":null,"attributes":[{"value":"/ Some error occurred.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11969,"byte_end":11993,"line_start":397,"line_end":397,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3938},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12121,"byte_end":12133,"line_start":400,"line_end":400,"column_start":2,"column_end":14},"name":"CannotLookup","qualname":"::DispatchError::CannotLookup","value":"DispatchError::CannotLookup","parent":{"krate":0,"index":3935},"children":[],"decl_id":null,"docs":" Failed to lookup some data.\n","sig":null,"attributes":[{"value":"/ Failed to lookup some data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12088,"byte_end":12119,"line_start":399,"line_end":399,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3940},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12155,"byte_end":12164,"line_start":402,"line_end":402,"column_start":2,"column_end":11},"name":"BadOrigin","qualname":"::DispatchError::BadOrigin","value":"DispatchError::BadOrigin","parent":{"krate":0,"index":3935},"children":[],"decl_id":null,"docs":" A bad origin.\n","sig":null,"attributes":[{"value":"/ A bad origin.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12136,"byte_end":12153,"line_start":401,"line_end":401,"column_start":2,"column_end":19}}]},{"kind":"StructVariant","id":{"krate":0,"index":3942},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12200,"byte_end":12206,"line_start":404,"line_end":404,"column_start":2,"column_end":8},"name":"Module","qualname":"::DispatchError::Module","value":"DispatchError::Module { index, error, message }","parent":{"krate":0,"index":3935},"children":[],"decl_id":null,"docs":" A custom error in a module.\n","sig":null,"attributes":[{"value":"/ A custom error in a module.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12167,"byte_end":12198,"line_start":403,"line_end":403,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3945},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12545,"byte_end":12562,"line_start":415,"line_end":415,"column_start":2,"column_end":19},"name":"ConsumerRemaining","qualname":"::DispatchError::ConsumerRemaining","value":"DispatchError::ConsumerRemaining","parent":{"krate":0,"index":3935},"children":[],"decl_id":null,"docs":" At least one consumer is remaining so the account cannot be destroyed.\n","sig":null,"attributes":[{"value":"/ At least one consumer is remaining so the account cannot be destroyed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12469,"byte_end":12543,"line_start":414,"line_end":414,"column_start":2,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3947},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12627,"byte_end":12638,"line_start":417,"line_end":417,"column_start":2,"column_end":13},"name":"NoProviders","qualname":"::DispatchError::NoProviders","value":"DispatchError::NoProviders","parent":{"krate":0,"index":3935},"children":[],"decl_id":null,"docs":" There are no providers so the account cannot be created.\n","sig":null,"attributes":[{"value":"/ There are no providers so the account cannot be created.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12565,"byte_end":12625,"line_start":416,"line_end":416,"column_start":2,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":3935},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11952,"byte_end":11965,"line_start":396,"line_end":396,"column_start":10,"column_end":23},"name":"DispatchError","qualname":"::DispatchError","value":"pub enum DispatchError {\n\n    /// Some error occurred.\n    Other(\n          #[codec(skip)]\n          #[serde(skip_deserializing)]\n          &'static str),\n\n    /// Failed to lookup some data.\n    CannotLookup,\n\n    /// A bad origin.\n    BadOrigin,\n\n    /// A custom error in a module.\n    Module {\n        /// Module index, matching the metadata module index.\n        index: u8,\n        /// Module specific error value.\n        error: u8,\n        /// Optional error message.\n        #[codec(skip)]\n        #[serde(skip_deserializing)]\n        message: Option<&'static str>,\n    },\n\n    /// At least one consumer is remaining so the account cannot be destroyed.\n    ConsumerRemaining,\n\n    /// There are no providers so the account cannot be created.\n    NoProviders,\n}","parent":null,"children":[{"krate":0,"index":3936},{"krate":0,"index":3938},{"krate":0,"index":3940},{"krate":0,"index":3942},{"krate":0,"index":3945},{"krate":0,"index":3947}],"decl_id":null,"docs":" Reason why a dispatch call failed.\n","sig":null,"attributes":[{"value":"/ Reason why a dispatch call failed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11775,"byte_end":11813,"line_start":393,"line_end":393,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4064},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12879,"byte_end":12904,"line_start":423,"line_end":423,"column_start":12,"column_end":37},"name":"DispatchErrorWithPostInfo","qualname":"::DispatchErrorWithPostInfo","value":"DispatchErrorWithPostInfo { post_info, error }","parent":null,"children":[{"krate":0,"index":4066},{"krate":0,"index":4067}],"decl_id":null,"docs":" Result of a `Dispatchable` which contains the `DispatchResult` and additional information about\n the `Dispatchable` that is only known post dispatch.\n","sig":null,"attributes":[{"value":"/ Result of a `Dispatchable` which contains the `DispatchResult` and additional information about","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12643,"byte_end":12742,"line_start":420,"line_end":420,"column_start":1,"column_end":100}},{"value":"/ the `Dispatchable` that is only known post dispatch.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12743,"byte_end":12799,"line_start":421,"line_end":421,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":4066},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13087,"byte_end":13096,"line_start":427,"line_end":427,"column_start":6,"column_end":15},"name":"post_info","qualname":"::DispatchErrorWithPostInfo::post_info","value":"Info","parent":{"krate":0,"index":4064},"children":[],"decl_id":null,"docs":" Additional information about the `Dispatchable` which is only known post dispatch.\n","sig":null,"attributes":[{"value":"/ Additional information about the `Dispatchable` which is only known post dispatch.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":12995,"byte_end":13081,"line_start":426,"line_end":426,"column_start":2,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":4067},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13190,"byte_end":13195,"line_start":429,"line_end":429,"column_start":6,"column_end":11},"name":"error","qualname":"::DispatchErrorWithPostInfo::error","value":"DispatchError","parent":{"krate":0,"index":4064},"children":[],"decl_id":null,"docs":" The actual `DispatchResult` indicating whether the dispatch was successful.\n","sig":null,"attributes":[{"value":"/ The actual `DispatchResult` indicating whether the dispatch was successful.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13105,"byte_end":13184,"line_start":428,"line_end":428,"column_start":2,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13305,"byte_end":13313,"line_start":434,"line_end":434,"column_start":9,"column_end":17},"name":"stripped","qualname":"<DispatchError>::stripped","value":"pub fn stripped(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the same error but without the attached message.\n","sig":null,"attributes":[{"value":"/ Return the same error but without the attached message.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13237,"byte_end":13296,"line_start":433,"line_end":433,"column_start":2,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1513},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16369,"byte_end":16384,"line_start":542,"line_end":542,"column_start":10,"column_end":25},"name":"DispatchOutcome","qualname":"::DispatchOutcome","value":"Result<(), DispatchError>","parent":null,"children":[],"decl_id":null,"docs":" This type specifies the outcome of dispatching a call to a module.","sig":null,"attributes":[{"value":"/ This type specifies the outcome of dispatching a call to a module.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":15840,"byte_end":15910,"line_start":533,"line_end":533,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":15911,"byte_end":15914,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ In case of failure an error specific to the module is returned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":15915,"byte_end":15982,"line_start":535,"line_end":535,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":15983,"byte_end":15986,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ Failure of the module call dispatching doesn't invalidate the extrinsic and it is still included","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":15987,"byte_end":16087,"line_start":537,"line_end":537,"column_start":1,"column_end":101}},{"value":"/ in the block, therefore all state changes performed by the dispatched call are still persisted.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16088,"byte_end":16187,"line_start":538,"line_end":538,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16188,"byte_end":16191,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ For example, if the dispatching of an extrinsic involves inclusion fee payment then these","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16192,"byte_end":16285,"line_start":540,"line_end":540,"column_start":1,"column_end":94}},{"value":"/ changes are going to be preserved even if the call dispatched failed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16286,"byte_end":16359,"line_start":541,"line_end":541,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1514},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":17531,"byte_end":17551,"line_start":562,"line_end":562,"column_start":10,"column_end":30},"name":"ApplyExtrinsicResult","qualname":"::ApplyExtrinsicResult","value":"Result<DispatchOutcome, transaction_validity::TransactionValidityError>","parent":null,"children":[],"decl_id":null,"docs":" The result of applying of an extrinsic.","sig":null,"attributes":[{"value":"/ The result of applying of an extrinsic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16415,"byte_end":16458,"line_start":544,"line_end":544,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16459,"byte_end":16462,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ This type is typically used in the context of `BlockBuilder` to signal that the extrinsic","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16463,"byte_end":16556,"line_start":546,"line_end":546,"column_start":1,"column_end":94}},{"value":"/ in question cannot be included.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16557,"byte_end":16592,"line_start":547,"line_end":547,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16593,"byte_end":16596,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ A block containing extrinsics that have a negative inclusion outcome is invalid. A negative","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16597,"byte_end":16692,"line_start":549,"line_end":549,"column_start":1,"column_end":96}},{"value":"/ result can only occur during the block production, where such extrinsics are detected and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16693,"byte_end":16786,"line_start":550,"line_end":550,"column_start":1,"column_end":94}},{"value":"/ removed from the block that is being created and the transaction pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16787,"byte_end":16861,"line_start":551,"line_end":551,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16862,"byte_end":16865,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ To rehash: every extrinsic in a valid block must return a positive `ApplyExtrinsicResult`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16866,"byte_end":16960,"line_start":553,"line_end":553,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16961,"byte_end":16964,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ Examples of reasons preventing inclusion in a block:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":16965,"byte_end":17021,"line_start":555,"line_end":555,"column_start":1,"column_end":57}},{"value":"/ - More block weight is required to process the extrinsic than is left in the block being built.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":17022,"byte_end":17121,"line_start":556,"line_end":556,"column_start":1,"column_end":100}},{"value":"/   This doesn't necessarily mean that the extrinsic is invalid, since it can still be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":17122,"byte_end":17210,"line_start":557,"line_end":557,"column_start":1,"column_end":89}},{"value":"/   included in the next block if it has enough spare weight available.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":17211,"byte_end":17284,"line_start":558,"line_end":558,"column_start":1,"column_end":74}},{"value":"/ - The sender doesn't have enough funds to pay the transaction inclusion fee. Including such","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":17285,"byte_end":17380,"line_start":559,"line_end":559,"column_start":1,"column_end":96}},{"value":"/   a transaction in the block doesn't make sense.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":17381,"byte_end":17433,"line_start":560,"line_end":560,"column_start":1,"column_end":53}},{"value":"/ - The extrinsic supplied a bad signature. This transaction won't become valid ever.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":17434,"byte_end":17521,"line_start":561,"line_end":561,"column_start":1,"column_end":88}}]},{"kind":"Type","id":{"krate":0,"index":1515},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":17722,"byte_end":17750,"line_start":565,"line_end":565,"column_start":10,"column_end":38},"name":"ApplyExtrinsicResultWithInfo","qualname":"::ApplyExtrinsicResultWithInfo","value":"Result<DispatchResultWithInfo<T>,\n       transaction_validity::TransactionValidityError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `ApplyExtrinsicResult` but augmented with `PostDispatchInfo` on success.\n","sig":null,"attributes":[{"value":"/ Same as `ApplyExtrinsicResult` but augmented with `PostDispatchInfo` on success.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":17628,"byte_end":17712,"line_start":564,"line_end":564,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":1517},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":17996,"byte_end":18015,"line_start":570,"line_end":570,"column_start":8,"column_end":27},"name":"verify_encoded_lazy","qualname":"::verify_encoded_lazy","value":"pub fn verify_encoded_lazy<V: Verify,\n                           T: codec::Encode>(&V, &T,\n                                             &<V::Signer as\n                                              IdentifyAccount>::AccountId)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify a signature on an encoded value in a lazy manner. This can be\n an optimization if the signature scheme has an \"unsigned\" escape hash.\n","sig":null,"attributes":[{"value":"/ Verify a signature on an encoded value in a lazy manner. This can be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":17841,"byte_end":17913,"line_start":568,"line_end":568,"column_start":1,"column_end":73}},{"value":"/ an optimization if the signature scheme has an \"unsigned\" escape hash.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":17914,"byte_end":17988,"line_start":569,"line_end":569,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4101},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":19596,"byte_end":19611,"line_start":630,"line_end":630,"column_start":12,"column_end":27},"name":"OpaqueExtrinsic","qualname":"::OpaqueExtrinsic","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple blob to hold an extrinsic without committing to its format and ensure it is serialized\n correctly.\n","sig":null,"attributes":[{"value":"/ Simple blob to hold an extrinsic without committing to its format and ensure it is serialized","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":19415,"byte_end":19512,"line_start":627,"line_end":627,"column_start":1,"column_end":98}},{"value":"/ correctly.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":19513,"byte_end":19527,"line_start":628,"line_end":628,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":19713,"byte_end":19723,"line_start":634,"line_end":634,"column_start":9,"column_end":19},"name":"from_bytes","qualname":"<OpaqueExtrinsic>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, codec::Error>","parent":null,"children":[],"decl_id":null,"docs":" Convert an encoded extrinsic to an `OpaqueExtrinsic`.\n","sig":null,"attributes":[{"value":"/ Convert an encoded extrinsic to an `OpaqueExtrinsic`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":19647,"byte_end":19704,"line_start":633,"line_end":633,"column_start":2,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1547},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21088,"byte_end":21093,"line_start":681,"line_end":681,"column_start":8,"column_end":13},"name":"print","qualname":"::print","value":"pub fn print<impl traits::Printable: traits::Printable>(impl traits::Printable)","parent":null,"children":[],"decl_id":null,"docs":" Print something that implements `Printable` from the runtime.\n","sig":null,"attributes":[{"value":"/ Print something that implements `Printable` from the runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21015,"byte_end":21080,"line_start":680,"line_end":680,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1549},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21367,"byte_end":21384,"line_start":691,"line_end":691,"column_start":12,"column_end":29},"name":"SignatureBatching","qualname":"::SignatureBatching","value":"","parent":null,"children":[],"decl_id":null,"docs":" Batching session.","sig":null,"attributes":[{"value":"/ Batching session.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21147,"byte_end":21168,"line_start":686,"line_end":686,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21169,"byte_end":21172,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/ To be used in runtime only. Outside of runtime, just construct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21173,"byte_end":21239,"line_start":688,"line_end":688,"column_start":1,"column_end":67}},{"value":"/ `BatchVerifier` directly.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21240,"byte_end":21269,"line_start":689,"line_end":689,"column_start":1,"column_end":30}},{"value":"must_use =\n  \"`verify()` needs to be called to finish batch signature verification!\"","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21270,"byte_end":21355,"line_start":690,"line_end":690,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21459,"byte_end":21464,"line_start":695,"line_end":695,"column_start":9,"column_end":14},"name":"start","qualname":"<SignatureBatching>::start","value":"pub fn start() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start new batching session.\n","sig":null,"attributes":[{"value":"/ Start new batching session.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21419,"byte_end":21450,"line_start":694,"line_end":694,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21634,"byte_end":21640,"line_start":702,"line_end":702,"column_start":9,"column_end":15},"name":"verify","qualname":"<SignatureBatching>::verify","value":"pub fn verify(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify all signatures submitted during the batching session.\n","sig":null,"attributes":[{"value":"/ Verify all signatures submitted during the batching session.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21548,"byte_end":21612,"line_start":700,"line_end":700,"column_start":2,"column_end":66}},{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21614,"byte_end":21625,"line_start":701,"line_end":701,"column_start":2,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1559},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":22238,"byte_end":22244,"line_start":723,"line_end":723,"column_start":2,"column_end":8},"name":"Commit","qualname":"::TransactionOutcome::Commit","value":"TransactionOutcome::Commit(R)","parent":{"krate":0,"index":1557},"children":[],"decl_id":null,"docs":" Commit the transaction.\n","sig":null,"attributes":[{"value":"/ Commit the transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":22209,"byte_end":22236,"line_start":722,"line_end":722,"column_start":2,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1562},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":22281,"byte_end":22289,"line_start":725,"line_end":725,"column_start":2,"column_end":10},"name":"Rollback","qualname":"::TransactionOutcome::Rollback","value":"TransactionOutcome::Rollback(R)","parent":{"krate":0,"index":1557},"children":[],"decl_id":null,"docs":" Rollback the transaction.\n","sig":null,"attributes":[{"value":"/ Rollback the transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":22250,"byte_end":22279,"line_start":724,"line_end":724,"column_start":2,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1557},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":22184,"byte_end":22202,"line_start":721,"line_end":721,"column_start":10,"column_end":28},"name":"TransactionOutcome","qualname":"::TransactionOutcome","value":"pub enum TransactionOutcome<R> {\n\n    /// Commit the transaction.\n    Commit(R),\n\n    /// Rollback the transaction.\n    Rollback(R),\n}","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1562}],"decl_id":null,"docs":" Describes on what should happen with a storage transaction.\n","sig":null,"attributes":[{"value":"/ Describes on what should happen with a storage transaction.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":22111,"byte_end":22174,"line_start":720,"line_end":720,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":22371,"byte_end":22381,"line_start":730,"line_end":730,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<TransactionOutcome<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Convert into the inner type.\n","sig":null,"attributes":[{"value":"/ Convert into the inner type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":22330,"byte_end":22362,"line_start":729,"line_end":729,"column_start":2,"column_end":34}}]}],"impls":[{"id":1,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","byte_start":25894,"byte_end":25909,"line_start":36,"line_end":36,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33601,"byte_end":33619,"line_start":53,"line_end":53,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33861,"byte_end":33879,"line_start":64,"line_end":64,"column_start":2,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":34417,"byte_end":34435,"line_start":89,"line_end":89,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":35003,"byte_end":35021,"line_start":115,"line_end":115,"column_start":2,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36135,"byte_end":36153,"line_start":151,"line_end":151,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36677,"byte_end":36690,"line_start":170,"line_end":170,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":37448,"byte_end":37461,"line_start":194,"line_end":194,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":37881,"byte_end":37894,"line_start":212,"line_end":212,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":38008,"byte_end":38026,"line_start":219,"line_end":219,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":38958,"byte_end":38976,"line_start":249,"line_end":249,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":39493,"byte_end":39511,"line_start":274,"line_end":274,"column_start":6,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":39758,"byte_end":39776,"line_start":284,"line_end":284,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":40100,"byte_end":40118,"line_start":293,"line_end":293,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":40453,"byte_end":40471,"line_start":305,"line_end":305,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":40867,"byte_end":40882,"line_start":322,"line_end":322,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46507,"byte_end":46510,"line_start":59,"line_end":59,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":48090,"byte_end":48093,"line_start":109,"line_end":109,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":48489,"byte_end":48492,"line_start":122,"line_end":122,"column_start":28,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":48513,"byte_end":48516,"line_start":124,"line_end":124,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/checked_extrinsic.rs","byte_start":52535,"byte_end":52551,"line_start":41,"line_end":41,"column_start":2,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":56219,"byte_end":56225,"line_start":57,"line_end":57,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":57201,"byte_end":57207,"line_start":88,"line_end":88,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":57664,"byte_end":57670,"line_start":104,"line_end":104,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":58132,"byte_end":58138,"line_start":118,"line_end":118,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":58295,"byte_end":58301,"line_start":124,"line_end":124,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":59834,"byte_end":59840,"line_start":173,"line_end":173,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62861,"byte_end":62868,"line_start":47,"line_end":47,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63132,"byte_end":63139,"line_start":59,"line_end":59,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63212,"byte_end":63219,"line_start":62,"line_end":62,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63856,"byte_end":63861,"line_start":80,"line_end":80,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66351,"byte_end":66357,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66438,"byte_end":66444,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69906,"byte_end":69916,"line_start":139,"line_end":139,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70170,"byte_end":70180,"line_start":148,"line_end":148,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72682,"byte_end":72692,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74715,"byte_end":74725,"line_start":272,"line_end":272,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74835,"byte_end":74845,"line_start":278,"line_end":278,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74886,"byte_end":74896,"line_start":280,"line_end":280,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":75846,"byte_end":75859,"line_start":310,"line_end":310,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":78182,"byte_end":78195,"line_start":379,"line_end":379,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":79134,"byte_end":79151,"line_start":414,"line_end":414,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":79421,"byte_end":79434,"line_start":423,"line_end":423,"column_start":46,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82982,"byte_end":82988,"line_start":80,"line_end":80,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":83370,"byte_end":83376,"line_start":103,"line_end":103,"column_start":7,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84578,"byte_end":84585,"line_start":145,"line_end":145,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84779,"byte_end":84786,"line_start":157,"line_end":157,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84896,"byte_end":84903,"line_start":164,"line_end":164,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85184,"byte_end":85191,"line_start":179,"line_end":179,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":86009,"byte_end":86016,"line_start":216,"line_end":216,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87338,"byte_end":87352,"line_start":275,"line_end":275,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89288,"byte_end":89296,"line_start":337,"line_end":337,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":90479,"byte_end":90491,"line_start":381,"line_end":381,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":90841,"byte_end":90853,"line_start":394,"line_end":394,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":91445,"byte_end":91457,"line_start":421,"line_end":421,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92310,"byte_end":92317,"line_start":467,"line_end":467,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":93137,"byte_end":93152,"line_start":497,"line_end":497,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97095,"byte_end":97110,"line_start":31,"line_end":31,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":105297,"byte_end":105301,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":105427,"byte_end":105431,"line_start":123,"line_end":123,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":106523,"byte_end":106543,"line_start":157,"line_end":157,"column_start":40,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":106718,"byte_end":106738,"line_start":166,"line_end":166,"column_start":42,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":107534,"byte_end":107546,"line_start":191,"line_end":191,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":107891,"byte_end":107903,"line_start":202,"line_end":202,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":108172,"byte_end":108184,"line_start":212,"line_end":212,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109497,"byte_end":109508,"line_start":252,"line_end":252,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109702,"byte_end":109713,"line_start":259,"line_end":259,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112600,"byte_end":112616,"line_start":348,"line_end":348,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113494,"byte_end":113510,"line_start":374,"line_end":374,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113624,"byte_end":113635,"line_start":382,"line_end":382,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113976,"byte_end":113987,"line_start":395,"line_end":395,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121581,"byte_end":121596,"line_start":42,"line_end":42,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121749,"byte_end":121764,"line_start":54,"line_end":54,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121965,"byte_end":121980,"line_start":62,"line_end":62,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":122027,"byte_end":122042,"line_start":66,"line_end":66,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":122496,"byte_end":122511,"line_start":81,"line_end":81,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":122815,"byte_end":122830,"line_start":88,"line_end":88,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":123529,"byte_end":123544,"line_start":116,"line_end":116,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":123863,"byte_end":123878,"line_start":132,"line_end":132,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":123938,"byte_end":123953,"line_start":136,"line_end":136,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124253,"byte_end":124266,"line_start":148,"line_end":148,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124635,"byte_end":124641,"line_start":165,"line_end":165,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125164,"byte_end":125180,"line_start":182,"line_end":182,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125364,"byte_end":125380,"line_start":193,"line_end":193,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125562,"byte_end":125578,"line_start":199,"line_end":199,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125660,"byte_end":125676,"line_start":205,"line_end":205,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":126105,"byte_end":126110,"line_start":223,"line_end":223,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":126700,"byte_end":126705,"line_start":246,"line_end":246,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127373,"byte_end":127379,"line_start":266,"line_end":266,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127656,"byte_end":127662,"line_start":276,"line_end":276,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127884,"byte_end":127890,"line_start":282,"line_end":282,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":128111,"byte_end":128117,"line_start":288,"line_end":288,"column_start":72,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":128312,"byte_end":128318,"line_start":293,"line_end":293,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":128630,"byte_end":128636,"line_start":306,"line_end":306,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132330,"byte_end":132336,"line_start":66,"line_end":66,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132449,"byte_end":132455,"line_start":71,"line_end":71,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132566,"byte_end":132572,"line_start":76,"line_end":76,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132982,"byte_end":132991,"line_start":91,"line_end":91,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":133223,"byte_end":133232,"line_start":99,"line_end":99,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":133462,"byte_end":133471,"line_start":107,"line_end":107,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":134354,"byte_end":134355,"line_start":132,"line_end":132,"column_start":17,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136043,"byte_end":136067,"line_start":185,"line_end":185,"column_start":28,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":137122,"byte_end":137136,"line_start":218,"line_end":218,"column_start":61,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":137283,"byte_end":137297,"line_start":225,"line_end":225,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":137619,"byte_end":137634,"line_start":233,"line_end":233,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":138934,"byte_end":138942,"line_start":281,"line_end":281,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139132,"byte_end":139143,"line_start":287,"line_end":287,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140179,"byte_end":140180,"line_start":312,"line_end":312,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141750,"byte_end":141751,"line_start":365,"line_end":365,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142235,"byte_end":142236,"line_start":382,"line_end":382,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":143362,"byte_end":143373,"line_start":414,"line_end":414,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":143580,"byte_end":143591,"line_start":424,"line_end":424,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":144026,"byte_end":144035,"line_start":441,"line_end":441,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":144242,"byte_end":144251,"line_start":451,"line_end":451,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":144720,"byte_end":144724,"line_start":469,"line_end":469,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":145253,"byte_end":145263,"line_start":492,"line_end":492,"column_start":64,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146545,"byte_end":146546,"line_start":532,"line_end":532,"column_start":84,"column_end":85},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153078,"byte_end":153079,"line_start":699,"line_end":699,"column_start":57,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":166324,"byte_end":166340,"line_start":1052,"line_end":1052,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":166507,"byte_end":166523,"line_start":1059,"line_end":1059,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":167358,"byte_end":167375,"line_start":1095,"line_end":1095,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":167519,"byte_end":167536,"line_start":1102,"line_end":1102,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":169296,"byte_end":169298,"line_start":1146,"line_end":1146,"column_start":93,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181635,"byte_end":181653,"line_start":81,"line_end":81,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1250},{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":184308,"byte_end":184332,"line_start":154,"line_end":154,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":185126,"byte_end":185150,"line_start":182,"line_end":182,"column_start":35,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":185278,"byte_end":185302,"line_start":188,"line_end":188,"column_start":35,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":185447,"byte_end":185471,"line_start":195,"line_end":195,"column_start":28,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":185604,"byte_end":185628,"line_start":202,"line_end":202,"column_start":28,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":185987,"byte_end":186005,"line_start":212,"line_end":212,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186108,"byte_end":186126,"line_start":218,"line_end":218,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188833,"byte_end":188849,"line_start":286,"line_end":286,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":189039,"byte_end":189055,"line_start":298,"line_end":298,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190442,"byte_end":190465,"line_start":335,"line_end":335,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":193248,"byte_end":193267,"line_start":409,"line_end":409,"column_start":40,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":193389,"byte_end":193405,"line_start":415,"line_end":415,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196592,"byte_end":196613,"line_start":52,"line_end":52,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":199699,"byte_end":199712,"line_start":51,"line_end":51,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":199836,"byte_end":199842,"line_start":58,"line_end":58,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":200023,"byte_end":200036,"line_start":67,"line_end":67,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":200125,"byte_end":200138,"line_start":73,"line_end":73,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":200240,"byte_end":200253,"line_start":79,"line_end":79,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":200403,"byte_end":200416,"line_start":88,"line_end":88,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":200568,"byte_end":200581,"line_start":97,"line_end":97,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":200757,"byte_end":200770,"line_start":104,"line_end":104,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":201007,"byte_end":201020,"line_start":114,"line_end":114,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":201300,"byte_end":201313,"line_start":124,"line_end":124,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202991,"byte_end":203003,"line_start":40,"line_end":40,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":203611,"byte_end":203623,"line_start":56,"line_end":56,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":203763,"byte_end":203775,"line_start":62,"line_end":62,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3293,"byte_end":3301,"line_start":106,"line_end":106,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":4344,"byte_end":4351,"line_start":141,"line_end":141,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5690,"byte_end":5704,"line_start":187,"line_end":187,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5826,"byte_end":5835,"line_start":193,"line_end":193,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6026,"byte_end":6040,"line_start":200,"line_end":200,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6162,"byte_end":6171,"line_start":206,"line_end":206,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6360,"byte_end":6374,"line_start":213,"line_end":213,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6490,"byte_end":6499,"line_start":219,"line_end":219,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6671,"byte_end":6685,"line_start":226,"line_end":226,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7211,"byte_end":7222,"line_start":244,"line_end":244,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7494,"byte_end":7505,"line_start":252,"line_end":252,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7621,"byte_end":7632,"line_start":258,"line_end":258,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7871,"byte_end":7882,"line_start":268,"line_end":268,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":8220,"byte_end":8231,"line_start":279,"line_end":279,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":8344,"byte_end":8350,"line_start":285,"line_end":285,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":8532,"byte_end":8543,"line_start":292,"line_end":292,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":8656,"byte_end":8662,"line_start":298,"line_end":298,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":8842,"byte_end":8853,"line_start":305,"line_end":305,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":8960,"byte_end":8966,"line_start":311,"line_end":311,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":9166,"byte_end":9177,"line_start":319,"line_end":319,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":9493,"byte_end":9507,"line_start":329,"line_end":329,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":10433,"byte_end":10445,"line_start":353,"line_end":353,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":10908,"byte_end":10920,"line_start":366,"line_end":366,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11030,"byte_end":11042,"line_start":372,"line_end":372,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11147,"byte_end":11162,"line_start":378,"line_end":378,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13220,"byte_end":13233,"line_start":432,"line_end":432,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13511,"byte_end":13536,"line_start":443,"line_end":443,"column_start":24,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13803,"byte_end":13816,"line_start":455,"line_end":455,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13936,"byte_end":13949,"line_start":461,"line_end":461,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":14069,"byte_end":14082,"line_start":467,"line_end":467,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":14336,"byte_end":14349,"line_start":476,"line_end":476,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":15132,"byte_end":15145,"line_start":503,"line_end":503,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":15634,"byte_end":15659,"line_start":523,"line_end":523,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":18545,"byte_end":18555,"line_start":584,"line_end":584,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":19628,"byte_end":19643,"line_start":632,"line_end":632,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":19881,"byte_end":19896,"line_start":640,"line_end":640,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":20029,"byte_end":20044,"line_start":646,"line_end":646,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":20391,"byte_end":20406,"line_start":660,"line_end":660,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":20656,"byte_end":20671,"line_start":667,"line_end":667,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":675,"line_end":675,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21398,"byte_end":21415,"line_start":693,"line_end":693,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21737,"byte_end":21754,"line_start":708,"line_end":708,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":22305,"byte_end":22323,"line_start":728,"line_end":728,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1377,"byte_end":1382,"line_start":50,"line_end":50,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":26}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1392,"byte_end":1399,"line_start":51,"line_end":51,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1409,"byte_end":1417,"line_start":52,"line_end":52,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":451}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/mod.rs","byte_start":80601,"byte_end":80605,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":452}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/mod.rs","byte_start":80615,"byte_end":80622,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":530}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/mod.rs","byte_start":80632,"byte_end":80644,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":554}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1451,"byte_end":1458,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":658}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1468,"byte_end":1474,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":825}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1484,"byte_end":1504,"line_start":56,"line_end":56,"column_start":9,"column_end":29},"ref_id":{"krate":0,"index":1240}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":1514,"byte_end":1537,"line_start":57,"line_end":57,"column_start":9,"column_end":32},"ref_id":{"krate":0,"index":1293}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/curve.rs","byte_start":25894,"byte_end":25909,"line_start":36,"line_end":36,"column_start":10,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33601,"byte_end":33619,"line_start":53,"line_end":53,"column_start":6,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1586},"to":{"krate":152,"index":51}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":33861,"byte_end":33879,"line_start":64,"line_end":64,"column_start":2,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":34417,"byte_end":34435,"line_start":89,"line_end":89,"column_start":6,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1586},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":35003,"byte_end":35021,"line_start":115,"line_end":115,"column_start":2,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1586},"to":{"krate":0,"index":1096}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36135,"byte_end":36153,"line_start":151,"line_end":151,"column_start":6,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1586},"to":{"krate":0,"index":1085}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":36677,"byte_end":36690,"line_start":170,"line_end":170,"column_start":19,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":37448,"byte_end":37461,"line_start":194,"line_end":194,"column_start":30,"column_end":43},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":111},"to":{"krate":18,"index":109}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":37881,"byte_end":37894,"line_start":212,"line_end":212,"column_start":34,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":111},"to":{"krate":18,"index":699}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":38008,"byte_end":38026,"line_start":219,"line_end":219,"column_start":6,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1586},"to":{"krate":18,"index":127}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":38958,"byte_end":38976,"line_start":249,"line_end":249,"column_start":6,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1586},"to":{"krate":18,"index":109}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":39493,"byte_end":39511,"line_start":274,"line_end":274,"column_start":6,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1586},"to":{"krate":18,"index":699}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":39758,"byte_end":39776,"line_start":284,"line_end":284,"column_start":6,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1586},"to":{"krate":22,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":40100,"byte_end":40118,"line_start":293,"line_end":293,"column_start":6,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1586},"to":{"krate":22,"index":1274}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":40453,"byte_end":40471,"line_start":305,"line_end":305,"column_start":6,"column_end":24},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1586},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/unchecked_extrinsic.rs","byte_start":40867,"byte_end":40882,"line_start":322,"line_end":322,"column_start":6,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4101},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":46507,"byte_end":46510,"line_start":59,"line_end":59,"column_start":6,"column_end":9},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":48090,"byte_end":48093,"line_start":109,"line_end":109,"column_start":17,"column_end":20},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1623},"to":{"krate":18,"index":109}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":48489,"byte_end":48492,"line_start":122,"line_end":122,"column_start":28,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1623},"to":{"krate":18,"index":699}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/era.rs","byte_start":48513,"byte_end":48516,"line_start":124,"line_end":124,"column_start":17,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1623},"to":{"krate":18,"index":127}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/checked_extrinsic.rs","byte_start":52535,"byte_end":52551,"line_start":41,"line_end":41,"column_start":2,"column_end":18},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1697},"to":{"krate":0,"index":1146}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":56219,"byte_end":56225,"line_start":57,"line_end":57,"column_start":54,"column_end":60},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1732},"to":{"krate":152,"index":51}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":57201,"byte_end":57207,"line_start":88,"line_end":88,"column_start":31,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1732},"to":{"krate":18,"index":127}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":57664,"byte_end":57670,"line_start":104,"line_end":104,"column_start":31,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1732},"to":{"krate":18,"index":109}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":58132,"byte_end":58138,"line_start":118,"line_end":118,"column_start":42,"column_end":48},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1732},"to":{"krate":18,"index":699}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":58295,"byte_end":58301,"line_start":124,"line_end":124,"column_start":39,"column_end":45},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1732},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/header.rs","byte_start":59834,"byte_end":59840,"line_start":173,"line_end":173,"column_start":20,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":62861,"byte_end":62868,"line_start":47,"line_end":47,"column_start":21,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63132,"byte_end":63139,"line_start":59,"line_end":59,"column_start":30,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1863},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63212,"byte_end":63219,"line_start":62,"line_end":62,"column_start":38,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1863},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/block.rs","byte_start":63856,"byte_end":63861,"line_start":80,"line_end":80,"column_start":59,"column_end":64},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1895},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66351,"byte_end":66357,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2085},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":66438,"byte_end":66444,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":69906,"byte_end":69916,"line_start":139,"line_end":139,"column_start":41,"column_end":51},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2177},"to":{"krate":22,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":70170,"byte_end":70180,"line_start":148,"line_end":148,"column_start":51,"column_end":61},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2177},"to":{"krate":22,"index":1274}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":72682,"byte_end":72692,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74715,"byte_end":74725,"line_start":272,"line_end":272,"column_start":31,"column_end":41},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2177},"to":{"krate":18,"index":109}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74835,"byte_end":74845,"line_start":278,"line_end":278,"column_start":42,"column_end":52},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2177},"to":{"krate":18,"index":699}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":74886,"byte_end":74896,"line_start":280,"line_end":280,"column_start":31,"column_end":41},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2177},"to":{"krate":18,"index":127}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":75846,"byte_end":75859,"line_start":310,"line_end":310,"column_start":16,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":78182,"byte_end":78195,"line_start":379,"line_end":379,"column_start":35,"column_end":48},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2249},"to":{"krate":18,"index":109}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":79134,"byte_end":79151,"line_start":414,"line_end":414,"column_start":6,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/generic/digest.rs","byte_start":79421,"byte_end":79434,"line_start":423,"line_end":423,"column_start":46,"column_end":59},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2249},"to":{"krate":18,"index":699}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":82982,"byte_end":82988,"line_start":80,"line_end":80,"column_start":21,"column_end":27},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2366},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":83370,"byte_end":83376,"line_start":103,"line_end":103,"column_start":7,"column_end":13},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84578,"byte_end":84585,"line_start":145,"line_end":145,"column_start":30,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2405},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84779,"byte_end":84786,"line_start":157,"line_end":157,"column_start":10,"column_end":17},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":84896,"byte_end":84903,"line_start":164,"line_end":164,"column_start":13,"column_end":20},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":85184,"byte_end":85191,"line_start":179,"line_end":179,"column_start":22,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":86009,"byte_end":86016,"line_start":216,"line_end":216,"column_start":51,"column_end":58},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":87338,"byte_end":87352,"line_start":275,"line_end":275,"column_start":6,"column_end":20},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":89288,"byte_end":89296,"line_start":337,"line_end":337,"column_start":6,"column_end":14},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":90479,"byte_end":90491,"line_start":381,"line_end":381,"column_start":26,"column_end":38},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2470},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":90841,"byte_end":90853,"line_start":394,"line_end":394,"column_start":6,"column_end":18},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":91445,"byte_end":91457,"line_start":421,"line_end":421,"column_start":19,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2470},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":92310,"byte_end":92317,"line_start":467,"line_end":467,"column_start":6,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/http.rs","byte_start":93137,"byte_end":93152,"line_start":497,"line_end":497,"column_start":10,"column_end":25},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage.rs","byte_start":97095,"byte_end":97110,"line_start":31,"line_end":31,"column_start":10,"column_end":25},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":104261,"byte_end":104266,"line_start":84,"line_end":84,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":569}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":105297,"byte_end":105301,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2503},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":105427,"byte_end":105431,"line_start":123,"line_end":123,"column_start":19,"column_end":23},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2503},"to":{"krate":0,"index":569}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":106523,"byte_end":106543,"line_start":157,"line_end":157,"column_start":40,"column_end":60},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2520},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":106718,"byte_end":106738,"line_start":166,"line_end":166,"column_start":42,"column_end":62},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2520},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":107534,"byte_end":107546,"line_start":191,"line_end":191,"column_start":42,"column_end":54},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":107891,"byte_end":107903,"line_start":202,"line_end":202,"column_start":40,"column_end":52},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":108172,"byte_end":108184,"line_start":212,"line_end":212,"column_start":43,"column_end":55},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":590},"to":{"krate":0,"index":569}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109497,"byte_end":109508,"line_start":252,"line_end":252,"column_start":33,"column_end":44},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":109702,"byte_end":109713,"line_start":259,"line_end":259,"column_start":23,"column_end":34},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":112600,"byte_end":112616,"line_start":348,"line_end":348,"column_start":27,"column_end":43},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113494,"byte_end":113510,"line_start":374,"line_end":374,"column_start":36,"column_end":52},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":630},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113624,"byte_end":113635,"line_start":382,"line_end":382,"column_start":10,"column_end":21},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/offchain/storage_lock.rs","byte_start":113976,"byte_end":113987,"line_start":395,"line_end":395,"column_start":13,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121581,"byte_end":121596,"line_start":42,"line_end":42,"column_start":20,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2549},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121749,"byte_end":121764,"line_start":54,"line_end":54,"column_start":6,"column_end":21},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":121965,"byte_end":121980,"line_start":62,"line_end":62,"column_start":21,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2549},"to":{"krate":27,"index":349}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":122027,"byte_end":122042,"line_start":66,"line_end":66,"column_start":22,"column_end":37},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2549},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":122496,"byte_end":122511,"line_start":81,"line_end":81,"column_start":6,"column_end":21},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":122815,"byte_end":122830,"line_start":88,"line_end":88,"column_start":50,"column_end":65},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2549},"to":{"krate":26,"index":134}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":123529,"byte_end":123544,"line_start":116,"line_end":116,"column_start":21,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2549},"to":{"krate":0,"index":1161}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":123863,"byte_end":123878,"line_start":132,"line_end":132,"column_start":41,"column_end":56},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2549},"to":{"krate":26,"index":145}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":123938,"byte_end":123953,"line_start":136,"line_end":136,"column_start":34,"column_end":49},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2549},"to":{"krate":0,"index":885}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124253,"byte_end":124266,"line_start":148,"line_end":148,"column_start":25,"column_end":38},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2620},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":124635,"byte_end":124641,"line_start":165,"line_end":165,"column_start":6,"column_end":12},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125164,"byte_end":125180,"line_start":182,"line_end":182,"column_start":32,"column_end":48},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2672},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125364,"byte_end":125380,"line_start":193,"line_end":193,"column_start":39,"column_end":55},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2672},"to":{"krate":22,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125562,"byte_end":125578,"line_start":199,"line_end":199,"column_start":23,"column_end":39},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2672},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":125660,"byte_end":125676,"line_start":205,"line_end":205,"column_start":20,"column_end":36},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2672},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":126105,"byte_end":126110,"line_start":223,"line_end":223,"column_start":6,"column_end":11},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2714},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":126700,"byte_end":126705,"line_start":246,"line_end":246,"column_start":34,"column_end":39},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2714},"to":{"krate":22,"index":1274}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127373,"byte_end":127379,"line_start":266,"line_end":266,"column_start":19,"column_end":25},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127656,"byte_end":127662,"line_start":276,"line_end":276,"column_start":33,"column_end":39},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2759},"to":{"krate":22,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":127884,"byte_end":127890,"line_start":282,"line_end":282,"column_start":29,"column_end":35},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2759},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":128111,"byte_end":128117,"line_start":288,"line_end":288,"column_start":72,"column_end":78},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2759},"to":{"krate":0,"index":1096}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":128312,"byte_end":128318,"line_start":293,"line_end":293,"column_start":62,"column_end":68},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2759},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/testing.rs","byte_start":128630,"byte_end":128636,"line_start":306,"line_end":306,"column_start":41,"column_end":47},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2759},"to":{"krate":0,"index":1146}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132330,"byte_end":132336,"line_start":66,"line_end":66,"column_start":44,"column_end":50},"kind":{"Impl":{"id":171}},"from":{"krate":27,"index":2469},"to":{"krate":0,"index":885}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132449,"byte_end":132455,"line_start":71,"line_end":71,"column_start":44,"column_end":50},"kind":{"Impl":{"id":172}},"from":{"krate":27,"index":2604},"to":{"krate":0,"index":885}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132566,"byte_end":132572,"line_start":76,"line_end":76,"column_start":42,"column_end":48},"kind":{"Impl":{"id":173}},"from":{"krate":27,"index":2705},"to":{"krate":0,"index":885}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":132982,"byte_end":132991,"line_start":91,"line_end":91,"column_start":35,"column_end":44},"kind":{"Impl":{"id":174}},"from":{"krate":27,"index":2525},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":133223,"byte_end":133232,"line_start":99,"line_end":99,"column_start":35,"column_end":44},"kind":{"Impl":{"id":175}},"from":{"krate":27,"index":2660},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":133462,"byte_end":133471,"line_start":107,"line_end":107,"column_start":33,"column_end":42},"kind":{"Impl":{"id":176}},"from":{"krate":27,"index":2758},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":134354,"byte_end":134355,"line_start":132,"line_end":132,"column_start":17,"column_end":18},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":919},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":136043,"byte_end":136067,"line_start":185,"line_end":185,"column_start":28,"column_end":52},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3471},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":137122,"byte_end":137136,"line_start":218,"line_end":218,"column_start":61,"column_end":75},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2855},"to":{"krate":0,"index":936}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":137283,"byte_end":137297,"line_start":225,"line_end":225,"column_start":20,"column_end":34},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2855},"to":{"krate":0,"index":932}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":137619,"byte_end":137634,"line_start":233,"line_end":233,"column_start":48,"column_end":63},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":952},"to":{"krate":0,"index":936}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":138934,"byte_end":138942,"line_start":281,"line_end":281,"column_start":27,"column_end":35},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":980},"to":{"krate":0,"index":972}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":139132,"byte_end":139143,"line_start":287,"line_end":287,"column_start":39,"column_end":50},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":985},"to":{"krate":0,"index":972}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":140179,"byte_end":140180,"line_start":312,"line_end":312,"column_start":38,"column_end":39},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":997},"to":{"krate":0,"index":991}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141750,"byte_end":141751,"line_start":365,"line_end":365,"column_start":45,"column_end":46},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1009},"to":{"krate":0,"index":1005}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141914,"byte_end":141919,"line_start":372,"line_end":372,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1012}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141922,"byte_end":141927,"line_start":372,"line_end":372,"column_start":10,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":1005},"to":{"krate":0,"index":1012}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141944,"byte_end":141949,"line_start":373,"line_end":373,"column_start":15,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":2197},"to":{"krate":0,"index":1012}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":141987,"byte_end":141993,"line_start":374,"line_end":374,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2202},"to":{"krate":0,"index":1012}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142031,"byte_end":142037,"line_start":375,"line_end":375,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2192},"to":{"krate":0,"index":1012}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142235,"byte_end":142236,"line_start":382,"line_end":382,"column_start":20,"column_end":21},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1014},"to":{"krate":0,"index":1012}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142402,"byte_end":142427,"line_start":387,"line_end":387,"column_start":27,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":3015},"to":{"krate":0,"index":1015}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142430,"byte_end":142435,"line_start":387,"line_end":387,"column_start":55,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":6831},"to":{"krate":0,"index":1015}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142438,"byte_end":142443,"line_start":387,"line_end":387,"column_start":63,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":1015}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142446,"byte_end":142448,"line_start":387,"line_end":387,"column_start":71,"column_end":73},"kind":"SuperTrait","from":{"krate":2,"index":1795},"to":{"krate":0,"index":1015}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142451,"byte_end":142460,"line_start":387,"line_end":387,"column_start":76,"column_end":85},"kind":"SuperTrait","from":{"krate":2,"index":1790},"to":{"krate":0,"index":1015}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":142463,"byte_end":142469,"line_start":387,"line_end":387,"column_start":88,"column_end":94},"kind":"SuperTrait","from":{"krate":150,"index":11},"to":{"krate":0,"index":1015}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":143362,"byte_end":143373,"line_start":414,"line_end":414,"column_start":17,"column_end":28},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2937},"to":{"krate":150,"index":11}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":143580,"byte_end":143591,"line_start":424,"line_end":424,"column_start":15,"column_end":26},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2937},"to":{"krate":0,"index":1015}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":144026,"byte_end":144035,"line_start":441,"line_end":441,"column_start":17,"column_end":26},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2970},"to":{"krate":150,"index":11}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":144242,"byte_end":144251,"line_start":451,"line_end":451,"column_start":15,"column_end":24},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2970},"to":{"krate":0,"index":1015}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":144720,"byte_end":144724,"line_start":469,"line_end":469,"column_start":30,"column_end":34},"kind":{"Impl":{"id":224}},"from":{"krate":79,"index":1897},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":145253,"byte_end":145263,"line_start":492,"line_end":492,"column_start":64,"column_end":74},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2177},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":145772,"byte_end":145779,"line_start":512,"line_end":512,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":6836},"to":{"krate":0,"index":3003}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":145864,"byte_end":145871,"line_start":515,"line_end":515,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":8805},"to":{"krate":0,"index":3006}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":145964,"byte_end":145968,"line_start":518,"line_end":518,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":7019},"to":{"krate":0,"index":3009}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146057,"byte_end":146066,"line_start":521,"line_end":521,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":22,"index":1762},"to":{"krate":0,"index":3012}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146194,"byte_end":146210,"line_start":524,"line_end":524,"column_start":35,"column_end":51},"kind":"SuperTrait","from":{"krate":22,"index":1280},"to":{"krate":0,"index":3015}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146212,"byte_end":146221,"line_start":524,"line_end":524,"column_start":53,"column_end":62},"kind":"SuperTrait","from":{"krate":22,"index":1762},"to":{"krate":0,"index":3015}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146309,"byte_end":146321,"line_start":527,"line_end":527,"column_start":44,"column_end":56},"kind":"SuperTrait","from":{"krate":152,"index":51},"to":{"krate":0,"index":3018}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146396,"byte_end":146400,"line_start":531,"line_end":531,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146403,"byte_end":146407,"line_start":531,"line_end":531,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146410,"byte_end":146415,"line_start":531,"line_end":531,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146418,"byte_end":146423,"line_start":531,"line_end":531,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":6831},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146426,"byte_end":146428,"line_start":531,"line_end":531,"column_start":49,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":1795},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146431,"byte_end":146440,"line_start":531,"line_end":531,"column_start":54,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":1790},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146443,"byte_end":146448,"line_start":531,"line_end":531,"column_start":66,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":146545,"byte_end":146546,"line_start":532,"line_end":532,"column_start":84,"column_end":85},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":1050},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147055,"byte_end":147060,"line_start":546,"line_end":546,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147063,"byte_end":147067,"line_start":546,"line_end":546,"column_start":10,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147070,"byte_end":147074,"line_start":546,"line_end":546,"column_start":17,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147077,"byte_end":147082,"line_start":546,"line_end":546,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":18,"index":135},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147085,"byte_end":147087,"line_start":546,"line_end":546,"column_start":32,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1795},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147090,"byte_end":147104,"line_start":546,"line_end":546,"column_start":37,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":3012},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147107,"byte_end":147112,"line_start":546,"line_end":546,"column_start":54,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":6831},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":147116,"byte_end":147133,"line_start":547,"line_end":547,"column_start":2,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":3018},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149015,"byte_end":149020,"line_start":603,"line_end":603,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149023,"byte_end":149027,"line_start":603,"line_end":603,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149030,"byte_end":149034,"line_start":603,"line_end":603,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149037,"byte_end":149042,"line_start":603,"line_end":603,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":18,"index":135},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149045,"byte_end":149047,"line_start":603,"line_end":603,"column_start":48,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":1795},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149050,"byte_end":149064,"line_start":603,"line_end":603,"column_start":53,"column_end":67},"kind":"SuperTrait","from":{"krate":0,"index":3012},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149067,"byte_end":149072,"line_start":603,"line_end":603,"column_start":70,"column_end":75},"kind":"SuperTrait","from":{"krate":2,"index":6831},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":149075,"byte_end":149092,"line_start":603,"line_end":603,"column_start":78,"column_end":95},"kind":"SuperTrait","from":{"krate":0,"index":3018},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150337,"byte_end":150342,"line_start":632,"line_end":632,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":150345,"byte_end":150362,"line_start":632,"line_end":632,"column_start":30,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":3018},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152285,"byte_end":152290,"line_start":678,"line_end":678,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1096}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":152796,"byte_end":152801,"line_start":690,"line_end":690,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1100}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":153078,"byte_end":153079,"line_start":699,"line_end":699,"column_start":57,"column_end":58},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":1104},"to":{"krate":0,"index":1096}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155109,"byte_end":155114,"line_start":744,"line_end":744,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":18,"index":135},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155117,"byte_end":155122,"line_start":744,"line_end":744,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":6831},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155125,"byte_end":155129,"line_start":744,"line_end":744,"column_start":44,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155132,"byte_end":155136,"line_start":744,"line_end":744,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155139,"byte_end":155144,"line_start":744,"line_end":744,"column_start":58,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155147,"byte_end":155149,"line_start":744,"line_end":744,"column_start":66,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":1795},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":155152,"byte_end":155161,"line_start":744,"line_end":744,"column_start":71,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":1790},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":162949,"byte_end":162954,"line_start":960,"line_end":960,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1146}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":162957,"byte_end":162961,"line_start":960,"line_end":960,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1146}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":162964,"byte_end":162968,"line_start":960,"line_end":960,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1146}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":165502,"byte_end":165507,"line_start":1030,"line_end":1030,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":1161}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":166324,"byte_end":166340,"line_start":1052,"line_end":1052,"column_start":13,"column_end":29},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":1168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":166507,"byte_end":166523,"line_start":1059,"line_end":1059,"column_start":44,"column_end":60},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":1168},"to":{"krate":18,"index":59}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":167358,"byte_end":167375,"line_start":1095,"line_end":1095,"column_start":10,"column_end":27},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":167519,"byte_end":167536,"line_start":1102,"line_end":1102,"column_start":27,"column_end":44},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1182},"to":{"krate":18,"index":59}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":168063,"byte_end":168068,"line_start":1120,"line_end":1120,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1193}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/traits.rs","byte_start":169296,"byte_end":169298,"line_start":1146,"line_end":1146,"column_start":93,"column_end":95},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":1204},"to":{"krate":0,"index":1193}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":181635,"byte_end":181653,"line_start":81,"line_end":81,"column_start":6,"column_end":24},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":184308,"byte_end":184332,"line_start":154,"line_end":154,"column_start":6,"column_end":30},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":185126,"byte_end":185150,"line_start":182,"line_end":182,"column_start":35,"column_end":59},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3471},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":185278,"byte_end":185302,"line_start":188,"line_end":188,"column_start":35,"column_end":59},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3471},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":185447,"byte_end":185471,"line_start":195,"line_end":195,"column_start":28,"column_end":52},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3471},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":185604,"byte_end":185628,"line_start":202,"line_end":202,"column_start":28,"column_end":52},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3471},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":185987,"byte_end":186005,"line_start":212,"line_end":212,"column_start":36,"column_end":54},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3381},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":186108,"byte_end":186126,"line_start":218,"line_end":218,"column_start":36,"column_end":54},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3433},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":188833,"byte_end":188849,"line_start":286,"line_end":286,"column_start":18,"column_end":34},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3540},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":189039,"byte_end":189055,"line_start":298,"line_end":298,"column_start":6,"column_end":22},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":190442,"byte_end":190465,"line_start":335,"line_end":335,"column_start":6,"column_end":29},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":193248,"byte_end":193267,"line_start":409,"line_end":409,"column_start":40,"column_end":59},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/transaction_validity.rs","byte_start":193389,"byte_end":193405,"line_start":415,"line_end":415,"column_start":40,"column_end":56},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3540},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/random_number_generator.rs","byte_start":196592,"byte_end":196613,"line_start":52,"line_end":52,"column_start":21,"column_end":42},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":199699,"byte_end":199712,"line_start":51,"line_end":51,"column_start":29,"column_end":42},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3595},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":199836,"byte_end":199842,"line_start":58,"line_end":58,"column_start":30,"column_end":36},"kind":{"Impl":{"id":282}},"from":{"krate":5,"index":5687},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":200023,"byte_end":200036,"line_start":67,"line_end":67,"column_start":18,"column_end":31},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3595},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":200125,"byte_end":200138,"line_start":73,"line_end":73,"column_start":20,"column_end":33},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3595},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":200240,"byte_end":200253,"line_start":79,"line_end":79,"column_start":22,"column_end":35},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3595},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":200403,"byte_end":200416,"line_start":88,"line_end":88,"column_start":17,"column_end":30},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3595},"to":{"krate":18,"index":109}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":200568,"byte_end":200581,"line_start":97,"line_end":97,"column_start":17,"column_end":30},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3595},"to":{"krate":18,"index":127}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":200757,"byte_end":200770,"line_start":104,"line_end":104,"column_start":28,"column_end":41},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3595},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":201007,"byte_end":201020,"line_start":114,"line_end":114,"column_start":27,"column_end":40},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3595},"to":{"krate":22,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/runtime_string.rs","byte_start":201300,"byte_end":201313,"line_start":124,"line_end":124,"column_start":39,"column_end":52},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3595},"to":{"krate":22,"index":1274}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":202991,"byte_end":203003,"line_start":40,"line_end":40,"column_start":53,"column_end":65},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3609},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":203611,"byte_end":203623,"line_start":56,"line_end":56,"column_start":51,"column_end":63},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3609},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/multiaddress.rs","byte_start":203763,"byte_end":203775,"line_start":62,"line_end":62,"column_start":52,"column_end":64},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3609},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":3293,"byte_end":3301,"line_start":106,"line_end":106,"column_start":17,"column_end":25},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3679},"to":{"krate":27,"index":1837}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":4072,"byte_end":4077,"line_start":132,"line_end":132,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1411}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":4344,"byte_end":4351,"line_start":141,"line_end":141,"column_start":41,"column_end":48},"kind":{"Impl":{"id":302}},"from":{"krate":73,"index":325},"to":{"krate":0,"index":1408}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5690,"byte_end":5704,"line_start":187,"line_end":187,"column_start":35,"column_end":49},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3711},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":5826,"byte_end":5835,"line_start":193,"line_end":193,"column_start":43,"column_end":52},"kind":{"Impl":{"id":310}},"from":{"krate":27,"index":2525},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6026,"byte_end":6040,"line_start":200,"line_end":200,"column_start":35,"column_end":49},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3711},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6162,"byte_end":6171,"line_start":206,"line_end":206,"column_start":43,"column_end":52},"kind":{"Impl":{"id":312}},"from":{"krate":27,"index":2660},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6360,"byte_end":6374,"line_start":213,"line_end":213,"column_start":33,"column_end":47},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":3711},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6490,"byte_end":6499,"line_start":219,"line_end":219,"column_start":41,"column_end":50},"kind":{"Impl":{"id":314}},"from":{"krate":27,"index":2758},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":6671,"byte_end":6685,"line_start":226,"line_end":226,"column_start":18,"column_end":32},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":3711},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7211,"byte_end":7222,"line_start":244,"line_end":244,"column_start":18,"column_end":29},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3791},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7494,"byte_end":7505,"line_start":252,"line_end":252,"column_start":50,"column_end":61},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3791},"to":{"krate":27,"index":148}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7621,"byte_end":7632,"line_start":258,"line_end":258,"column_start":22,"column_end":33},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3791},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":7871,"byte_end":7882,"line_start":268,"line_end":268,"column_start":34,"column_end":45},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3791},"to":{"krate":0,"index":885}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":8220,"byte_end":8231,"line_start":279,"line_end":279,"column_start":32,"column_end":43},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3791},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":8344,"byte_end":8350,"line_start":285,"line_end":285,"column_start":40,"column_end":46},"kind":{"Impl":{"id":327}},"from":{"krate":27,"index":2469},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":8532,"byte_end":8543,"line_start":292,"line_end":292,"column_start":32,"column_end":43},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3791},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":8656,"byte_end":8662,"line_start":298,"line_end":298,"column_start":40,"column_end":46},"kind":{"Impl":{"id":329}},"from":{"krate":27,"index":2604},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":8842,"byte_end":8853,"line_start":305,"line_end":305,"column_start":30,"column_end":41},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":3791},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":8960,"byte_end":8966,"line_start":311,"line_end":311,"column_start":38,"column_end":44},"kind":{"Impl":{"id":331}},"from":{"krate":27,"index":2705},"to":{"krate":2,"index":1996}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":9166,"byte_end":9177,"line_start":319,"line_end":319,"column_start":28,"column_end":39},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":3791},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":9493,"byte_end":9507,"line_start":329,"line_end":329,"column_start":17,"column_end":31},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":3711},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":10433,"byte_end":10445,"line_start":353,"line_end":353,"column_start":17,"column_end":29},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":3879},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":10908,"byte_end":10920,"line_start":366,"line_end":366,"column_start":35,"column_end":47},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":3879},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11030,"byte_end":11042,"line_start":372,"line_end":372,"column_start":35,"column_end":47},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":3879},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":11147,"byte_end":11162,"line_start":378,"line_end":378,"column_start":30,"column_end":45},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":1513},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13220,"byte_end":13233,"line_start":432,"line_end":432,"column_start":6,"column_end":19},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":3935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13511,"byte_end":13536,"line_start":443,"line_end":443,"column_start":24,"column_end":49},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4064},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13803,"byte_end":13816,"line_start":455,"line_end":455,"column_start":43,"column_end":56},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":3935},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":13936,"byte_end":13949,"line_start":461,"line_end":461,"column_start":41,"column_end":54},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":3935},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":14069,"byte_end":14082,"line_start":467,"line_end":467,"column_start":46,"column_end":59},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":3935},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":14336,"byte_end":14349,"line_start":476,"line_end":476,"column_start":29,"column_end":42},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":3935},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":15132,"byte_end":15145,"line_start":503,"line_end":503,"column_start":28,"column_end":41},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":3935},"to":{"krate":0,"index":1214}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":15634,"byte_end":15659,"line_start":523,"line_end":523,"column_start":31,"column_end":56},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4064},"to":{"krate":0,"index":1214}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":18545,"byte_end":18555,"line_start":584,"line_end":584,"column_start":50,"column_end":60},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":1520},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":19628,"byte_end":19643,"line_start":632,"line_end":632,"column_start":6,"column_end":21},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":19881,"byte_end":19896,"line_start":640,"line_end":640,"column_start":40,"column_end":55},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4101},"to":{"krate":152,"index":51}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":20029,"byte_end":20044,"line_start":646,"line_end":646,"column_start":29,"column_end":44},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4101},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":20391,"byte_end":20406,"line_start":660,"line_end":660,"column_start":29,"column_end":44},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4101},"to":{"krate":22,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":20656,"byte_end":20671,"line_start":667,"line_end":667,"column_start":39,"column_end":54},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4101},"to":{"krate":22,"index":1274}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":675,"line_end":675,"column_start":28,"column_end":43},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":4101},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21398,"byte_end":21415,"line_start":693,"line_end":693,"column_start":6,"column_end":23},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":1549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":21737,"byte_end":21754,"line_start":708,"line_end":708,"column_start":15,"column_end":32},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":1549},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-3.0.0/src/lib.rs","byte_start":22305,"byte_end":22323,"line_start":728,"line_end":728,"column_start":9,"column_end":27},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":1557},"to":{"krate":4294967295,"index":4294967295}}]}