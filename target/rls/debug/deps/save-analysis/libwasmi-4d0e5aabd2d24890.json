{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2","program":"/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wasmi","/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=4d0e5aabd2d24890","-C","extra-filename=-4d0e5aabd2d24890","--out-dir","/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps","-L","dependency=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps","--extern","libc=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/liblibc-a1c04b6d9b61de35.rmeta","--extern","memory_units=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libmemory_units-4eefed810501b4c8.rmeta","--extern","num_rational=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libnum_rational-055fa85589ecb297.rmeta","--extern","num_traits=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libnum_traits-7944ee15958dbfe1.rmeta","--extern","parity_wasm=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libparity_wasm-cceb39b51c1dcfb7.rmeta","--extern","wasmi_validation=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libwasmi_validation-aeb5d722e09924cb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libwasmi-4d0e5aabd2d24890.rmeta"},"prelude":{"crate_id":{"name":"wasmi","disambiguator":[6918656205759776739,8549698197006326748]},"crate_root":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src","external_crates":[{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":18,"id":{"name":"memory_units","disambiguator":[4446909059691065796,8711733259455937782]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":19,"id":{"name":"parity_wasm","disambiguator":[2746304515579433884,15008885245026691101]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":20,"id":{"name":"wasmi_validation","disambiguator":[12503892293425695562,631775191906383592]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":21,"id":{"name":"num_rational","disambiguator":[8002101714546462564,7774992686627339530]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":22,"id":{"name":"num_bigint","disambiguator":[8324002608551350377,6864858279968498277]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":23,"id":{"name":"num_integer","disambiguator":[5126256796491658918,13702474337812182890]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","num":24,"id":{"name":"num_traits","disambiguator":[12449281939908862398,945796103035123006]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mmap_bytebuf.rs","num":25,"id":{"name":"libc","disambiguator":[7953600248772063458,1989307123664392873]}}],"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":0,"byte_end":17476,"line_start":1,"line_end":564,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11866,"byte_end":11878,"line_start":403,"line_end":403,"column_start":22,"column_end":34},"alias_span":null,"name":"FuncInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11880,"byte_end":11894,"line_start":403,"line_end":403,"column_start":36,"column_end":50},"alias_span":null,"name":"FuncInvocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1286},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11896,"byte_end":11903,"line_start":403,"line_end":403,"column_start":52,"column_end":59},"alias_span":null,"name":"FuncRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1303},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11905,"byte_end":11919,"line_start":403,"line_end":403,"column_start":61,"column_end":75},"alias_span":null,"name":"ResumableError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1327},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11945,"byte_end":11959,"line_start":404,"line_end":404,"column_start":24,"column_end":38},"alias_span":null,"name":"GlobalInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1320},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11961,"byte_end":11970,"line_start":404,"line_end":404,"column_start":40,"column_end":49},"alias_span":null,"name":"GlobalRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":163},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11994,"byte_end":12003,"line_start":405,"line_end":405,"column_start":22,"column_end":31},"alias_span":null,"name":"Externals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12005,"byte_end":12014,"line_start":405,"line_end":405,"column_start":33,"column_end":42},"alias_span":null,"name":"HostError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12016,"byte_end":12028,"line_start":405,"line_end":405,"column_start":44,"column_end":56},"alias_span":null,"name":"NopExternals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12016,"byte_end":12028,"line_start":405,"line_end":405,"column_start":44,"column_end":56},"alias_span":null,"name":"NopExternals","value":"","parent":{"krate":0,"index":1179}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12030,"byte_end":12041,"line_start":405,"line_end":405,"column_start":58,"column_end":69},"alias_span":null,"name":"RuntimeArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12068,"byte_end":12082,"line_start":406,"line_end":406,"column_start":25,"column_end":39},"alias_span":null,"name":"ImportResolver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":190},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12084,"byte_end":12098,"line_start":406,"line_end":406,"column_start":41,"column_end":55},"alias_span":null,"name":"ImportsBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12100,"byte_end":12120,"line_start":406,"line_end":406,"column_start":57,"column_end":77},"alias_span":null,"name":"ModuleImportResolver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":309},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12146,"byte_end":12160,"line_start":407,"line_end":407,"column_start":24,"column_end":38},"alias_span":null,"name":"MemoryInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2206},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12162,"byte_end":12171,"line_start":407,"line_end":407,"column_start":40,"column_end":49},"alias_span":null,"name":"MemoryRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":305},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12173,"byte_end":12196,"line_start":407,"line_end":407,"column_start":51,"column_end":74},"alias_span":null,"name":"LINEAR_MEMORY_PAGE_SIZE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":412},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12222,"byte_end":12231,"line_start":408,"line_end":408,"column_start":24,"column_end":33},"alias_span":null,"name":"ExternVal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2220},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12233,"byte_end":12247,"line_start":408,"line_end":408,"column_start":35,"column_end":49},"alias_span":null,"name":"ModuleInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2213},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12249,"byte_end":12258,"line_start":408,"line_end":408,"column_start":51,"column_end":60},"alias_span":null,"name":"ModuleRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2214},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12249,"byte_end":12258,"line_start":408,"line_end":408,"column_start":51,"column_end":60},"alias_span":null,"name":"ModuleRef","value":"","parent":{"krate":0,"index":1192}},{"kind":"Use","ref_id":{"krate":0,"index":482},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12260,"byte_end":12279,"line_start":408,"line_end":408,"column_start":62,"column_end":81},"alias_span":null,"name":"NotStartedModuleRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":899},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12305,"byte_end":12318,"line_start":409,"line_end":409,"column_start":24,"column_end":37},"alias_span":null,"name":"StackRecycler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":654},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12320,"byte_end":12344,"line_start":409,"line_end":409,"column_start":39,"column_end":63},"alias_span":null,"name":"DEFAULT_CALL_STACK_LIMIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12346,"byte_end":12371,"line_start":409,"line_end":409,"column_start":65,"column_end":90},"alias_span":null,"name":"DEFAULT_VALUE_STACK_LIMIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":931},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12396,"byte_end":12409,"line_start":410,"line_end":410,"column_start":23,"column_end":36},"alias_span":null,"name":"TableInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2540},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12411,"byte_end":12419,"line_start":410,"line_end":410,"column_start":38,"column_end":46},"alias_span":null,"name":"TableRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":967},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12444,"byte_end":12460,"line_start":411,"line_end":411,"column_start":23,"column_end":39},"alias_span":null,"name":"GlobalDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":981},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12462,"byte_end":12478,"line_start":411,"line_end":411,"column_start":41,"column_end":57},"alias_span":null,"name":"MemoryDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2547},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12480,"byte_end":12489,"line_start":411,"line_end":411,"column_start":59,"column_end":68},"alias_span":null,"name":"Signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":974},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12491,"byte_end":12506,"line_start":411,"line_end":411,"column_start":70,"column_end":85},"alias_span":null,"name":"TableDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2561},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12508,"byte_end":12517,"line_start":411,"line_end":411,"column_start":87,"column_end":96},"alias_span":null,"name":"ValueType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2581},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12542,"byte_end":12547,"line_start":412,"line_end":412,"column_start":23,"column_end":28},"alias_span":null,"name":"ValueError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1000},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12563,"byte_end":12579,"line_start":412,"line_end":412,"column_start":44,"column_end":60},"alias_span":null,"name":"FromRuntimeValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1015},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12581,"byte_end":12600,"line_start":412,"line_end":412,"column_start":62,"column_end":81},"alias_span":null,"name":"LittleEndianConvert","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2586},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12602,"byte_end":12614,"line_start":412,"line_end":412,"column_start":83,"column_end":95},"alias_span":null,"name":"RuntimeValue","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12723,"byte_end":12724,"line_start":416,"line_end":416,"column_start":41,"column_end":42},"alias_span":null,"name":"*","value":"Pages","parent":{"krate":0,"index":1212}},{"kind":"Use","ref_id":{"krate":18,"index":11},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12759,"byte_end":12766,"line_start":417,"line_end":417,"column_start":34,"column_end":41},"alias_span":null,"name":"size_of","value":"","parent":{"krate":0,"index":1212}},{"kind":"Use","ref_id":{"krate":18,"index":17},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12768,"byte_end":12776,"line_start":417,"line_end":417,"column_start":43,"column_end":51},"alias_span":null,"name":"ByteSize","value":"","parent":{"krate":0,"index":1212}},{"kind":"Use","ref_id":{"krate":18,"index":27},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12778,"byte_end":12783,"line_start":417,"line_end":417,"column_start":53,"column_end":58},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":1212}},{"kind":"Use","ref_id":{"krate":18,"index":28},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12778,"byte_end":12783,"line_start":417,"line_end":417,"column_start":53,"column_end":58},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":18,"index":13},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12785,"byte_end":12794,"line_start":417,"line_end":417,"column_start":60,"column_end":69},"alias_span":null,"name":"RoundUpTo","value":"","parent":{"krate":0,"index":1212}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":0,"byte_end":17476,"line_start":1,"line_end":564,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":1234},{"krate":0,"index":1254},{"krate":0,"index":25},{"krate":0,"index":1256},{"krate":0,"index":1284},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":116},{"krate":0,"index":133},{"krate":0,"index":169},{"krate":0,"index":232},{"krate":0,"index":257},{"krate":0,"index":362},{"krate":0,"index":496},{"krate":0,"index":518},{"krate":0,"index":613},{"krate":0,"index":917},{"krate":0,"index":950},{"krate":0,"index":988},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":3326},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":3346},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1219},{"krate":0,"index":1222}],"decl_id":null,"docs":" # wasmi","sig":null,"attributes":[{"value":"/ # wasmi","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":0,"byte_end":11,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12,"byte_end":15,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library allows WebAssembly modules to be loaded in binary format and their functions invoked.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16,"byte_end":118,"line_start":3,"line_end":3,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":119,"byte_end":122,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Introduction","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":123,"byte_end":141,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":142,"byte_end":145,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ WebAssembly (wasm) is a safe, portable and compact format that is designed for efficient execution.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":146,"byte_end":249,"line_start":7,"line_end":7,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":250,"byte_end":253,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Wasm code is distributed in the form of modules that contains definitions of:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":254,"byte_end":335,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":336,"byte_end":339,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - functions,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":340,"byte_end":356,"line_start":11,"line_end":11,"column_start":1,"column_end":17}},{"value":"/ - global variables,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":357,"byte_end":380,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/ - linear memory instances and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":381,"byte_end":414,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ - tables.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":415,"byte_end":428,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":429,"byte_end":432,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Each of these definitions can be imported and exported.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":433,"byte_end":492,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":493,"byte_end":496,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In addition to these definitions, modules can define initialization data for their memory or tables. This initialization data can take the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":497,"byte_end":639,"line_start":18,"line_end":18,"column_start":1,"column_end":143}},{"value":"/ form of segments, copied to given offsets. They can also define a `start` function that is automatically executed when the module is loaded.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":640,"byte_end":784,"line_start":19,"line_end":19,"column_start":1,"column_end":145}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":785,"byte_end":788,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Loading and Validation","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":789,"byte_end":818,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":819,"byte_end":822,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Before execution, a module must be validated. This process checks that the module is well-formed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":823,"byte_end":923,"line_start":23,"line_end":23,"column_start":1,"column_end":101}},{"value":"/ and makes only allowed operations.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":924,"byte_end":962,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":963,"byte_end":966,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A valid module can't access memory outside its sandbox, can't cause stack underflows","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":967,"byte_end":1055,"line_start":26,"line_end":26,"column_start":1,"column_end":89}},{"value":"/ and can only call functions with correct signatures.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1056,"byte_end":1112,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1113,"byte_end":1116,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Instantiation","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1117,"byte_end":1137,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1138,"byte_end":1141,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ In order to execute code from a wasm module, it must be instantiated.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1142,"byte_end":1215,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ Instantiation includes the following steps:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1216,"byte_end":1263,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1264,"byte_end":1267,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ 1. Creating an empty module instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1268,"byte_end":1309,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ 2. Resolving the definition instances for each declared import in the module.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1310,"byte_end":1391,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ 3. Instantiating definitions declared in the module (e.g. allocate global variables, allocate linear memory, etc.).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1392,"byte_end":1511,"line_start":36,"line_end":36,"column_start":1,"column_end":120}},{"value":"/ 4. Initializing memory and table contents by copying segments into them.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1512,"byte_end":1588,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ 5. Executing the `start` function, if any.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1589,"byte_end":1635,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1636,"byte_end":1639,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ After these steps, the module instance is ready to execute functions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1640,"byte_end":1713,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1714,"byte_end":1717,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Execution","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1718,"byte_end":1734,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1735,"byte_end":1738,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ It only is allowed to call functions which are exported by the module.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1739,"byte_end":1813,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ Functions can either return a result or trap (e.g. there can't be linking error in the middle of the function execution).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1814,"byte_end":1939,"line_start":45,"line_end":45,"column_start":1,"column_end":126}},{"value":"/ This property is ensured by the validation process.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1940,"byte_end":1995,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":1996,"byte_end":1999,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2000,"byte_end":2014,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2015,"byte_end":2018,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2019,"byte_end":2030,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ extern crate wasmi;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2031,"byte_end":2054,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/ extern crate wabt;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2055,"byte_end":2077,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2078,"byte_end":2081,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ use wasmi::{ModuleInstance, ImportsBuilder, NopExternals, RuntimeValue};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2082,"byte_end":2158,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2159,"byte_end":2162,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2163,"byte_end":2178,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/     // Parse WAT (WebAssembly Text format) into wasm bytecode.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2179,"byte_end":2245,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/     let wasm_binary: Vec<u8> =","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2246,"byte_end":2280,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/         wabt::wat2wasm(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2281,"byte_end":2308,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"/             r#\"","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2309,"byte_end":2328,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/             (module","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2329,"byte_end":2352,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/                 (func (export \"test\") (result i32)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2353,"byte_end":2407,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/                     i32.const 1337","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2408,"byte_end":2446,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/                 )","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2447,"byte_end":2468,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/             )","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2469,"byte_end":2486,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/             \"#,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2487,"byte_end":2506,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/         )","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2507,"byte_end":2520,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/         .expect(\"failed to parse wat\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2521,"byte_end":2564,"line_start":68,"line_end":68,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2565,"byte_end":2568,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     // Load wasm binary and prepare it for instantiation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2569,"byte_end":2630,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/     let module = wasmi::Module::from_buffer(&wasm_binary)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2631,"byte_end":2692,"line_start":71,"line_end":71,"column_start":1,"column_end":62}},{"value":"/         .expect(\"failed to load wasm\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2693,"byte_end":2736,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2737,"byte_end":2740,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Instantiate a module with empty imports and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2741,"byte_end":2795,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/     // assert that there is no `start` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2796,"byte_end":2848,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/     let instance =","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2849,"byte_end":2871,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/         ModuleInstance::new(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2872,"byte_end":2904,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/             &module,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2905,"byte_end":2929,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/             &ImportsBuilder::default()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2930,"byte_end":2972,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/         )","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2973,"byte_end":2986,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/         .expect(\"failed to instantiate wasm module\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":2987,"byte_end":3043,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/         .assert_no_start();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3044,"byte_end":3075,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3076,"byte_end":3079,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     // Finally, invoke the exported function \"test\" with no parameters","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3080,"byte_end":3154,"line_start":84,"line_end":84,"column_start":1,"column_end":75}},{"value":"/     // and empty external function executor.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3155,"byte_end":3203,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/     assert_eq!(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3204,"byte_end":3223,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/         instance.invoke_export(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3224,"byte_end":3259,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/             \"test\",","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3260,"byte_end":3283,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"/             &[],","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3284,"byte_end":3304,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"/             &mut NopExternals,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3305,"byte_end":3339,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/         ).expect(\"failed to execute export\"),","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3340,"byte_end":3389,"line_start":91,"line_end":91,"column_start":1,"column_end":50}},{"value":"/         Some(RuntimeValue::I32(1337)),","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3390,"byte_end":3432,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/     );","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3433,"byte_end":3443,"line_start":93,"line_end":93,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3444,"byte_end":3449,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3450,"byte_end":3457,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":3459,"byte_end":3481,"line_start":97,"line_end":97,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4416,"byte_end":4420,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"Trap","qualname":"::Trap","value":"Trap {  }","parent":null,"children":[{"krate":0,"index":1231}],"decl_id":null,"docs":" Error type which can be thrown by wasm code or by host environment.","sig":null,"attributes":[{"value":"/ Error type which can be thrown by wasm code or by host environment.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4130,"byte_end":4201,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4202,"byte_end":4205,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Under some conditions, wasm execution may produce a `Trap`, which immediately aborts execution.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4206,"byte_end":4305,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ Traps can't be handled by WebAssembly code, but are reported to the embedder.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4306,"byte_end":4387,"line_start":138,"line_end":138,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4494,"byte_end":4497,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"new","qualname":"<Trap>::new","value":"pub fn new(TrapKind) -> Trap","parent":null,"children":[],"decl_id":null,"docs":" Create new trap.\n","sig":null,"attributes":[{"value":"/ Create new trap.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4462,"byte_end":4482,"line_start":145,"line_end":145,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4599,"byte_end":4603,"line_start":151,"line_end":151,"column_start":12,"column_end":16},"name":"kind","qualname":"<Trap>::kind","value":"pub fn kind(&Self) -> &TrapKind","parent":null,"children":[],"decl_id":null,"docs":" Returns kind of this trap.\n","sig":null,"attributes":[{"value":"/ Returns kind of this trap.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4557,"byte_end":4587,"line_start":150,"line_end":150,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1235},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5291,"byte_end":5302,"line_start":180,"line_end":180,"column_start":5,"column_end":16},"name":"Unreachable","qualname":"::TrapKind::Unreachable","value":"TrapKind::Unreachable","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Wasm code executed `unreachable` opcode.","sig":null,"attributes":[{"value":"/ Wasm code executed `unreachable` opcode.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5097,"byte_end":5141,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5146,"byte_end":5149,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ `unreachable` is a special opcode which always traps upon execution.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5154,"byte_end":5226,"line_start":178,"line_end":178,"column_start":5,"column_end":77}},{"value":"/ This opcode have a similar purpose as `ud2` in x86.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5231,"byte_end":5286,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1237},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5575,"byte_end":5598,"line_start":187,"line_end":187,"column_start":5,"column_end":28},"name":"MemoryAccessOutOfBounds","qualname":"::TrapKind::MemoryAccessOutOfBounds","value":"TrapKind::MemoryAccessOutOfBounds","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Attempt to load or store at the address which\n lies outside of bounds of the memory.","sig":null,"attributes":[{"value":"/ Attempt to load or store at the address which","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5309,"byte_end":5358,"line_start":182,"line_end":182,"column_start":5,"column_end":54}},{"value":"/ lies outside of bounds of the memory.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5363,"byte_end":5404,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5409,"byte_end":5412,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Since addresses are interpreted as unsigned integers, out of bounds access","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5417,"byte_end":5495,"line_start":185,"line_end":185,"column_start":5,"column_end":83}},{"value":"/ can't happen with negative addresses (i.e. they will always wrap).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5500,"byte_end":5570,"line_start":186,"line_end":186,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1239},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5973,"byte_end":5995,"line_start":197,"line_end":197,"column_start":5,"column_end":27},"name":"TableAccessOutOfBounds","qualname":"::TrapKind::TableAccessOutOfBounds","value":"TrapKind::TableAccessOutOfBounds","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Attempt to access table element at index which\n lies outside of bounds.","sig":null,"attributes":[{"value":"/ Attempt to access table element at index which","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5605,"byte_end":5655,"line_start":189,"line_end":189,"column_start":5,"column_end":55}},{"value":"/ lies outside of bounds.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5660,"byte_end":5687,"line_start":190,"line_end":190,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5692,"byte_end":5695,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This typically can happen when `call_indirect` is executed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5700,"byte_end":5762,"line_start":192,"line_end":192,"column_start":5,"column_end":67}},{"value":"/ with index that lies out of bounds.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5767,"byte_end":5806,"line_start":193,"line_end":193,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5811,"byte_end":5814,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Since indexes are interpreted as unsinged integers, out of bounds access","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5819,"byte_end":5895,"line_start":195,"line_end":195,"column_start":5,"column_end":81}},{"value":"/ can't happen with negative indexes (i.e. they will always wrap).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5900,"byte_end":5968,"line_start":196,"line_end":196,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1241},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6156,"byte_end":6173,"line_start":202,"line_end":202,"column_start":5,"column_end":22},"name":"ElemUninitialized","qualname":"::TrapKind::ElemUninitialized","value":"TrapKind::ElemUninitialized","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Attempt to access table element which is uninitialized (i.e. `None`).","sig":null,"attributes":[{"value":"/ Attempt to access table element which is uninitialized (i.e. `None`).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6002,"byte_end":6075,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6080,"byte_end":6083,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This typically can happen when `call_indirect` is executed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6088,"byte_end":6151,"line_start":201,"line_end":201,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1243},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6322,"byte_end":6336,"line_start":208,"line_end":208,"column_start":5,"column_end":19},"name":"DivisionByZero","qualname":"::TrapKind::DivisionByZero","value":"TrapKind::DivisionByZero","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Attempt to divide by zero.","sig":null,"attributes":[{"value":"/ Attempt to divide by zero.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6180,"byte_end":6210,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6215,"byte_end":6218,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This trap typically can happen if `div` or `rem` is executed with","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6223,"byte_end":6292,"line_start":206,"line_end":206,"column_start":5,"column_end":74}},{"value":"/ zero as divider.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6297,"byte_end":6317,"line_start":207,"line_end":207,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1245},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6741,"byte_end":6763,"line_start":217,"line_end":217,"column_start":5,"column_end":27},"name":"InvalidConversionToInt","qualname":"::TrapKind::InvalidConversionToInt","value":"TrapKind::InvalidConversionToInt","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Attempt to make a conversion to an int failed.","sig":null,"attributes":[{"value":"/ Attempt to make a conversion to an int failed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6343,"byte_end":6393,"line_start":210,"line_end":210,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6398,"byte_end":6401,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This can happen when:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6406,"byte_end":6431,"line_start":212,"line_end":212,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6436,"byte_end":6439,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ - trying to do signed division (or get the remainder) -2<sup>N-1</sup> over -1. This is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6444,"byte_end":6535,"line_start":214,"line_end":214,"column_start":5,"column_end":96}},{"value":"/   because the result +2<sup>N-1</sup> isn't representable as a N-bit signed integer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6540,"byte_end":6628,"line_start":215,"line_end":215,"column_start":5,"column_end":93}},{"value":"/ - trying to truncate NaNs, infinity, or value for which the result is out of range into an integer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6633,"byte_end":6736,"line_start":216,"line_end":216,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1247},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6943,"byte_end":6956,"line_start":223,"line_end":223,"column_start":5,"column_end":18},"name":"StackOverflow","qualname":"::TrapKind::StackOverflow","value":"TrapKind::StackOverflow","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Stack overflow.","sig":null,"attributes":[{"value":"/ Stack overflow.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6770,"byte_end":6789,"line_start":219,"line_end":219,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6794,"byte_end":6797,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This is likely caused by some infinite or very deep recursion.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6802,"byte_end":6868,"line_start":221,"line_end":221,"column_start":5,"column_end":71}},{"value":"/ Extensive inlining might also be the cause of stack overflow.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6873,"byte_end":6938,"line_start":222,"line_end":222,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1249},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7515,"byte_end":7534,"line_start":236,"line_end":236,"column_start":5,"column_end":24},"name":"UnexpectedSignature","qualname":"::TrapKind::UnexpectedSignature","value":"TrapKind::UnexpectedSignature","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Attempt to invoke a function with mismatching signature.","sig":null,"attributes":[{"value":"/ Attempt to invoke a function with mismatching signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":6963,"byte_end":7023,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7028,"byte_end":7031,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This can happen if [`FuncInstance`] was invoked","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7036,"byte_end":7087,"line_start":227,"line_end":227,"column_start":5,"column_end":56}},{"value":"/ with mismatching [signature][`Signature`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7092,"byte_end":7138,"line_start":228,"line_end":228,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7143,"byte_end":7146,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ This can always happen with indirect calls. `call_indirect` instruction always","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7151,"byte_end":7233,"line_start":230,"line_end":230,"column_start":5,"column_end":87}},{"value":"/ specifies the expected signature of function. If `call_indirect` is executed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7238,"byte_end":7318,"line_start":231,"line_end":231,"column_start":5,"column_end":85}},{"value":"/ with index that points on function with signature different that is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7323,"byte_end":7394,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"/ expected by this `call_indirect`, this trap is raised.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7399,"byte_end":7457,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7462,"byte_end":7465,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ [`Signature`]: struct.Signature.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7470,"byte_end":7510,"line_start":235,"line_end":235,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1251},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7706,"byte_end":7710,"line_start":243,"line_end":243,"column_start":5,"column_end":9},"name":"Host","qualname":"::TrapKind::Host","value":"TrapKind::Host(Box<host::HostError>)","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Error specified by the host.","sig":null,"attributes":[{"value":"/ Error specified by the host.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7541,"byte_end":7573,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7578,"byte_end":7581,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Typically returned from an implementation of [`Externals`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7586,"byte_end":7649,"line_start":240,"line_end":240,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7654,"byte_end":7657,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`Externals`]: trait.Externals.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7662,"byte_end":7701,"line_start":242,"line_end":242,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":1234},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5082,"byte_end":5090,"line_start":175,"line_end":175,"column_start":10,"column_end":18},"name":"TrapKind","qualname":"::TrapKind","value":"pub enum TrapKind {\n\n    /// Wasm code executed `unreachable` opcode.\n    ///\n    /// `unreachable` is a special opcode which always traps upon execution.\n    /// This opcode have a similar purpose as `ud2` in x86.\n    Unreachable,\n\n    /// Attempt to load or store at the address which\n    /// lies outside of bounds of the memory.\n    ///\n    /// Since addresses are interpreted as unsigned integers, out of bounds access\n    /// can't happen with negative addresses (i.e. they will always wrap).\n    MemoryAccessOutOfBounds,\n\n    /// Attempt to access table element at index which\n    /// lies outside of bounds.\n    ///\n    /// This typically can happen when `call_indirect` is executed\n    /// with index that lies out of bounds.\n    ///\n    /// Since indexes are interpreted as unsinged integers, out of bounds access\n    /// can't happen with negative indexes (i.e. they will always wrap).\n    TableAccessOutOfBounds,\n\n    /// Attempt to access table element which is uninitialized (i.e. `None`).\n    ///\n    /// This typically can happen when `call_indirect` is executed.\n    ElemUninitialized,\n\n    /// Attempt to divide by zero.\n    ///\n    /// This trap typically can happen if `div` or `rem` is executed with\n    /// zero as divider.\n    DivisionByZero,\n\n    /// Attempt to make a conversion to an int failed.\n    ///\n    /// This can happen when:\n    ///\n    /// - trying to do signed division (or get the remainder) -2<sup>N-1</sup> over -1. This is\n    ///   because the result +2<sup>N-1</sup> isn't representable as a N-bit signed integer.\n    /// - trying to truncate NaNs, infinity, or value for which the result is out of range into an integer.\n    InvalidConversionToInt,\n\n    /// Stack overflow.\n    ///\n    /// This is likely caused by some infinite or very deep recursion.\n    /// Extensive inlining might also be the cause of stack overflow.\n    StackOverflow,\n\n    /// Attempt to invoke a function with mismatching signature.\n    ///\n    /// This can happen if [`FuncInstance`] was invoked\n    /// with mismatching [signature][`Signature`].\n    ///\n    /// This can always happen with indirect calls. `call_indirect` instruction always\n    /// specifies the expected signature of function. If `call_indirect` is executed\n    /// with index that points on function with signature different that is\n    /// expected by this `call_indirect`, this trap is raised.\n    ///\n    /// [`Signature`]: struct.Signature.html\n    UnexpectedSignature,\n\n    /// Error specified by the host.\n    ///\n    /// Typically returned from an implementation of [`Externals`].\n    ///\n    /// [`Externals`]: trait.Externals.html\n    Host(Box<host::HostError>),\n}","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1251}],"decl_id":null,"docs":" Error type which can be thrown by wasm code or by host environment.","sig":null,"attributes":[{"value":"/ Error type which can be thrown by wasm code or by host environment.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4915,"byte_end":4986,"line_start":169,"line_end":169,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4987,"byte_end":4990,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ See [`Trap`] for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4991,"byte_end":5020,"line_start":171,"line_end":171,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5021,"byte_end":5024,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ [`Trap`]: struct.Trap.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":5025,"byte_end":5055,"line_start":173,"line_end":173,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7820,"byte_end":7827,"line_start":248,"line_end":248,"column_start":12,"column_end":19},"name":"is_host","qualname":"<TrapKind>::is_host","value":"pub fn is_host(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this trap is specified by the host.\n","sig":null,"attributes":[{"value":"/ Whether this trap is specified by the host.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7761,"byte_end":7808,"line_start":247,"line_end":247,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1257},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8083,"byte_end":8093,"line_start":260,"line_end":260,"column_start":5,"column_end":15},"name":"Validation","qualname":"::Error::Validation","value":"Error::Validation(String)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Module validation error. Might occur only at load time.\n","sig":null,"attributes":[{"value":"/ Module validation error. Might occur only at load time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8019,"byte_end":8078,"line_start":259,"line_end":259,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1260},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8232,"byte_end":8245,"line_start":263,"line_end":263,"column_start":5,"column_end":18},"name":"Instantiation","qualname":"::Error::Instantiation","value":"Error::Instantiation(String)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Error while instantiating a module. Might occur when provided\n with incorrect exports (i.e. linkage failure).\n","sig":null,"attributes":[{"value":"/ Error while instantiating a module. Might occur when provided","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8107,"byte_end":8172,"line_start":261,"line_end":261,"column_start":5,"column_end":70}},{"value":"/ with incorrect exports (i.e. linkage failure).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8177,"byte_end":8227,"line_start":262,"line_end":262,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1263},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8289,"byte_end":8297,"line_start":265,"line_end":265,"column_start":5,"column_end":13},"name":"Function","qualname":"::Error::Function","value":"Error::Function(String)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Function-level error.\n","sig":null,"attributes":[{"value":"/ Function-level error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8259,"byte_end":8284,"line_start":264,"line_end":264,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8338,"byte_end":8343,"line_start":267,"line_end":267,"column_start":5,"column_end":10},"name":"Table","qualname":"::Error::Table","value":"Error::Table(String)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Table-level error.\n","sig":null,"attributes":[{"value":"/ Table-level error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8311,"byte_end":8333,"line_start":266,"line_end":266,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8385,"byte_end":8391,"line_start":269,"line_end":269,"column_start":5,"column_end":11},"name":"Memory","qualname":"::Error::Memory","value":"Error::Memory(String)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Memory-level error.\n","sig":null,"attributes":[{"value":"/ Memory-level error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8357,"byte_end":8380,"line_start":268,"line_end":268,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1272},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8433,"byte_end":8439,"line_start":271,"line_end":271,"column_start":5,"column_end":11},"name":"Global","qualname":"::Error::Global","value":"Error::Global(String)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Global-level error.\n","sig":null,"attributes":[{"value":"/ Global-level error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8405,"byte_end":8428,"line_start":270,"line_end":270,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1275},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8480,"byte_end":8485,"line_start":273,"line_end":273,"column_start":5,"column_end":10},"name":"Value","qualname":"::Error::Value","value":"Error::Value(String)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Value-level error.\n","sig":null,"attributes":[{"value":"/ Value-level error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8453,"byte_end":8475,"line_start":272,"line_end":272,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8513,"byte_end":8517,"line_start":275,"line_end":275,"column_start":5,"column_end":9},"name":"Trap","qualname":"::Error::Trap","value":"Error::Trap(Trap)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Trap.\n","sig":null,"attributes":[{"value":"/ Trap.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8499,"byte_end":8508,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8560,"byte_end":8564,"line_start":277,"line_end":277,"column_start":5,"column_end":9},"name":"Host","qualname":"::Error::Host","value":"Error::Host(Box<host::HostError>)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Custom embedder error.\n","sig":null,"attributes":[{"value":"/ Custom embedder error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8529,"byte_end":8555,"line_start":276,"line_end":276,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1256},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8007,"byte_end":8012,"line_start":258,"line_end":258,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n\n    /// Module validation error. Might occur only at load time.\n    Validation(String),\n\n    /// Error while instantiating a module. Might occur when provided\n    /// with incorrect exports (i.e. linkage failure).\n    Instantiation(String),\n\n    /// Function-level error.\n    Function(String),\n\n    /// Table-level error.\n    Table(String),\n\n    /// Memory-level error.\n    Memory(String),\n\n    /// Global-level error.\n    Global(String),\n\n    /// Value-level error.\n    Value(String),\n\n    /// Trap.\n    Trap(Trap),\n\n    /// Custom embedder error.\n    Host(Box<host::HostError>),\n}","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1281}],"decl_id":null,"docs":" Internal interpreter error.\n","sig":null,"attributes":[{"value":"/ Internal interpreter error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7949,"byte_end":7980,"line_start":256,"line_end":256,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":9013,"byte_end":9026,"line_start":289,"line_end":289,"column_start":12,"column_end":25},"name":"as_host_error","qualname":"<Error>::as_host_error","value":"pub fn as_host_error(&Self) -> Option<&host::HostError>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`HostError`] if this `Error` represents some host error.","sig":null,"attributes":[{"value":"/ Returns [`HostError`] if this `Error` represents some host error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8612,"byte_end":8681,"line_start":281,"line_end":281,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8686,"byte_end":8689,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ I.e. if this error have variant [`Host`] or [`Trap`][`Trap`] with [host][`TrapKind::Host`] error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8694,"byte_end":8795,"line_start":283,"line_end":283,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8800,"byte_end":8803,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ [`HostError`]: trait.HostError.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8808,"byte_end":8847,"line_start":285,"line_end":285,"column_start":5,"column_end":44}},{"value":"/ [`Host`]: enum.Error.html#variant.Host","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8852,"byte_end":8894,"line_start":286,"line_end":286,"column_start":5,"column_end":47}},{"value":"/ [`Trap`]: enum.Error.html#variant.Trap","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8899,"byte_end":8941,"line_start":287,"line_end":287,"column_start":5,"column_end":47}},{"value":"/ [`TrapKind::Host`]: enum.TrapKind.html#variant.Host","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8946,"byte_end":9001,"line_start":288,"line_end":288,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1286},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18013,"byte_end":18020,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"FuncRef","qualname":"::func::FuncRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a function (See [`FuncInstance`] for details).","sig":null,"attributes":[{"value":"/ Reference to a function (See [`FuncInstance`] for details).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":17804,"byte_end":17867,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":17868,"byte_end":17871,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":17872,"byte_end":17926,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":17927,"byte_end":17930,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`FuncInstance`]: struct.FuncInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":17931,"byte_end":17977,"line_start":20,"line_end":20,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":72},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18808,"byte_end":18820,"line_start":45,"line_end":45,"column_start":12,"column_end":24},"name":"FuncInstance","qualname":"::func::FuncInstance","value":"","parent":null,"children":[],"decl_id":null,"docs":" Runtime representation of a function.","sig":null,"attributes":[{"value":"/ Runtime representation of a function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18175,"byte_end":18216,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18217,"byte_end":18220,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Functions are the unit of organization of code in WebAssembly. Each function takes a sequence of values","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18221,"byte_end":18328,"line_start":33,"line_end":33,"column_start":1,"column_end":108}},{"value":"/ as parameters and either optionally return a value or trap.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18329,"byte_end":18392,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/ Functions can call other function including itself (i.e recursive calls are allowed) and imported functions","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18393,"byte_end":18504,"line_start":35,"line_end":35,"column_start":1,"column_end":112}},{"value":"/ (i.e functions defined in another module or by the host environment).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18505,"byte_end":18578,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18579,"byte_end":18582,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Functions can be defined either:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18583,"byte_end":18619,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18620,"byte_end":18623,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ - by a wasm module,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18624,"byte_end":18647,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ - by the host environment and passed to a wasm module as an import.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18648,"byte_end":18719,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/   See more in [`Externals`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18720,"byte_end":18752,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18753,"byte_end":18756,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`Externals`]: trait.Externals.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18757,"byte_end":18796,"line_start":44,"line_end":44,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":20148,"byte_end":20158,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"alloc_host","qualname":"<FuncInstance>::alloc_host","value":"pub fn alloc_host(Signature, usize) -> FuncRef","parent":null,"children":[],"decl_id":null,"docs":" Allocate a function instance for a host function.","sig":null,"attributes":[{"value":"/ Allocate a function instance for a host function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":19760,"byte_end":19813,"line_start":76,"line_end":76,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":19818,"byte_end":19821,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ When this function instance will be called by the wasm code,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":19826,"byte_end":19890,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"/ the instance of [`Externals`] will be invoked by calling `invoke_index`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":19895,"byte_end":19970,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ with specified `host_func_index` here.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":19975,"byte_end":20017,"line_start":80,"line_end":80,"column_start":5,"column_end":47}},{"value":"/ This call will be made with the `signature` provided here.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":20022,"byte_end":20084,"line_start":81,"line_end":81,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":20089,"byte_end":20092,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ [`Externals`]: trait.Externals.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":20097,"byte_end":20136,"line_start":83,"line_end":83,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":20582,"byte_end":20591,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"signature","qualname":"<FuncInstance>::signature","value":"pub fn signature(&Self) -> &Signature","parent":null,"children":[],"decl_id":null,"docs":" Returns [signature] of this function instance.","sig":null,"attributes":[{"value":"/ Returns [signature] of this function instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":20385,"byte_end":20435,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":20440,"byte_end":20443,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This function instance can only be called with matching signatures.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":20448,"byte_end":20519,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":20524,"byte_end":20527,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [signature]: struct.Signature.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":20532,"byte_end":20570,"line_start":96,"line_end":96,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":21788,"byte_end":21794,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"invoke","qualname":"<FuncInstance>::invoke","value":"pub fn invoke<E: Externals>(&FuncRef, &[RuntimeValue], &mut E)\n-> Result<Option<RuntimeValue>, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Invoke this function.","sig":null,"attributes":[{"value":"/ Invoke this function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":21511,"byte_end":21536,"line_start":128,"line_end":128,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":21541,"byte_end":21544,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":21549,"byte_end":21561,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":21566,"byte_end":21569,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if `args` types is not match function [`signature`] or","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":21574,"byte_end":21646,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ if [`Trap`] at execution time occured.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":21651,"byte_end":21693,"line_start":133,"line_end":133,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":21698,"byte_end":21701,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`signature`]: #method.signature","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":21706,"byte_end":21742,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"/ [`Trap`]: #enum.Trap.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":21747,"byte_end":21776,"line_start":136,"line_end":136,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":22581,"byte_end":22598,"line_start":162,"line_end":162,"column_start":12,"column_end":29},"name":"invoke_with_stack","qualname":"<FuncInstance>::invoke_with_stack","value":"pub fn invoke_with_stack<E: Externals>(&FuncRef, &[RuntimeValue], &mut E,\n                                       &mut StackRecycler)\n-> Result<Option<RuntimeValue>, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Invoke this function using recycled stacks.","sig":null,"attributes":[{"value":"/ Invoke this function using recycled stacks.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":22418,"byte_end":22465,"line_start":155,"line_end":155,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":22470,"byte_end":22473,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":22478,"byte_end":22490,"line_start":157,"line_end":157,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":22495,"byte_end":22498,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Same as [`invoke`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":22503,"byte_end":22526,"line_start":159,"line_end":159,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":22531,"byte_end":22534,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`invoke`]: #method.invoke","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":22539,"byte_end":22569,"line_start":161,"line_end":161,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":24119,"byte_end":24135,"line_start":197,"line_end":197,"column_start":12,"column_end":28},"name":"invoke_resumable","qualname":"<FuncInstance>::invoke_resumable","value":"pub fn invoke_resumable<'args,\n                        impl Into<Cow<'args, [RuntimeValue]>>: Into<Cow>>(&FuncRef,\n                                                                          impl Into<Cow<'args, [RuntimeValue]>>)\n-> Result<FuncInvocation, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Invoke the function, get a resumable handle. This handle can then be used to [`start_execution`]. If a\n Host trap happens, caller can use [`resume_execution`] to feed the expected return value back in, and then\n continue the execution.","sig":null,"attributes":[{"value":"/ Invoke the function, get a resumable handle. This handle can then be used to [`start_execution`]. If a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23384,"byte_end":23490,"line_start":183,"line_end":183,"column_start":5,"column_end":111}},{"value":"/ Host trap happens, caller can use [`resume_execution`] to feed the expected return value back in, and then","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23495,"byte_end":23605,"line_start":184,"line_end":184,"column_start":5,"column_end":115}},{"value":"/ continue the execution.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23610,"byte_end":23637,"line_start":185,"line_end":185,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23642,"byte_end":23645,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This is an experimental API, and this functionality may not be available in other WebAssembly engines.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23650,"byte_end":23756,"line_start":187,"line_end":187,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23761,"byte_end":23764,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23769,"byte_end":23781,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23786,"byte_end":23789,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if `args` types is not match function [`signature`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23794,"byte_end":23864,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23869,"byte_end":23872,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ [`signature`]: #method.signature","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23877,"byte_end":23913,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"/ [`Trap`]: #enum.Trap.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23918,"byte_end":23947,"line_start":194,"line_end":194,"column_start":5,"column_end":34}},{"value":"/ [`start_execution`]: struct.FuncInvocation.html#method.start_execution","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":23952,"byte_end":24026,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ [`resume_execution`]: struct.FuncInvocation.html#method.resume_execution","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":24031,"byte_end":24107,"line_start":196,"line_end":196,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1304},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25116,"byte_end":25120,"line_start":228,"line_end":228,"column_start":5,"column_end":9},"name":"Trap","qualname":"::func::ResumableError::Trap","value":"ResumableError::Trap(Trap)","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":" Trap happened.\n","sig":null,"attributes":[{"value":"/ Trap happened.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25093,"byte_end":25111,"line_start":227,"line_end":227,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1307},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25704,"byte_end":25716,"line_start":239,"line_end":239,"column_start":5,"column_end":17},"name":"NotResumable","qualname":"::func::ResumableError::NotResumable","value":"ResumableError::NotResumable","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":" The invocation is not resumable.","sig":null,"attributes":[{"value":"/ The invocation is not resumable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25132,"byte_end":25168,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25173,"byte_end":25176,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Invocations are only resumable if a host function is called, and the host function returns a trap of `Host` kind. For other cases, this error will be returned. This includes:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25181,"byte_end":25359,"line_start":231,"line_end":231,"column_start":5,"column_end":183}},{"value":"/ - The invocation is directly a host function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25364,"byte_end":25413,"line_start":232,"line_end":232,"column_start":5,"column_end":54}},{"value":"/ - The invocation has not been started.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25418,"byte_end":25460,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ - The invocation returns normally or returns any trap other than `Host` kind.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25465,"byte_end":25546,"line_start":234,"line_end":234,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25551,"byte_end":25554,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This error is returned by [`resume_execution`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25559,"byte_end":25610,"line_start":236,"line_end":236,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25615,"byte_end":25618,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`resume_execution`]: struct.FuncInvocation.html#method.resume_execution","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25623,"byte_end":25699,"line_start":238,"line_end":238,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25921,"byte_end":25935,"line_start":245,"line_end":245,"column_start":5,"column_end":19},"name":"AlreadyStarted","qualname":"::func::ResumableError::AlreadyStarted","value":"ResumableError::AlreadyStarted","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":" The invocation has already been started.","sig":null,"attributes":[{"value":"/ The invocation has already been started.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25722,"byte_end":25766,"line_start":240,"line_end":240,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25771,"byte_end":25774,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This error is returned by [`start_execution`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25779,"byte_end":25829,"line_start":242,"line_end":242,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25834,"byte_end":25837,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ [`start_execution`]: struct.FuncInvocation.html#method.start_execution","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25842,"byte_end":25916,"line_start":244,"line_end":244,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":1303},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25072,"byte_end":25086,"line_start":226,"line_end":226,"column_start":10,"column_end":24},"name":"ResumableError","qualname":"::func::ResumableError","value":"pub enum ResumableError {\n\n    /// Trap happened.\n    Trap(Trap),\n\n    /// The invocation is not resumable.\n    ///\n    /// Invocations are only resumable if a host function is called, and the host function returns a trap of `Host` kind. For other cases, this error will be returned. This includes:\n    /// - The invocation is directly a host function.\n    /// - The invocation has not been started.\n    /// - The invocation returns normally or returns any trap other than `Host` kind.\n    ///\n    /// This error is returned by [`resume_execution`].\n    ///\n    /// [`resume_execution`]: struct.FuncInvocation.html#method.resume_execution\n    NotResumable,\n\n    /// The invocation has already been started.\n    ///\n    /// This error is returned by [`start_execution`].\n    ///\n    /// [`start_execution`]: struct.FuncInvocation.html#method.start_execution\n    AlreadyStarted,\n}","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1309}],"decl_id":null,"docs":" A resumable invocation error.\n","sig":null,"attributes":[{"value":"/ A resumable invocation error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25012,"byte_end":25045,"line_start":224,"line_end":224,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":26162,"byte_end":26176,"line_start":255,"line_end":255,"column_start":12,"column_end":26},"name":"FuncInvocation","qualname":"::func::FuncInvocation","value":"FuncInvocation {  }","parent":null,"children":[{"krate":0,"index":94}],"decl_id":null,"docs":" A resumable invocation handle. This struct is returned by `FuncInstance::invoke_resumable`.\n","sig":null,"attributes":[{"value":"/ A resumable invocation handle. This struct is returned by `FuncInstance::invoke_resumable`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":26055,"byte_end":26150,"line_start":254,"line_end":254,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":26508,"byte_end":26520,"line_start":270,"line_end":270,"column_start":12,"column_end":24},"name":"is_resumable","qualname":"<FuncInvocation>::is_resumable","value":"pub fn is_resumable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this invocation is currently resumable.\n","sig":null,"attributes":[{"value":"/ Whether this invocation is currently resumable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":26445,"byte_end":26496,"line_start":269,"line_end":269,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":26837,"byte_end":26857,"line_start":278,"line_end":278,"column_start":12,"column_end":32},"name":"resumable_value_type","qualname":"<FuncInvocation>::resumable_value_type","value":"pub fn resumable_value_type(&Self) -> Option<ValueType>","parent":null,"children":[],"decl_id":null,"docs":" If the invocation is resumable, the expected return value type to be feed back in.\n","sig":null,"attributes":[{"value":"/ If the invocation is resumable, the expected return value type to be feed back in.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":26739,"byte_end":26825,"line_start":277,"line_end":277,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":27253,"byte_end":27268,"line_start":289,"line_end":289,"column_start":12,"column_end":27},"name":"start_execution","qualname":"<FuncInvocation>::start_execution","value":"pub fn start_execution<'externals, E: Externals +\n                       'externals>(&mut Self, &'externals mut E)\n-> Result<Option<RuntimeValue>, ResumableError>","parent":null,"children":[],"decl_id":null,"docs":" Start the invocation execution.\n","sig":null,"attributes":[{"value":"/ Start the invocation execution.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":27206,"byte_end":27241,"line_start":288,"line_end":288,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":28668,"byte_end":28684,"line_start":322,"line_end":322,"column_start":12,"column_end":28},"name":"resume_execution","qualname":"<FuncInvocation>::resume_execution","value":"pub fn resume_execution<'externals, E: Externals +\n                        'externals>(&mut Self, Option<RuntimeValue>,\n                                    &'externals mut E)\n-> Result<Option<RuntimeValue>, ResumableError>","parent":null,"children":[],"decl_id":null,"docs":" Resume an execution if a previous trap of Host kind happened.","sig":null,"attributes":[{"value":"/ Resume an execution if a previous trap of Host kind happened.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":28167,"byte_end":28232,"line_start":314,"line_end":314,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":28237,"byte_end":28240,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ `return_val` must be of the value type [`resumable_value_type`], defined by the host function import. Otherwise,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":28245,"byte_end":28361,"line_start":316,"line_end":316,"column_start":5,"column_end":121}},{"value":"/ `UnexpectedSignature` trap will be returned. The current invocation must also be resumable","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":28366,"byte_end":28460,"line_start":317,"line_end":317,"column_start":5,"column_end":99}},{"value":"/ [`is_resumable`]. Otherwise, a `NotResumable` error will be returned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":28465,"byte_end":28538,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":28543,"byte_end":28546,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ [`resumable_value_type`]: #method.resumable_value_type","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":28551,"byte_end":28609,"line_start":320,"line_end":320,"column_start":5,"column_end":63}},{"value":"/ [`is_resumable`]: #method.is_resumable","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":28614,"byte_end":28656,"line_start":321,"line_end":321,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1320},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30040,"byte_end":30049,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"GlobalRef","qualname":"::global::GlobalRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a global variable (See [`GlobalInstance`] for details).","sig":null,"attributes":[{"value":"/ Reference to a global variable (See [`GlobalInstance`] for details).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":29818,"byte_end":29890,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":29891,"byte_end":29894,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":29895,"byte_end":29949,"line_start":10,"line_end":10,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":29950,"byte_end":29953,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`GlobalInstance`]: struct.GlobalInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":29954,"byte_end":30004,"line_start":12,"line_end":12,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1327},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30805,"byte_end":30819,"line_start":35,"line_end":35,"column_start":12,"column_end":26},"name":"GlobalInstance","qualname":"::global::GlobalInstance","value":"GlobalInstance {  }","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329}],"decl_id":null,"docs":" Runtime representation of a global variable (or `global` for short).","sig":null,"attributes":[{"value":"/ Runtime representation of a global variable (or `global` for short).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30212,"byte_end":30284,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30285,"byte_end":30288,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Global contains a value of a specified type and flag which specifies whether this","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30289,"byte_end":30374,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ global are mutable or immutable. Neither type of the value nor immutability can't be changed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30375,"byte_end":30471,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/ after creation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30472,"byte_end":30491,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30492,"byte_end":30495,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Attempt to change value of immutable global or to change type of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30496,"byte_end":30564,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ the value (e.g. assign [`I32`] value to a global that was created with [`I64`] type) will lead to an error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30565,"byte_end":30676,"line_start":30,"line_end":30,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30677,"byte_end":30680,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`I32`]: enum.RuntimeValue.html#variant.I32","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30681,"byte_end":30728,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ [`I64`]: enum.RuntimeValue.html#variant.I64","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30729,"byte_end":30776,"line_start":33,"line_end":33,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":31077,"byte_end":31082,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"alloc","qualname":"<GlobalInstance>::alloc","value":"pub fn alloc(RuntimeValue, bool) -> GlobalRef","parent":null,"children":[],"decl_id":null,"docs":" Allocate a global variable instance.","sig":null,"attributes":[{"value":"/ Allocate a global variable instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30899,"byte_end":30939,"line_start":41,"line_end":41,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30944,"byte_end":30947,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Since it is possible to export only immutable globals,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30952,"byte_end":31010,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/ users likely want to set `mutable` to `false`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":31015,"byte_end":31065,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":31450,"byte_end":31453,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"set","qualname":"<GlobalInstance>::set","value":"pub fn set(&Self, RuntimeValue) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Change the value of this global variable.","sig":null,"attributes":[{"value":"/ Change the value of this global variable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":31252,"byte_end":31297,"line_start":52,"line_end":52,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":31302,"byte_end":31305,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":31310,"byte_end":31322,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":31327,"byte_end":31330,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if this global isn't mutable or if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":31335,"byte_end":31387,"line_start":56,"line_end":56,"column_start":5,"column_end":57}},{"value":"/ type of `val` doesn't match global's type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":31392,"byte_end":31438,"line_start":57,"line_end":57,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":31909,"byte_end":31912,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"get","qualname":"<GlobalInstance>::get","value":"pub fn get(&Self) -> RuntimeValue","parent":null,"children":[],"decl_id":null,"docs":" Get the value of this global variable.\n","sig":null,"attributes":[{"value":"/ Get the value of this global variable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":31855,"byte_end":31897,"line_start":71,"line_end":71,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":32108,"byte_end":32118,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"is_mutable","qualname":"<GlobalInstance>::is_mutable","value":"pub fn is_mutable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if this global variable is mutable.","sig":null,"attributes":[{"value":"/ Returns if this global variable is mutable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":31972,"byte_end":32019,"line_start":76,"line_end":76,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":32024,"byte_end":32027,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Note: Imported and/or exported globals are always immutable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":32032,"byte_end":32096,"line_start":78,"line_end":78,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":32227,"byte_end":32237,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"value_type","qualname":"<GlobalInstance>::value_type","value":"pub fn value_type(&Self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Returns value type of this global variable.\n","sig":null,"attributes":[{"value":"/ Returns value type of this global variable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":32168,"byte_end":32215,"line_start":83,"line_end":83,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":32679,"byte_end":32690,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"RuntimeArgs","qualname":"::host::RuntimeArgs","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around slice of [`RuntimeValue`] for using it\n as an argument list conveniently.","sig":null,"attributes":[{"value":"/ Wrapper around slice of [`RuntimeValue`] for using it","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":32506,"byte_end":32563,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ as an argument list conveniently.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":32564,"byte_end":32601,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":32602,"byte_end":32605,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`RuntimeValue`]: enum.RuntimeValue.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":32606,"byte_end":32650,"line_start":8,"line_end":8,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33155,"byte_end":33166,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"nth_checked","qualname":"<RuntimeArgs>::nth_checked","value":"pub fn nth_checked<T>(&Self, usize) -> Result<T, Trap> where\nT: FromRuntimeValue","parent":null,"children":[],"decl_id":null,"docs":" Extract argument by index `idx`.","sig":null,"attributes":[{"value":"/ Extract argument by index `idx`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33008,"byte_end":33044,"line_start":25,"line_end":25,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33049,"byte_end":33052,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33057,"byte_end":33069,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33074,"byte_end":33077,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if cast is invalid or not enough arguments.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33082,"byte_end":33143,"line_start":29,"line_end":29,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33622,"byte_end":33639,"line_start":47,"line_end":47,"column_start":12,"column_end":29},"name":"nth_value_checked","qualname":"<RuntimeArgs>::nth_value_checked","value":"pub fn nth_value_checked(&Self, usize) -> Result<RuntimeValue, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Extract argument as a [`RuntimeValue`] by index `idx`.","sig":null,"attributes":[{"value":"/ Extract argument as a [`RuntimeValue`] by index `idx`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33401,"byte_end":33459,"line_start":40,"line_end":40,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33464,"byte_end":33467,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33472,"byte_end":33484,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33489,"byte_end":33492,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if this list has not enough arguments.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33497,"byte_end":33553,"line_start":44,"line_end":44,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33558,"byte_end":33561,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ [`RuntimeValue`]: enum.RuntimeValue.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33566,"byte_end":33610,"line_start":46,"line_end":46,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33971,"byte_end":33974,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"nth","qualname":"<RuntimeArgs>::nth","value":"pub fn nth<T>(&Self, usize) -> T where T: FromRuntimeValue","parent":null,"children":[],"decl_id":null,"docs":" Extract argument by index `idx`.","sig":null,"attributes":[{"value":"/ Extract argument by index `idx`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33831,"byte_end":33867,"line_start":54,"line_end":54,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33872,"byte_end":33875,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33880,"byte_end":33892,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33897,"byte_end":33900,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Panics if cast is invalid or not enough arguments.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":33905,"byte_end":33959,"line_start":58,"line_end":58,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34241,"byte_end":34244,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"len","qualname":"<RuntimeArgs>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Total number of arguments\n","sig":null,"attributes":[{"value":"/ Total number of arguments","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34200,"byte_end":34229,"line_start":67,"line_end":67,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":156},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35241,"byte_end":35250,"line_start":110,"line_end":110,"column_start":11,"column_end":20},"name":"HostError","qualname":"::host::HostError","value":"HostError: 'static + ::core::fmt::Display + ::core::fmt::Debug + Send + Sync","parent":null,"children":[{"krate":0,"index":157}],"decl_id":null,"docs":" Trait that allows the host to return custom error.","sig":null,"attributes":[{"value":"/ Trait that allows the host to return custom error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34293,"byte_end":34347,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34348,"byte_end":34351,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ It should be useful for representing custom traps,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34352,"byte_end":34406,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/ troubles at instantiation time or other host specific conditions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34407,"byte_end":34476,"line_start":76,"line_end":76,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34477,"byte_end":34480,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34481,"byte_end":34495,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34496,"byte_end":34499,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34500,"byte_end":34511,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ use std::fmt;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34512,"byte_end":34529,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/ use wasmi::{Error, HostError};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34530,"byte_end":34564,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34565,"byte_end":34568,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34569,"byte_end":34589,"line_start":84,"line_end":84,"column_start":1,"column_end":21}},{"value":"/ struct MyError {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34590,"byte_end":34610,"line_start":85,"line_end":85,"column_start":1,"column_end":21}},{"value":"/     code: u32,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34611,"byte_end":34629,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34630,"byte_end":34635,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34636,"byte_end":34639,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ impl fmt::Display for MyError {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34640,"byte_end":34675,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34676,"byte_end":34738,"line_start":90,"line_end":90,"column_start":1,"column_end":63}},{"value":"/         write!(f, \"MyError, code={}\", self.code)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34739,"byte_end":34791,"line_start":91,"line_end":91,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34792,"byte_end":34801,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34802,"byte_end":34807,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34808,"byte_end":34811,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ impl HostError for MyError { }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34812,"byte_end":34846,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34847,"byte_end":34850,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ fn failable_fn() -> Result<(), Error> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34851,"byte_end":34894,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/     let my_error = MyError { code: 1312 };","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34895,"byte_end":34941,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/     Err(Error::Host(Box::new(my_error)))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34942,"byte_end":34986,"line_start":99,"line_end":99,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34987,"byte_end":34992,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34993,"byte_end":34996,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ match failable_fn() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":34997,"byte_end":35022,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"/     Err(Error::Host(host_error)) => {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35023,"byte_end":35064,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/         let my_error = host_error.downcast_ref::<MyError>().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35065,"byte_end":35138,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/         assert_eq!(my_error.code, 1312);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35139,"byte_end":35183,"line_start":105,"line_end":105,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35184,"byte_end":35193,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/     _ => panic!(),","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35194,"byte_end":35216,"line_start":107,"line_end":107,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35217,"byte_end":35222,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35223,"byte_end":35230,"line_start":109,"line_end":109,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35346,"byte_end":35369,"line_start":112,"line_end":112,"column_start":8,"column_end":31},"name":"__private_get_type_id__","qualname":"::host::HostError::__private_get_type_id__","value":"pub fn __private_get_type_id__(&Self) -> TypeId","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35537,"byte_end":35549,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<HostError>::downcast_ref","value":"pub fn downcast_ref<T: HostError>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to downcast this `HostError` to a concrete type by reference.\n","sig":null,"attributes":[{"value":"/ Attempt to downcast this `HostError` to a concrete type by reference.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35452,"byte_end":35525,"line_start":118,"line_end":118,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35882,"byte_end":35894,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"downcast_mut","qualname":"<HostError>::downcast_mut","value":"pub fn downcast_mut<T: HostError>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to downcast this `HostError` to a concrete type by mutable\n reference.\n","sig":null,"attributes":[{"value":"/ Attempt to downcast this `HostError` to a concrete type by mutable","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35781,"byte_end":35851,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ reference.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35856,"byte_end":35870,"line_start":128,"line_end":128,"column_start":5,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":163},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38459,"byte_end":38468,"line_start":215,"line_end":215,"column_start":11,"column_end":20},"name":"Externals","qualname":"::host::Externals","value":"Externals","parent":null,"children":[{"krate":0,"index":164}],"decl_id":null,"docs":" Trait that allows to implement host functions.","sig":null,"attributes":[{"value":"/ Trait that allows to implement host functions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36132,"byte_end":36182,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36183,"byte_end":36186,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36187,"byte_end":36201,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36202,"byte_end":36205,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36206,"byte_end":36217,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ use wasmi::{","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36218,"byte_end":36234,"line_start":143,"line_end":143,"column_start":1,"column_end":17}},{"value":"/     Externals, RuntimeValue, RuntimeArgs, Error, ModuleImportResolver,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36235,"byte_end":36309,"line_start":144,"line_end":144,"column_start":1,"column_end":75}},{"value":"/     FuncRef, ValueType, Signature, FuncInstance, Trap,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36310,"byte_end":36368,"line_start":145,"line_end":145,"column_start":1,"column_end":59}},{"value":"/ };","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36369,"byte_end":36375,"line_start":146,"line_end":146,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36376,"byte_end":36379,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ struct HostExternals {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36380,"byte_end":36406,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/     counter: usize,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36407,"byte_end":36430,"line_start":149,"line_end":149,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36431,"byte_end":36436,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36437,"byte_end":36440,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ const ADD_FUNC_INDEX: usize = 0;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36441,"byte_end":36477,"line_start":152,"line_end":152,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36478,"byte_end":36481,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ impl Externals for HostExternals {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36482,"byte_end":36520,"line_start":154,"line_end":154,"column_start":1,"column_end":39}},{"value":"/     fn invoke_index(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36521,"byte_end":36545,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/         &mut self,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36546,"byte_end":36568,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/         index: usize,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36569,"byte_end":36594,"line_start":157,"line_end":157,"column_start":1,"column_end":26}},{"value":"/         args: RuntimeArgs,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36595,"byte_end":36625,"line_start":158,"line_end":158,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<RuntimeValue>, Trap> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36626,"byte_end":36675,"line_start":159,"line_end":159,"column_start":1,"column_end":50}},{"value":"/         match index {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36676,"byte_end":36701,"line_start":160,"line_end":160,"column_start":1,"column_end":26}},{"value":"/             ADD_FUNC_INDEX => {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36702,"byte_end":36737,"line_start":161,"line_end":161,"column_start":1,"column_end":36}},{"value":"/                 let a: u32 = args.nth_checked(0)?;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36738,"byte_end":36792,"line_start":162,"line_end":162,"column_start":1,"column_end":55}},{"value":"/                 let b: u32 = args.nth_checked(1)?;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36793,"byte_end":36847,"line_start":163,"line_end":163,"column_start":1,"column_end":55}},{"value":"/                 let result = a + b;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36848,"byte_end":36887,"line_start":164,"line_end":164,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36888,"byte_end":36891,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/                 Ok(Some(RuntimeValue::I32(result as i32)))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36892,"byte_end":36954,"line_start":166,"line_end":166,"column_start":1,"column_end":63}},{"value":"/             }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36955,"byte_end":36972,"line_start":167,"line_end":167,"column_start":1,"column_end":18}},{"value":"/             _ => panic!(\"Unimplemented function at {}\", index),","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":36973,"byte_end":37040,"line_start":168,"line_end":168,"column_start":1,"column_end":68}},{"value":"/         }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37041,"byte_end":37054,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37055,"byte_end":37064,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37065,"byte_end":37070,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37071,"byte_end":37074,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ impl HostExternals {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37075,"byte_end":37099,"line_start":173,"line_end":173,"column_start":1,"column_end":25}},{"value":"/     fn check_signature(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37100,"byte_end":37127,"line_start":174,"line_end":174,"column_start":1,"column_end":28}},{"value":"/         &self,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37128,"byte_end":37146,"line_start":175,"line_end":175,"column_start":1,"column_end":19}},{"value":"/         index: usize,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37147,"byte_end":37172,"line_start":176,"line_end":176,"column_start":1,"column_end":26}},{"value":"/         signature: &Signature","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37173,"byte_end":37206,"line_start":177,"line_end":177,"column_start":1,"column_end":34}},{"value":"/     ) -> bool {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37207,"byte_end":37226,"line_start":178,"line_end":178,"column_start":1,"column_end":20}},{"value":"/         let (params, ret_ty): (&[ValueType], Option<ValueType>) = match index {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37227,"byte_end":37310,"line_start":179,"line_end":179,"column_start":1,"column_end":84}},{"value":"/             ADD_FUNC_INDEX => (&[ValueType::I32, ValueType::I32], Some(ValueType::I32)),","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37311,"byte_end":37403,"line_start":180,"line_end":180,"column_start":1,"column_end":93}},{"value":"/             _ => return false,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37404,"byte_end":37438,"line_start":181,"line_end":181,"column_start":1,"column_end":35}},{"value":"/         };","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37439,"byte_end":37453,"line_start":182,"line_end":182,"column_start":1,"column_end":15}},{"value":"/         signature.params() == params && signature.return_type() == ret_ty","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37454,"byte_end":37531,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/     }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37532,"byte_end":37541,"line_start":184,"line_end":184,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37542,"byte_end":37547,"line_start":185,"line_end":185,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37548,"byte_end":37551,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ impl ModuleImportResolver for HostExternals {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37552,"byte_end":37601,"line_start":187,"line_end":187,"column_start":1,"column_end":50}},{"value":"/     fn resolve_func(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37602,"byte_end":37626,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"/         &self,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37627,"byte_end":37645,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/         field_name: &str,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37646,"byte_end":37675,"line_start":190,"line_end":190,"column_start":1,"column_end":30}},{"value":"/         signature: &Signature","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37676,"byte_end":37709,"line_start":191,"line_end":191,"column_start":1,"column_end":34}},{"value":"/     ) -> Result<FuncRef, Error> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37710,"byte_end":37747,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/         let index = match field_name {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37748,"byte_end":37790,"line_start":193,"line_end":193,"column_start":1,"column_end":43}},{"value":"/             \"add\" => ADD_FUNC_INDEX,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37791,"byte_end":37831,"line_start":194,"line_end":194,"column_start":1,"column_end":41}},{"value":"/             _ => {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37832,"byte_end":37854,"line_start":195,"line_end":195,"column_start":1,"column_end":23}},{"value":"/                 return Err(Error::Instantiation(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37855,"byte_end":37907,"line_start":196,"line_end":196,"column_start":1,"column_end":53}},{"value":"/                     format!(\"Export {} not found\", field_name),","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37908,"byte_end":37975,"line_start":197,"line_end":197,"column_start":1,"column_end":68}},{"value":"/                 ))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37976,"byte_end":37998,"line_start":198,"line_end":198,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":37999,"byte_end":38016,"line_start":199,"line_end":199,"column_start":1,"column_end":18}},{"value":"/         };","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38017,"byte_end":38031,"line_start":200,"line_end":200,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38032,"byte_end":38035,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/         if !self.check_signature(index, signature) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38036,"byte_end":38092,"line_start":202,"line_end":202,"column_start":1,"column_end":57}},{"value":"/             return Err(Error::Instantiation(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38093,"byte_end":38141,"line_start":203,"line_end":203,"column_start":1,"column_end":49}},{"value":"/                 format!(\"Export {} has a bad signature\", field_name)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38142,"byte_end":38214,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/             ));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38215,"byte_end":38234,"line_start":205,"line_end":205,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38235,"byte_end":38248,"line_start":206,"line_end":206,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38249,"byte_end":38252,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/         Ok(FuncInstance::alloc_host(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38253,"byte_end":38293,"line_start":208,"line_end":208,"column_start":1,"column_end":41}},{"value":"/             Signature::new(&[ValueType::I32, ValueType::I32][..], Some(ValueType::I32)),","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38294,"byte_end":38386,"line_start":209,"line_end":209,"column_start":1,"column_end":93}},{"value":"/             index,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38387,"byte_end":38409,"line_start":210,"line_end":210,"column_start":1,"column_end":23}},{"value":"/         ))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38410,"byte_end":38424,"line_start":211,"line_end":211,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38425,"byte_end":38434,"line_start":212,"line_end":212,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38435,"byte_end":38440,"line_start":213,"line_end":213,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38441,"byte_end":38448,"line_start":214,"line_end":214,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38542,"byte_end":38554,"line_start":217,"line_end":217,"column_start":8,"column_end":20},"name":"invoke_index","qualname":"::host::Externals::invoke_index","value":"pub fn invoke_index(&mut Self, usize, RuntimeArgs)\n-> Result<Option<RuntimeValue>, Trap>","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":" Perform invoke of a host function by specified `index`.\n","sig":null,"attributes":[{"value":"/ Perform invoke of a host function by specified `index`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38475,"byte_end":38534,"line_start":216,"line_end":216,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":165},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38865,"byte_end":38877,"line_start":228,"line_end":228,"column_start":12,"column_end":24},"name":"NopExternals","qualname":"::host::NopExternals","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of [`Externals`] that just traps on [`invoke_index`].","sig":null,"attributes":[{"value":"/ Implementation of [`Externals`] that just traps on [`invoke_index`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38672,"byte_end":38744,"line_start":224,"line_end":224,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38745,"byte_end":38748,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ [`Externals`]: trait.Externals.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38749,"byte_end":38788,"line_start":226,"line_end":226,"column_start":1,"column_end":40}},{"value":"/ [`invoke_index`]: trait.Externals.html#tymethod.invoke_index","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38789,"byte_end":38853,"line_start":227,"line_end":227,"column_start":1,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40367,"byte_end":40381,"line_start":22,"line_end":22,"column_start":11,"column_end":25},"name":"ImportResolver","qualname":"::imports::ImportResolver","value":"ImportResolver","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189}],"decl_id":null,"docs":" Resolver of a module's dependencies.","sig":null,"attributes":[{"value":"/ Resolver of a module's dependencies.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":39949,"byte_end":39989,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":39990,"byte_end":39993,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A module have dependencies in a form of a list of imports (i.e.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":39994,"byte_end":40061,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"/ tuple of a (`module_name`, `field_name`, `descriptor`)).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40062,"byte_end":40122,"line_start":14,"line_end":14,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40123,"byte_end":40126,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The job of implementations of this trait is to provide on each","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40127,"byte_end":40193,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ import a corresponding concrete reference.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40194,"byte_end":40240,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40241,"byte_end":40244,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For simple use-cases you can use [`ImportsBuilder`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40245,"byte_end":40301,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40302,"byte_end":40305,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`ImportsBuilder`]: struct.ImportsBuilder.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40306,"byte_end":40356,"line_start":21,"line_end":21,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40599,"byte_end":40611,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"resolve_func","qualname":"::imports::ImportResolver::resolve_func","value":"pub fn resolve_func(&Self, &str, &str, &Signature) -> Result<FuncRef, Error>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Resolve a function.","sig":null,"attributes":[{"value":"/ Resolve a function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40388,"byte_end":40411,"line_start":23,"line_end":23,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40416,"byte_end":40419,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Returned function should match given `signature`, i.e. all parameter types and return value should have exact match.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40424,"byte_end":40544,"line_start":25,"line_end":25,"column_start":5,"column_end":125}},{"value":"/ Otherwise, link-time error will occur.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40549,"byte_end":40591,"line_start":26,"line_end":26,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40941,"byte_end":40955,"line_start":38,"line_end":38,"column_start":8,"column_end":22},"name":"resolve_global","qualname":"::imports::ImportResolver::resolve_global","value":"pub fn resolve_global(&Self, &str, &str, &GlobalDescriptor)\n-> Result<GlobalRef, Error>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Resolve a global variable.","sig":null,"attributes":[{"value":"/ Resolve a global variable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40752,"byte_end":40782,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40787,"byte_end":40790,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Returned global should match given `descriptor`, i.e. type and mutability","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40795,"byte_end":40872,"line_start":36,"line_end":36,"column_start":5,"column_end":82}},{"value":"/ should match. Otherwise, link-time error will occur.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":40877,"byte_end":40933,"line_start":37,"line_end":37,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41576,"byte_end":41590,"line_start":52,"line_end":52,"column_start":8,"column_end":22},"name":"resolve_memory","qualname":"::imports::ImportResolver::resolve_memory","value":"pub fn resolve_memory(&Self, &str, &str, &MemoryDescriptor)\n-> Result<MemoryRef, Error>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Resolve a memory.","sig":null,"attributes":[{"value":"/ Resolve a memory.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41104,"byte_end":41125,"line_start":45,"line_end":45,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41130,"byte_end":41133,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Returned memory should match requested memory (described by the `descriptor`),","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41138,"byte_end":41220,"line_start":47,"line_end":47,"column_start":5,"column_end":87}},{"value":"/ i.e. initial size of a returned memory should be equal or larger than requested memory.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41225,"byte_end":41316,"line_start":48,"line_end":48,"column_start":5,"column_end":96}},{"value":"/ Furthermore, if requested memory have maximum size, returned memory either should have","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41321,"byte_end":41411,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ equal or larger maximum size or have no maximum size at all.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41416,"byte_end":41480,"line_start":50,"line_end":50,"column_start":5,"column_end":69}},{"value":"/ If returned memory doesn't match the requested then link-time error will occur.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41485,"byte_end":41568,"line_start":51,"line_end":51,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42205,"byte_end":42218,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"resolve_table","qualname":"::imports::ImportResolver::resolve_table","value":"pub fn resolve_table(&Self, &str, &str, &TableDescriptor)\n-> Result<TableRef, Error>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Resolve a table.","sig":null,"attributes":[{"value":"/ Resolve a table.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41739,"byte_end":41759,"line_start":59,"line_end":59,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41764,"byte_end":41767,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Returned table should match requested table (described by the `descriptor`),","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41772,"byte_end":41852,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ i.e. initial size of a returned table should be equal or larger than requested table.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41857,"byte_end":41946,"line_start":62,"line_end":62,"column_start":5,"column_end":94}},{"value":"/ Furthermore, if requested memory have maximum size, returned memory either should have","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":41951,"byte_end":42041,"line_start":63,"line_end":63,"column_start":5,"column_end":95}},{"value":"/ equal or larger maximum size or have no maximum size at all.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42046,"byte_end":42110,"line_start":64,"line_end":64,"column_start":5,"column_end":69}},{"value":"/ If returned table doesn't match the requested then link-time error will occur.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42115,"byte_end":42197,"line_start":65,"line_end":65,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":190},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43458,"byte_end":43472,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"ImportsBuilder","qualname":"::imports::ImportsBuilder","value":"ImportsBuilder {  }","parent":null,"children":[{"krate":0,"index":192}],"decl_id":null,"docs":" Convenience builder of [`ImportResolver`].","sig":null,"attributes":[{"value":"/ Convenience builder of [`ImportResolver`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42363,"byte_end":42409,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42410,"byte_end":42413,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ With help of this builder, you can easily create [`ImportResolver`], just by","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42414,"byte_end":42494,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ adding needed [resolvers][`ModuleImportResolver`] by names.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42495,"byte_end":42558,"line_start":77,"line_end":77,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42559,"byte_end":42562,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42563,"byte_end":42577,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42578,"byte_end":42581,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42582,"byte_end":42593,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/ use wasmi::{ModuleInstance, ImportsBuilder};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42594,"byte_end":42642,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42643,"byte_end":42648,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ # struct EnvModuleResolver;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42649,"byte_end":42680,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ # impl ::wasmi::ModuleImportResolver for EnvModuleResolver { }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42681,"byte_end":42747,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/ # fn func() -> Result<(), ::wasmi::Error> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42748,"byte_end":42795,"line_start":86,"line_end":86,"column_start":1,"column_end":48}},{"value":"/ # let module = wasmi::Module::from_buffer(&[0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]).unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42796,"byte_end":42902,"line_start":87,"line_end":87,"column_start":1,"column_end":107}},{"value":"/ # let other_instance = ModuleInstance::new(&module, &ImportsBuilder::default())?.assert_no_start();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":42903,"byte_end":43006,"line_start":88,"line_end":88,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43007,"byte_end":43010,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ let imports = ImportsBuilder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43011,"byte_end":43050,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/     .with_resolver(\"env\", &EnvModuleResolver)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43051,"byte_end":43100,"line_start":91,"line_end":91,"column_start":1,"column_end":50}},{"value":"/     // Note, that ModuleInstance can be a resolver too.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43101,"byte_end":43160,"line_start":92,"line_end":92,"column_start":1,"column_end":60}},{"value":"/     .with_resolver(\"other_instance\", &other_instance);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43161,"byte_end":43219,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"/ let instance = ModuleInstance::new(&module, &imports)?.assert_no_start();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43220,"byte_end":43297,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43298,"byte_end":43301,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43302,"byte_end":43314,"line_start":96,"line_end":96,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43315,"byte_end":43322,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43323,"byte_end":43330,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43331,"byte_end":43334,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43335,"byte_end":43384,"line_start":100,"line_end":100,"column_start":1,"column_end":50}},{"value":"/ [`ModuleImportResolver`]: trait.ModuleImportResolver.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43385,"byte_end":43446,"line_start":101,"line_end":101,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43724,"byte_end":43727,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"new","qualname":"<ImportsBuilder>::new","value":"pub fn new() -> ImportsBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `ImportsBuilder`.\n","sig":null,"attributes":[{"value":"/ Create an empty `ImportsBuilder`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43675,"byte_end":43712,"line_start":113,"line_end":113,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43885,"byte_end":43898,"line_start":121,"line_end":121,"column_start":12,"column_end":25},"name":"with_resolver","qualname":"<ImportsBuilder>::with_resolver","value":"pub fn with_resolver<N: Into<String>>(Self, N, &'a ModuleImportResolver)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an resolver by a name.\n","sig":null,"attributes":[{"value":"/ Register an resolver by a name.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43838,"byte_end":43873,"line_start":120,"line_end":120,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":44181,"byte_end":44194,"line_start":133,"line_end":133,"column_start":12,"column_end":25},"name":"push_resolver","qualname":"<ImportsBuilder>::push_resolver","value":"pub fn push_resolver<N: Into<String>>(&mut Self, N, &'a ModuleImportResolver)","parent":null,"children":[],"decl_id":null,"docs":" Register an resolver by a name.","sig":null,"attributes":[{"value":"/ Register an resolver by a name.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":44092,"byte_end":44127,"line_start":130,"line_end":130,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":44132,"byte_end":44135,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Mutable borrowed version.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":44140,"byte_end":44169,"line_start":132,"line_end":132,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":214},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46074,"byte_end":46094,"line_start":195,"line_end":195,"column_start":11,"column_end":31},"name":"ModuleImportResolver","qualname":"::imports::ModuleImportResolver","value":"ModuleImportResolver","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Version of [`ImportResolver`] specialized for a single module.","sig":null,"attributes":[{"value":"/ Version of [`ImportResolver`] specialized for a single module.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":45943,"byte_end":46009,"line_start":192,"line_end":192,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46010,"byte_end":46013,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46014,"byte_end":46063,"line_start":194,"line_end":194,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46296,"byte_end":46308,"line_start":201,"line_end":201,"column_start":8,"column_end":20},"name":"resolve_func","qualname":"::imports::ModuleImportResolver::resolve_func","value":"pub fn resolve_func(&Self, &str, &Signature) -> Result<FuncRef, Error>","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":" Resolve a function.","sig":null,"attributes":[{"value":"/ Resolve a function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46101,"byte_end":46124,"line_start":196,"line_end":196,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46129,"byte_end":46132,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ See [`ImportResolver::resolve_func`] for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46137,"byte_end":46190,"line_start":198,"line_end":198,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46195,"byte_end":46198,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ [`ImportResolver::resolve_func`]: trait.ImportResolver.html#tymethod.resolve_func","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46203,"byte_end":46288,"line_start":200,"line_end":200,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46717,"byte_end":46731,"line_start":213,"line_end":213,"column_start":8,"column_end":22},"name":"resolve_global","qualname":"::imports::ModuleImportResolver::resolve_global","value":"pub fn resolve_global(&Self, &str, &GlobalDescriptor)\n-> Result<GlobalRef, Error>","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":" Resolve a global variable.","sig":null,"attributes":[{"value":"/ Resolve a global variable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46509,"byte_end":46539,"line_start":208,"line_end":208,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46544,"byte_end":46547,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ See [`ImportResolver::resolve_global`] for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46552,"byte_end":46607,"line_start":210,"line_end":210,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46612,"byte_end":46615,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`ImportResolver::resolve_global`]: trait.ImportResolver.html#tymethod.resolve_global","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46620,"byte_end":46709,"line_start":212,"line_end":212,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47173,"byte_end":47187,"line_start":229,"line_end":229,"column_start":8,"column_end":22},"name":"resolve_memory","qualname":"::imports::ModuleImportResolver::resolve_memory","value":"pub fn resolve_memory(&Self, &str, &MemoryDescriptor)\n-> Result<MemoryRef, Error>","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":" Resolve a memory.","sig":null,"attributes":[{"value":"/ Resolve a memory.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":46974,"byte_end":46995,"line_start":224,"line_end":224,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47000,"byte_end":47003,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ See [`ImportResolver::resolve_memory`] for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47008,"byte_end":47063,"line_start":226,"line_end":226,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47068,"byte_end":47071,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ [`ImportResolver::resolve_memory`]: trait.ImportResolver.html#tymethod.resolve_memory","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47076,"byte_end":47165,"line_start":228,"line_end":228,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47625,"byte_end":47638,"line_start":245,"line_end":245,"column_start":8,"column_end":21},"name":"resolve_table","qualname":"::imports::ModuleImportResolver::resolve_table","value":"pub fn resolve_table(&Self, &str, &TableDescriptor) -> Result<TableRef, Error>","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":" Resolve a table.","sig":null,"attributes":[{"value":"/ Resolve a table.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47430,"byte_end":47450,"line_start":240,"line_end":240,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47455,"byte_end":47458,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ See [`ImportResolver::resolve_table`] for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47463,"byte_end":47517,"line_start":242,"line_end":242,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47522,"byte_end":47525,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ [`ImportResolver::resolve_table`]: trait.ImportResolver.html#tymethod.resolve_table","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47530,"byte_end":47617,"line_start":244,"line_end":244,"column_start":5,"column_end":92}}]},{"kind":"Const","id":{"krate":0,"index":305},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75471,"byte_end":75494,"line_start":28,"line_end":28,"column_start":11,"column_end":34},"name":"LINEAR_MEMORY_PAGE_SIZE","qualname":"::memory::LINEAR_MEMORY_PAGE_SIZE","value":"Bytes","parent":null,"children":[],"decl_id":null,"docs":" Size of a page of [linear memory][`MemoryInstance`] - 64KiB.","sig":null,"attributes":[{"value":"/ Size of a page of [linear memory][`MemoryInstance`] - 64KiB.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75267,"byte_end":75331,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75332,"byte_end":75335,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of a memory is always a integer multiple of a page size.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75336,"byte_end":75405,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75406,"byte_end":75409,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`MemoryInstance`]: struct.MemoryInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75410,"byte_end":75460,"line_start":27,"line_end":27,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2206},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75736,"byte_end":75745,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"MemoryRef","qualname":"::memory::MemoryRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a memory (See [`MemoryInstance`] for details).","sig":null,"attributes":[{"value":"/ Reference to a memory (See [`MemoryInstance`] for details).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75519,"byte_end":75582,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75583,"byte_end":75586,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75587,"byte_end":75641,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75642,"byte_end":75645,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`MemoryInstance`]: struct.MemoryInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75646,"byte_end":75696,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75697,"byte_end":75700,"line_start":35,"line_end":35,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":309},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76614,"byte_end":76628,"line_start":59,"line_end":59,"column_start":12,"column_end":26},"name":"MemoryInstance","qualname":"::memory::MemoryInstance","value":"MemoryInstance {  }","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":" Runtime representation of a linear memory (or `memory` for short).","sig":null,"attributes":[{"value":"/ Runtime representation of a linear memory (or `memory` for short).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75908,"byte_end":75978,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75979,"byte_end":75982,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A memory is a contiguous, mutable array of raw bytes. Wasm code can load and store values","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75983,"byte_end":76076,"line_start":48,"line_end":48,"column_start":1,"column_end":94}},{"value":"/ from/to a linear memory at any byte address.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76077,"byte_end":76125,"line_start":49,"line_end":49,"column_start":1,"column_end":49}},{"value":"/ A trap occurs if an access is not within the bounds of the current memory size.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76126,"byte_end":76209,"line_start":50,"line_end":50,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76210,"byte_end":76213,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A memory is created with an initial size but can be grown dynamically.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76214,"byte_end":76288,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/ The growth can be limited by specifying maximum size.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76289,"byte_end":76346,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/ The size of a memory is always a integer multiple of a [page size][`LINEAR_MEMORY_PAGE_SIZE`] - 64KiB.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76347,"byte_end":76453,"line_start":54,"line_end":54,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76454,"byte_end":76457,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ At the moment, wasm doesn't provide any way to shrink the memory.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76458,"byte_end":76527,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76528,"byte_end":76531,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`LINEAR_MEMORY_PAGE_SIZE`]: constant.LINEAR_MEMORY_PAGE_SIZE.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76532,"byte_end":76602,"line_start":58,"line_end":58,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78468,"byte_end":78473,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"alloc","qualname":"<MemoryInstance>::alloc","value":"pub fn alloc(Pages, Option<Pages>) -> Result<MemoryRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Allocate a memory instance.","sig":null,"attributes":[{"value":"/ Allocate a memory instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":77622,"byte_end":77653,"line_start":99,"line_end":99,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":77658,"byte_end":77661,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ The memory allocated with initial number of pages specified by `initial`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":77666,"byte_end":77743,"line_start":101,"line_end":101,"column_start":5,"column_end":82}},{"value":"/ Minimal possible value for `initial` is 0 and maximum possible is `65536`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":77748,"byte_end":77826,"line_start":102,"line_end":102,"column_start":5,"column_end":83}},{"value":"/ (Since maximum addressible memory is 2<sup>32</sup> = 4GiB = 65536 * [64KiB][`LINEAR_MEMORY_PAGE_SIZE`]).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":77831,"byte_end":77940,"line_start":103,"line_end":103,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":77945,"byte_end":77948,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ It is possible to limit maximum number of pages this memory instance can have by specifying","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":77953,"byte_end":78048,"line_start":105,"line_end":105,"column_start":5,"column_end":100}},{"value":"/ `maximum`. If not specified, this memory instance would be able to allocate up to 4GiB.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78053,"byte_end":78144,"line_start":106,"line_end":106,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78149,"byte_end":78152,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Allocated memory is always zeroed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78157,"byte_end":78195,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78200,"byte_end":78203,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78208,"byte_end":78220,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78225,"byte_end":78228,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78233,"byte_end":78254,"line_start":112,"line_end":112,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78259,"byte_end":78262,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ - `initial` is greater than `maximum`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78267,"byte_end":78308,"line_start":114,"line_end":114,"column_start":5,"column_end":46}},{"value":"/ - either `initial` or `maximum` is greater than `65536`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78313,"byte_end":78373,"line_start":115,"line_end":115,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78378,"byte_end":78381,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`LINEAR_MEMORY_PAGE_SIZE`]: constant.LINEAR_MEMORY_PAGE_SIZE.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":78386,"byte_end":78456,"line_start":117,"line_end":117,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80152,"byte_end":80159,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"initial","qualname":"<MemoryInstance>::initial","value":"pub fn initial(&Self) -> Pages","parent":null,"children":[],"decl_id":null,"docs":" Returns number of pages this `MemoryInstance` was created with.\n","sig":null,"attributes":[{"value":"/ Returns number of pages this `MemoryInstance` was created with.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80073,"byte_end":80140,"line_start":161,"line_end":161,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80414,"byte_end":80421,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"maximum","qualname":"<MemoryInstance>::maximum","value":"pub fn maximum(&Self) -> Option<Pages>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum amount of pages this `MemoryInstance` can grow to.","sig":null,"attributes":[{"value":"/ Returns maximum amount of pages this `MemoryInstance` can grow to.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80210,"byte_end":80280,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80285,"byte_end":80288,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there is no limit set.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80293,"byte_end":80337,"line_start":168,"line_end":168,"column_start":5,"column_end":49}},{"value":"/ Maximum memory size cannot exceed `65536` pages or 4GiB.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80342,"byte_end":80402,"line_start":169,"line_end":169,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":81049,"byte_end":81061,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"current_size","qualname":"<MemoryInstance>::current_size","value":"pub fn current_size(&Self) -> Pages","parent":null,"children":[],"decl_id":null,"docs":" Returns current linear memory size.","sig":null,"attributes":[{"value":"/ Returns current linear memory size.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80480,"byte_end":80519,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80524,"byte_end":80527,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Maximum memory size cannot exceed `65536` pages or 4GiB.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80532,"byte_end":80592,"line_start":176,"line_end":176,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80597,"byte_end":80600,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80605,"byte_end":80618,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80623,"byte_end":80626,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ To convert number of pages to number of bytes you can use the following code:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80631,"byte_end":80712,"line_start":180,"line_end":180,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80717,"byte_end":80720,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80725,"byte_end":80736,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/ use wasmi::MemoryInstance;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80741,"byte_end":80771,"line_start":183,"line_end":183,"column_start":5,"column_end":35}},{"value":"/ use wasmi::memory_units::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80776,"byte_end":80807,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80812,"byte_end":80815,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let memory = MemoryInstance::alloc(Pages(1), None).unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80820,"byte_end":80884,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/ let byte_size: Bytes = memory.current_size().into();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80889,"byte_end":80945,"line_start":187,"line_end":187,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80950,"byte_end":80965,"line_start":188,"line_end":188,"column_start":5,"column_end":20}},{"value":"/     byte_size,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80970,"byte_end":80988,"line_start":189,"line_end":189,"column_start":5,"column_end":23}},{"value":"/     Bytes(65536),","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":80993,"byte_end":81014,"line_start":190,"line_end":190,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":81019,"byte_end":81025,"line_start":191,"line_end":191,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":81030,"byte_end":81037,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":81201,"byte_end":81210,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"get_value","qualname":"<MemoryInstance>::get_value","value":"pub fn get_value<T: LittleEndianConvert>(&Self, u32) -> Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get value from memory at given offset.\n","sig":null,"attributes":[{"value":"/ Get value from memory at given offset.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":81147,"byte_end":81189,"line_start":197,"line_end":197,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":81820,"byte_end":81823,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"get","qualname":"<MemoryInstance>::get","value":"pub fn get(&Self, u32, usize) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy data from memory at given offset.","sig":null,"attributes":[{"value":"/ Copy data from memory at given offset.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":81599,"byte_end":81641,"line_start":208,"line_end":208,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":81646,"byte_end":81649,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This will allocate vector for you.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":81654,"byte_end":81692,"line_start":210,"line_end":210,"column_start":5,"column_end":43}},{"value":"/ If you can provide a mutable slice you can use [`get_into`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":81697,"byte_end":81761,"line_start":211,"line_end":211,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":81766,"byte_end":81769,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ [`get_into`]: #method.get_into","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":81774,"byte_end":81808,"line_start":213,"line_end":213,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":82261,"byte_end":82269,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"get_into","qualname":"<MemoryInstance>::get_into","value":"pub fn get_into(&Self, u32, &mut [u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy data from given offset in the memory into `target` slice.","sig":null,"attributes":[{"value":"/ Copy data from given offset in the memory into `target` slice.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":82086,"byte_end":82152,"line_start":221,"line_end":221,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":82157,"byte_end":82160,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":82165,"byte_end":82177,"line_start":223,"line_end":223,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":82182,"byte_end":82185,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the specified region is out of bounds.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":82190,"byte_end":82249,"line_start":225,"line_end":225,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":82626,"byte_end":82629,"line_start":236,"line_end":236,"column_start":12,"column_end":15},"name":"set","qualname":"<MemoryInstance>::set","value":"pub fn set(&Self, u32, &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy data in the memory at given offset.\n","sig":null,"attributes":[{"value":"/ Copy data in the memory at given offset.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":82570,"byte_end":82614,"line_start":235,"line_end":235,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":83003,"byte_end":83012,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"set_value","qualname":"<MemoryInstance>::set_value","value":"pub fn set_value<T: LittleEndianConvert>(&Self, u32, T) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy value in the memory at given offset.\n","sig":null,"attributes":[{"value":"/ Copy value in the memory at given offset.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":82946,"byte_end":82991,"line_start":247,"line_end":247,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":83622,"byte_end":83626,"line_start":263,"line_end":263,"column_start":12,"column_end":16},"name":"grow","qualname":"<MemoryInstance>::grow","value":"pub fn grow(&Self, Pages) -> Result<Pages, Error>","parent":null,"children":[],"decl_id":null,"docs":" Increases the size of the linear memory by given number of pages.\n Returns previous memory size if succeeds.","sig":null,"attributes":[{"value":"/ Increases the size of the linear memory by given number of pages.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":83371,"byte_end":83440,"line_start":257,"line_end":257,"column_start":5,"column_end":74}},{"value":"/ Returns previous memory size if succeeds.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":83445,"byte_end":83490,"line_start":258,"line_end":258,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":83495,"byte_end":83498,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":83503,"byte_end":83515,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":83520,"byte_end":83523,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if attempted to allocate more memory than permited by the limit.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":83528,"byte_end":83610,"line_start":262,"line_end":262,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87098,"byte_end":87102,"line_start":384,"line_end":384,"column_start":12,"column_end":16},"name":"copy","qualname":"<MemoryInstance>::copy","value":"pub fn copy(&Self, usize, usize, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy contents of one memory region to another.","sig":null,"attributes":[{"value":"/ Copy contents of one memory region to another.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":86878,"byte_end":86928,"line_start":377,"line_end":377,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":86933,"byte_end":86936,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to `memmove`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":86941,"byte_end":86982,"line_start":379,"line_end":379,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":86987,"byte_end":86990,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":86995,"byte_end":87007,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87012,"byte_end":87015,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if either of specified regions is out of bounds.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87020,"byte_end":87086,"line_start":383,"line_end":383,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87986,"byte_end":88005,"line_start":412,"line_end":412,"column_start":12,"column_end":31},"name":"copy_nonoverlapping","qualname":"<MemoryInstance>::copy_nonoverlapping","value":"pub fn copy_nonoverlapping(&Self, usize, usize, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy contents of one memory region to another (non-overlapping version).","sig":null,"attributes":[{"value":"/ Copy contents of one memory region to another (non-overlapping version).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87623,"byte_end":87699,"line_start":401,"line_end":401,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87704,"byte_end":87707,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to `memcpy`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87712,"byte_end":87752,"line_start":403,"line_end":403,"column_start":5,"column_end":45}},{"value":"/ but returns Error if source overlaping with destination.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87757,"byte_end":87817,"line_start":404,"line_end":404,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87822,"byte_end":87825,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87830,"byte_end":87842,"line_start":406,"line_end":406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87847,"byte_end":87850,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87855,"byte_end":87876,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87881,"byte_end":87884,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ - either of specified regions is out of bounds,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87889,"byte_end":87940,"line_start":410,"line_end":410,"column_start":5,"column_end":56}},{"value":"/ - these regions overlaps.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":87945,"byte_end":87974,"line_start":411,"line_end":411,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":88955,"byte_end":88963,"line_start":443,"line_end":443,"column_start":12,"column_end":20},"name":"transfer","qualname":"<MemoryInstance>::transfer","value":"pub fn transfer(&MemoryRef, usize, &MemoryRef, usize, usize)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy memory between two (possibly distinct) memory instances.","sig":null,"attributes":[{"value":"/ Copy memory between two (possibly distinct) memory instances.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":88776,"byte_end":88841,"line_start":440,"line_end":440,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":88846,"byte_end":88849,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ If the same memory instance passed as `src` and `dst` then usual `copy` will be used.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":88854,"byte_end":88943,"line_start":442,"line_end":442,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90214,"byte_end":90219,"line_start":480,"line_end":480,"column_start":12,"column_end":17},"name":"clear","qualname":"<MemoryInstance>::clear","value":"pub fn clear(&Self, usize, u8, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill the memory region with the specified value.","sig":null,"attributes":[{"value":"/ Fill the memory region with the specified value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90000,"byte_end":90052,"line_start":473,"line_end":473,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90057,"byte_end":90060,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to `memset`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90065,"byte_end":90105,"line_start":475,"line_end":475,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90110,"byte_end":90113,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90118,"byte_end":90130,"line_start":477,"line_end":477,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90135,"byte_end":90138,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the specified region is out of bounds.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90143,"byte_end":90202,"line_start":479,"line_end":479,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90695,"byte_end":90699,"line_start":496,"line_end":496,"column_start":12,"column_end":16},"name":"zero","qualname":"<MemoryInstance>::zero","value":"pub fn zero(&Self, usize, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill the specified memory region with zeroes.","sig":null,"attributes":[{"value":"/ Fill the specified memory region with zeroes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90537,"byte_end":90586,"line_start":491,"line_end":491,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90591,"byte_end":90594,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90599,"byte_end":90611,"line_start":493,"line_end":493,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90616,"byte_end":90619,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the specified region is out of bounds.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90624,"byte_end":90683,"line_start":495,"line_end":495,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90955,"byte_end":90960,"line_start":503,"line_end":503,"column_start":12,"column_end":17},"name":"erase","qualname":"<MemoryInstance>::erase","value":"pub fn erase(&Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set every byte in the entire linear memory to 0, preserving its size.","sig":null,"attributes":[{"value":"/ Set every byte in the entire linear memory to 0, preserving its size.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90803,"byte_end":90876,"line_start":500,"line_end":500,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90881,"byte_end":90884,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Might be useful for some optimization shenanigans.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":90889,"byte_end":90943,"line_start":502,"line_end":502,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91420,"byte_end":91438,"line_start":519,"line_end":519,"column_start":12,"column_end":30},"name":"with_direct_access","qualname":"<MemoryInstance>::with_direct_access","value":"pub fn with_direct_access<R, F: FnOnce(&[u8]) -> R>(&Self, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Provides direct access to the underlying memory buffer.","sig":null,"attributes":[{"value":"/ Provides direct access to the underlying memory buffer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91116,"byte_end":91175,"line_start":510,"line_end":510,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91180,"byte_end":91183,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91188,"byte_end":91200,"line_start":512,"line_end":512,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91205,"byte_end":91208,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Any call that requires write access to memory (such as [`set`], [`clear`], etc) made within","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91213,"byte_end":91308,"line_start":514,"line_end":514,"column_start":5,"column_end":100}},{"value":"/ the closure will panic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91313,"byte_end":91340,"line_start":515,"line_end":515,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91345,"byte_end":91348,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ [`set`]: #method.get","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91353,"byte_end":91377,"line_start":517,"line_end":517,"column_start":5,"column_end":29}},{"value":"/ [`clear`]: #method.set","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91382,"byte_end":91408,"line_start":518,"line_end":518,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91918,"byte_end":91940,"line_start":533,"line_end":533,"column_start":12,"column_end":34},"name":"with_direct_access_mut","qualname":"<MemoryInstance>::with_direct_access_mut","value":"pub fn with_direct_access_mut<R, F: FnOnce(&mut [u8]) -> R>(&Self, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Provides direct mutable access to the underlying memory buffer.","sig":null,"attributes":[{"value":"/ Provides direct mutable access to the underlying memory buffer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91562,"byte_end":91629,"line_start":524,"line_end":524,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91634,"byte_end":91637,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91642,"byte_end":91654,"line_start":526,"line_end":526,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91659,"byte_end":91662,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Any calls that requires either read or write access to memory (such as [`get`], [`set`], [`copy`], etc) made","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91667,"byte_end":91779,"line_start":528,"line_end":528,"column_start":5,"column_end":117}},{"value":"/ within the closure will panic. Proceed with caution.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91784,"byte_end":91840,"line_start":529,"line_end":529,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91845,"byte_end":91848,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ [`get`]: #method.get","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91853,"byte_end":91877,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/ [`set`]: #method.set","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":91882,"byte_end":91906,"line_start":532,"line_end":532,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2213},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107103,"byte_end":107112,"line_start":41,"line_end":41,"column_start":12,"column_end":21},"name":"ModuleRef","qualname":"::module::ModuleRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a [`ModuleInstance`].","sig":null,"attributes":[{"value":"/ Reference to a [`ModuleInstance`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":106560,"byte_end":106598,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":106599,"byte_end":106602,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":106603,"byte_end":106657,"line_start":29,"line_end":29,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":106658,"byte_end":106661,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ All [`ModuleInstance`] have strong references to it's components (i.e.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":106662,"byte_end":106736,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ globals, memories, funcs, tables), however, this components have","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":106737,"byte_end":106805,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ weak references to it's containing module. This might be a problem","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":106806,"byte_end":106876,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ at execution time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":106877,"byte_end":106899,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":106900,"byte_end":106903,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ So if have to make sure that all modules which might be needed at execution time","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":106904,"byte_end":106988,"line_start":36,"line_end":36,"column_start":1,"column_end":85}},{"value":"/ should be retained.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":106989,"byte_end":107012,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107013,"byte_end":107016,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`ModuleInstance`]: struct.ModuleInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107017,"byte_end":107067,"line_start":39,"line_end":39,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":413},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107509,"byte_end":107513,"line_start":56,"line_end":56,"column_start":5,"column_end":9},"name":"Func","qualname":"::module::ExternVal::Func","value":"ExternVal::Func(FuncRef)","parent":{"krate":0,"index":412},"children":[],"decl_id":null,"docs":" [Function][`FuncInstance`].","sig":null,"attributes":[{"value":"/ [Function][`FuncInstance`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107414,"byte_end":107445,"line_start":53,"line_end":53,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107450,"byte_end":107453,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [`FuncInstance`]: struct.FuncInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107458,"byte_end":107504,"line_start":55,"line_end":55,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":416},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107623,"byte_end":107628,"line_start":60,"line_end":60,"column_start":5,"column_end":10},"name":"Table","qualname":"::module::ExternVal::Table","value":"ExternVal::Table(TableRef)","parent":{"krate":0,"index":412},"children":[],"decl_id":null,"docs":" [Table][`TableInstance`].","sig":null,"attributes":[{"value":"/ [Table][`TableInstance`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107528,"byte_end":107557,"line_start":57,"line_end":57,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107562,"byte_end":107565,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ [`TableInstance`]: struct.TableInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107570,"byte_end":107618,"line_start":59,"line_end":59,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":419},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107743,"byte_end":107749,"line_start":64,"line_end":64,"column_start":5,"column_end":11},"name":"Memory","qualname":"::module::ExternVal::Memory","value":"ExternVal::Memory(MemoryRef)","parent":{"krate":0,"index":412},"children":[],"decl_id":null,"docs":" [Memory][`MemoryInstance`].","sig":null,"attributes":[{"value":"/ [Memory][`MemoryInstance`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107644,"byte_end":107675,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107680,"byte_end":107683,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ [`MemoryInstance`]: struct.MemoryInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107688,"byte_end":107738,"line_start":63,"line_end":63,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":422},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107902,"byte_end":107908,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"Global","qualname":"::module::ExternVal::Global","value":"ExternVal::Global(GlobalRef)","parent":{"krate":0,"index":412},"children":[],"decl_id":null,"docs":" [Global][`GlobalInstance`].","sig":null,"attributes":[{"value":"/ [Global][`GlobalInstance`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107766,"byte_end":107797,"line_start":65,"line_end":65,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107802,"byte_end":107805,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Should be immutable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107810,"byte_end":107834,"line_start":67,"line_end":67,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107839,"byte_end":107842,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [`GlobalInstance`]: struct.GlobalInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107847,"byte_end":107897,"line_start":69,"line_end":69,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":412},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107398,"byte_end":107407,"line_start":52,"line_end":52,"column_start":10,"column_end":19},"name":"ExternVal","qualname":"::module::ExternVal","value":"pub enum ExternVal {\n\n    /// [Function][`FuncInstance`].\n    ///\n    /// [`FuncInstance`]: struct.FuncInstance.html\n    Func(FuncRef),\n\n    /// [Table][`TableInstance`].\n    ///\n    /// [`TableInstance`]: struct.TableInstance.html\n    Table(TableRef),\n\n    /// [Memory][`MemoryInstance`].\n    ///\n    /// [`MemoryInstance`]: struct.MemoryInstance.html\n    Memory(MemoryRef),\n\n    /// [Global][`GlobalInstance`].\n    ///\n    /// Should be immutable.\n    ///\n    /// [`GlobalInstance`]: struct.GlobalInstance.html\n    Global(GlobalRef),\n}","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422}],"decl_id":null,"docs":" An external value is the runtime representation of an entity\n that can be imported or exported.\n","sig":null,"attributes":[{"value":"/ An external value is the runtime representation of an entity","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107286,"byte_end":107350,"line_start":50,"line_end":50,"column_start":1,"column_end":65}},{"value":"/ that can be imported or exported.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107351,"byte_end":107388,"line_start":51,"line_end":51,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":108894,"byte_end":108901,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"as_func","qualname":"<ExternVal>::as_func","value":"pub fn as_func(&Self) -> Option<&FuncRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying function reference if this `ExternVal` contains\n a function, or `None` if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get underlying function reference if this `ExternVal` contains","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":108760,"byte_end":108826,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ a function, or `None` if it is some other kind.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":108831,"byte_end":108882,"line_start":101,"line_end":101,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":109178,"byte_end":109186,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"as_table","qualname":"<ExternVal>::as_table","value":"pub fn as_table(&Self) -> Option<&TableRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying table reference if this `ExternVal` contains\n a table, or `None` if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get underlying table reference if this `ExternVal` contains","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":109050,"byte_end":109113,"line_start":109,"line_end":109,"column_start":5,"column_end":68}},{"value":"/ a table, or `None` if it is some other kind.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":109118,"byte_end":109166,"line_start":110,"line_end":110,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":109469,"byte_end":109478,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"as_memory","qualname":"<ExternVal>::as_memory","value":"pub fn as_memory(&Self) -> Option<&MemoryRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying memory reference if this `ExternVal` contains\n a memory, or `None` if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get underlying memory reference if this `ExternVal` contains","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":109339,"byte_end":109403,"line_start":118,"line_end":118,"column_start":5,"column_end":69}},{"value":"/ a memory, or `None` if it is some other kind.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":109408,"byte_end":109457,"line_start":119,"line_end":119,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":109774,"byte_end":109783,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"as_global","qualname":"<ExternVal>::as_global","value":"pub fn as_global(&Self) -> Option<&GlobalRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying global variable reference if this `ExternVal` contains\n a global, or `None` if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get underlying global variable reference if this `ExternVal` contains","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":109635,"byte_end":109708,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ a global, or `None` if it is some other kind.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":109713,"byte_end":109762,"line_start":128,"line_end":128,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2220},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110903,"byte_end":110917,"line_start":159,"line_end":159,"column_start":12,"column_end":26},"name":"ModuleInstance","qualname":"::module::ModuleInstance","value":"ModuleInstance {  }","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226}],"decl_id":null,"docs":" A module instance is the runtime representation of a [module][`Module`].","sig":null,"attributes":[{"value":"/ A module instance is the runtime representation of a [module][`Module`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":109938,"byte_end":110014,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110015,"byte_end":110018,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ It is created by instantiating a [module][`Module`], and collects runtime representations","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110019,"byte_end":110112,"line_start":139,"line_end":139,"column_start":1,"column_end":94}},{"value":"/ of all entities that are imported or defined by the module, namely:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110113,"byte_end":110184,"line_start":140,"line_end":140,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110185,"byte_end":110188,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ - [functions][`FuncInstance`],","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110189,"byte_end":110223,"line_start":142,"line_end":142,"column_start":1,"column_end":35}},{"value":"/ - [memories][`MemoryInstance`],","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110224,"byte_end":110259,"line_start":143,"line_end":143,"column_start":1,"column_end":36}},{"value":"/ - [tables][`TableInstance`],","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110260,"byte_end":110292,"line_start":144,"line_end":144,"column_start":1,"column_end":33}},{"value":"/ - [globals][`GlobalInstance`],","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110293,"byte_end":110327,"line_start":145,"line_end":145,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110328,"byte_end":110331,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ In order to instantiate a module you need to provide entities to satisfy","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110332,"byte_end":110408,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/ every module's imports (i.e. wasm modules don't have optional imports).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110409,"byte_end":110484,"line_start":148,"line_end":148,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110485,"byte_end":110488,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ After module is instantiated you can start invoking it's exported functions with [`invoke_export`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110489,"byte_end":110592,"line_start":150,"line_end":150,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110593,"byte_end":110596,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [`Module`]: struct.Module.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110597,"byte_end":110631,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"/ [`FuncInstance`]: struct.FuncInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110632,"byte_end":110678,"line_start":153,"line_end":153,"column_start":1,"column_end":47}},{"value":"/ [`MemoryInstance`]: struct.MemoryInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110679,"byte_end":110729,"line_start":154,"line_end":154,"column_start":1,"column_end":51}},{"value":"/ [`TableInstance`]: struct.TableInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110730,"byte_end":110778,"line_start":155,"line_end":155,"column_start":1,"column_end":49}},{"value":"/ [`GlobalInstance`]: struct.GlobalInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110779,"byte_end":110829,"line_start":156,"line_end":156,"column_start":1,"column_end":51}},{"value":"/ [`invoke_export`]: #method.invoke_export","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":110830,"byte_end":110874,"line_start":157,"line_end":157,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":112881,"byte_end":112888,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"globals","qualname":"<ModuleInstance>::globals","value":"pub fn globals<'a>(&Self) -> Ref<, Vec<GlobalRef>>","parent":null,"children":[],"decl_id":null,"docs":" Access all globals. This is a non-standard API so it's unlikely to be\n portable to other engines.\n","sig":null,"attributes":[{"value":"/ Access all globals. This is a non-standard API so it's unlikely to be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":112761,"byte_end":112834,"line_start":220,"line_end":220,"column_start":5,"column_end":78}},{"value":"/ portable to other engines.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":112839,"byte_end":112869,"line_start":221,"line_end":221,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":120966,"byte_end":120981,"line_start":411,"line_end":411,"column_start":12,"column_end":27},"name":"with_externvals","qualname":"<ModuleInstance>::with_externvals","value":"pub fn with_externvals<'a, 'i, I: Iterator<Item =\n                       &'i ExternVal>>(&'a Module, I)\n-> Result<NotStartedModuleRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a module with given [external values][ExternVal] as imports.","sig":null,"attributes":[{"value":"/ Instantiate a module with given [external values][ExternVal] as imports.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":120708,"byte_end":120784,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":120789,"byte_end":120792,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ See [new] for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":120797,"byte_end":120823,"line_start":407,"line_end":407,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":120828,"byte_end":120831,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ [new]: #method.new","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":120836,"byte_end":120858,"line_start":409,"line_end":409,"column_start":5,"column_end":27}},{"value":"/ [ExternVal]: https://webassembly.github.io/spec/core/exec/runtime.html#syntax-externval","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":120863,"byte_end":120954,"line_start":410,"line_end":410,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":126162,"byte_end":126165,"line_start":538,"line_end":538,"column_start":12,"column_end":15},"name":"new","qualname":"<ModuleInstance>::new","value":"pub fn new<'m, I: ImportResolver>(&'m Module, &I)\n-> Result<NotStartedModuleRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a [module][`Module`].","sig":null,"attributes":[{"value":"/ Instantiate a [module][`Module`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":123610,"byte_end":123647,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":123652,"byte_end":123655,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Note that in case of successful instantiation this function returns a reference to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":123660,"byte_end":123746,"line_start":480,"line_end":480,"column_start":5,"column_end":91}},{"value":"/ a module which `start` function is not called.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":123751,"byte_end":123801,"line_start":481,"line_end":481,"column_start":5,"column_end":55}},{"value":"/ In order to complete instantiatiation `start` function must be called. However, there are","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":123806,"byte_end":123899,"line_start":482,"line_end":482,"column_start":5,"column_end":98}},{"value":"/ situations where you might need to do additional setup before calling `start` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":123904,"byte_end":123995,"line_start":483,"line_end":483,"column_start":5,"column_end":96}},{"value":"/ For such sitations this separation might be useful.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124000,"byte_end":124055,"line_start":484,"line_end":484,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124060,"byte_end":124063,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ See [`NotStartedModuleRef`] for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124068,"byte_end":124112,"line_start":486,"line_end":486,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124117,"byte_end":124120,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124125,"byte_end":124137,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124142,"byte_end":124145,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the module cannot be instantiated.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124150,"byte_end":124205,"line_start":490,"line_end":490,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124210,"byte_end":124213,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This can happen if one of the imports can't","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124218,"byte_end":124265,"line_start":492,"line_end":492,"column_start":5,"column_end":52}},{"value":"/ be satisfied (e.g module isn't registered in `imports` [resolver][`ImportResolver`]) or","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124270,"byte_end":124361,"line_start":493,"line_end":493,"column_start":5,"column_end":96}},{"value":"/ there is a mismatch between requested import and provided (e.g. module requested memory with no","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124366,"byte_end":124465,"line_start":494,"line_end":494,"column_start":5,"column_end":104}},{"value":"/ maximum size limit, however, was provided memory with the maximum size limit).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124470,"byte_end":124552,"line_start":495,"line_end":495,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124557,"byte_end":124560,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124565,"byte_end":124579,"line_start":497,"line_end":497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124584,"byte_end":124587,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124592,"byte_end":124603,"line_start":499,"line_end":499,"column_start":5,"column_end":16}},{"value":"/ use wasmi::{ModuleInstance, ImportsBuilder, NopExternals};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124608,"byte_end":124670,"line_start":500,"line_end":500,"column_start":5,"column_end":67}},{"value":"/ # fn func() -> Result<(), ::wasmi::Error> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124675,"byte_end":124722,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/ # let module = wasmi::Module::from_buffer(&[0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]).unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124727,"byte_end":124833,"line_start":502,"line_end":502,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124838,"byte_end":124841,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ // ModuleInstance::new returns instance which `start` function isn't called.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124846,"byte_end":124926,"line_start":504,"line_end":504,"column_start":5,"column_end":85}},{"value":"/ let not_started = ModuleInstance::new(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124931,"byte_end":124973,"line_start":505,"line_end":505,"column_start":5,"column_end":47}},{"value":"/     &module,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124978,"byte_end":124994,"line_start":506,"line_end":506,"column_start":5,"column_end":21}},{"value":"/     &ImportsBuilder::default()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":124999,"byte_end":125033,"line_start":507,"line_end":507,"column_start":5,"column_end":39}},{"value":"/ )?;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125038,"byte_end":125045,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ // Call `start` function if any.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125050,"byte_end":125086,"line_start":509,"line_end":509,"column_start":5,"column_end":41}},{"value":"/ let instance = not_started.run_start(&mut NopExternals)?;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125091,"byte_end":125152,"line_start":510,"line_end":510,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125157,"byte_end":125160,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125165,"byte_end":125177,"line_start":512,"line_end":512,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125182,"byte_end":125189,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125194,"byte_end":125201,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125206,"byte_end":125209,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ If you sure that the module doesn't have `start` function you can use [`assert_no_start`] to get","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125214,"byte_end":125314,"line_start":516,"line_end":516,"column_start":5,"column_end":105}},{"value":"/ instantiated module without calling `start` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125319,"byte_end":125376,"line_start":517,"line_end":517,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125381,"byte_end":125384,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125389,"byte_end":125400,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/ use wasmi::{ModuleInstance, ImportsBuilder, NopExternals};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125405,"byte_end":125467,"line_start":520,"line_end":520,"column_start":5,"column_end":67}},{"value":"/ # fn func() -> Result<(), ::wasmi::Error> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125472,"byte_end":125519,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/ # let module = wasmi::Module::from_buffer(&[0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]).unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125524,"byte_end":125630,"line_start":522,"line_end":522,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125635,"byte_end":125638,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ // This will panic if the module actually contain `start` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125643,"byte_end":125714,"line_start":524,"line_end":524,"column_start":5,"column_end":76}},{"value":"/ let not_started = ModuleInstance::new(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125719,"byte_end":125761,"line_start":525,"line_end":525,"column_start":5,"column_end":47}},{"value":"/     &module,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125766,"byte_end":125782,"line_start":526,"line_end":526,"column_start":5,"column_end":21}},{"value":"/     &ImportsBuilder::default()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125787,"byte_end":125821,"line_start":527,"line_end":527,"column_start":5,"column_end":39}},{"value":"/ )?.assert_no_start();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125826,"byte_end":125851,"line_start":528,"line_end":528,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125856,"byte_end":125859,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125864,"byte_end":125876,"line_start":530,"line_end":530,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125881,"byte_end":125888,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125893,"byte_end":125900,"line_start":532,"line_end":532,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125905,"byte_end":125908,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ [`Module`]: struct.Module.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125913,"byte_end":125947,"line_start":534,"line_end":534,"column_start":5,"column_end":39}},{"value":"/ [`NotStartedModuleRef`]: struct.NotStartedModuleRef.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":125952,"byte_end":126012,"line_start":535,"line_end":535,"column_start":5,"column_end":65}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":126017,"byte_end":126066,"line_start":536,"line_end":536,"column_start":5,"column_end":54}},{"value":"/ [`assert_no_start`]: struct.NotStartedModuleRef.html#method.assert_no_start","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":126071,"byte_end":126150,"line_start":537,"line_end":537,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129995,"byte_end":130008,"line_start":631,"line_end":631,"column_start":12,"column_end":25},"name":"invoke_export","qualname":"<ModuleInstance>::invoke_export","value":"pub fn invoke_export<E: Externals>(&Self, &str, &[RuntimeValue], &mut E)\n-> Result<Option<RuntimeValue>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Invoke exported function by a name.","sig":null,"attributes":[{"value":"/ Invoke exported function by a name.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128346,"byte_end":128385,"line_start":583,"line_end":583,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128390,"byte_end":128393,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ This function finds exported function by a name, and calls it with provided arguments and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128398,"byte_end":128491,"line_start":585,"line_end":585,"column_start":5,"column_end":98}},{"value":"/ external state.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128496,"byte_end":128515,"line_start":586,"line_end":586,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128520,"byte_end":128523,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128528,"byte_end":128540,"line_start":588,"line_end":588,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128545,"byte_end":128548,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128553,"byte_end":128574,"line_start":590,"line_end":590,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128579,"byte_end":128582,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ - there are no export with a given name or this export is not a function,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128587,"byte_end":128664,"line_start":592,"line_end":592,"column_start":5,"column_end":82}},{"value":"/ - given arguments doesn't match to function signature,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128669,"byte_end":128727,"line_start":593,"line_end":593,"column_start":5,"column_end":63}},{"value":"/ - trap occurred at the execution time,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128732,"byte_end":128774,"line_start":594,"line_end":594,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128779,"byte_end":128782,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128787,"byte_end":128801,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128806,"byte_end":128809,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ Invoke a function that takes two numbers and returns sum of them.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128814,"byte_end":128883,"line_start":598,"line_end":598,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128888,"byte_end":128891,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128896,"byte_end":128907,"line_start":600,"line_end":600,"column_start":5,"column_end":16}},{"value":"/ # extern crate wasmi;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128912,"byte_end":128937,"line_start":601,"line_end":601,"column_start":5,"column_end":30}},{"value":"/ # extern crate wabt;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128942,"byte_end":128966,"line_start":602,"line_end":602,"column_start":5,"column_end":29}},{"value":"/ # use wasmi::{ModuleInstance, ImportsBuilder, NopExternals, RuntimeValue};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":128971,"byte_end":129049,"line_start":603,"line_end":603,"column_start":5,"column_end":83}},{"value":"/ # fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129054,"byte_end":129071,"line_start":604,"line_end":604,"column_start":5,"column_end":22}},{"value":"/ # let wasm_binary: Vec<u8> = wabt::wat2wasm(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129076,"byte_end":129124,"line_start":605,"line_end":605,"column_start":5,"column_end":53}},{"value":"/ #   r#\"","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129129,"byte_end":129140,"line_start":606,"line_end":606,"column_start":5,"column_end":16}},{"value":"/ #   (module","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129145,"byte_end":129160,"line_start":607,"line_end":607,"column_start":5,"column_end":20}},{"value":"/ #       (func (export \"add\") (param i32 i32) (result i32)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129165,"byte_end":129226,"line_start":608,"line_end":608,"column_start":5,"column_end":66}},{"value":"/ #           get_local 0","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129231,"byte_end":129258,"line_start":609,"line_end":609,"column_start":5,"column_end":32}},{"value":"/ #           get_local 1","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129263,"byte_end":129290,"line_start":610,"line_end":610,"column_start":5,"column_end":32}},{"value":"/ #           i32.add","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129295,"byte_end":129318,"line_start":611,"line_end":611,"column_start":5,"column_end":28}},{"value":"/ #       )","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129323,"byte_end":129336,"line_start":612,"line_end":612,"column_start":5,"column_end":18}},{"value":"/ #   )","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129341,"byte_end":129350,"line_start":613,"line_end":613,"column_start":5,"column_end":14}},{"value":"/ #   \"#,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129355,"byte_end":129366,"line_start":614,"line_end":614,"column_start":5,"column_end":16}},{"value":"/ # ).expect(\"failed to parse wat\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129371,"byte_end":129409,"line_start":615,"line_end":615,"column_start":5,"column_end":43}},{"value":"/ # let module = wasmi::Module::from_buffer(&wasm_binary).expect(\"failed to load wasm\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129414,"byte_end":129504,"line_start":616,"line_end":616,"column_start":5,"column_end":95}},{"value":"/ # let instance = ModuleInstance::new(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129509,"byte_end":129550,"line_start":617,"line_end":617,"column_start":5,"column_end":46}},{"value":"/ # &module,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129555,"byte_end":129569,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/ # &ImportsBuilder::default()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129574,"byte_end":129606,"line_start":619,"line_end":619,"column_start":5,"column_end":37}},{"value":"/ # ).expect(\"failed to instantiate wasm module\").assert_no_start();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129611,"byte_end":129681,"line_start":620,"line_end":620,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129686,"byte_end":129701,"line_start":621,"line_end":621,"column_start":5,"column_end":20}},{"value":"/     instance.invoke_export(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129706,"byte_end":129737,"line_start":622,"line_end":622,"column_start":5,"column_end":36}},{"value":"/         \"add\",","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129742,"byte_end":129760,"line_start":623,"line_end":623,"column_start":5,"column_end":23}},{"value":"/         &[RuntimeValue::I32(5), RuntimeValue::I32(3)],","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129765,"byte_end":129823,"line_start":624,"line_end":624,"column_start":5,"column_end":63}},{"value":"/         &mut NopExternals,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129828,"byte_end":129858,"line_start":625,"line_end":625,"column_start":5,"column_end":35}},{"value":"/     ).expect(\"failed to execute export\"),","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129863,"byte_end":129908,"line_start":626,"line_end":626,"column_start":5,"column_end":50}},{"value":"/     Some(RuntimeValue::I32(8)),","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129913,"byte_end":129948,"line_start":627,"line_end":627,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129953,"byte_end":129959,"line_start":628,"line_end":628,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129964,"byte_end":129971,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":129976,"byte_end":129983,"line_start":630,"line_end":630,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":130528,"byte_end":130552,"line_start":649,"line_end":649,"column_start":12,"column_end":36},"name":"invoke_export_with_stack","qualname":"<ModuleInstance>::invoke_export_with_stack","value":"pub fn invoke_export_with_stack<E: Externals>(&Self, &str, &[RuntimeValue],\n                                              &mut E, &mut StackRecycler)\n-> Result<Option<RuntimeValue>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Invoke exported function by a name using recycled stacks.","sig":null,"attributes":[{"value":"/ Invoke exported function by a name using recycled stacks.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":130330,"byte_end":130391,"line_start":642,"line_end":642,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":130396,"byte_end":130399,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":130404,"byte_end":130416,"line_start":644,"line_end":644,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":130421,"byte_end":130424,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ Same as [`invoke_export`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":130429,"byte_end":130459,"line_start":646,"line_end":646,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":130464,"byte_end":130467,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ [`invoke_export`]: #method.invoke_export","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":130472,"byte_end":130516,"line_start":648,"line_end":648,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":131582,"byte_end":131596,"line_start":679,"line_end":679,"column_start":12,"column_end":26},"name":"export_by_name","qualname":"<ModuleInstance>::export_by_name","value":"pub fn export_by_name(&Self, &str) -> Option<ExternVal>","parent":null,"children":[],"decl_id":null,"docs":" Find export by a name.","sig":null,"attributes":[{"value":"/ Find export by a name.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":131475,"byte_end":131501,"line_start":676,"line_end":676,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":131506,"byte_end":131509,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there is no export with such name.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":131514,"byte_end":131570,"line_start":678,"line_end":678,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":482},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132753,"byte_end":132772,"line_start":702,"line_end":702,"column_start":12,"column_end":31},"name":"NotStartedModuleRef","qualname":"::module::NotStartedModuleRef","value":"NotStartedModuleRef {  }","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485}],"decl_id":null,"docs":" Mostly instantiated [`ModuleRef`].","sig":null,"attributes":[{"value":"/ Mostly instantiated [`ModuleRef`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":131697,"byte_end":131735,"line_start":684,"line_end":684,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":131736,"byte_end":131739,"line_start":685,"line_end":685,"column_start":1,"column_end":4}},{"value":"/ At this point memory segments and tables are copied. However, `start` function (if any) is not called.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":131740,"byte_end":131846,"line_start":686,"line_end":686,"column_start":1,"column_end":107}},{"value":"/ To get [fully instantiated module instance][`ModuleRef`], [running `start` function][`run_start`] is required.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":131847,"byte_end":131961,"line_start":687,"line_end":687,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":131962,"byte_end":131965,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ You can still access not fully initialized instance by calling [`not_started_instance`],","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":131966,"byte_end":132058,"line_start":689,"line_end":689,"column_start":1,"column_end":93}},{"value":"/ but keep in mind, that this is sort of escape hatch: module really might depend on initialization","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132059,"byte_end":132160,"line_start":690,"line_end":690,"column_start":1,"column_end":102}},{"value":"/ done in `start` function. It's definitely not recommended to call any exports on [`ModuleRef`]","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132161,"byte_end":132259,"line_start":691,"line_end":691,"column_start":1,"column_end":99}},{"value":"/ returned by this function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132260,"byte_end":132290,"line_start":692,"line_end":692,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132291,"byte_end":132294,"line_start":693,"line_end":693,"column_start":1,"column_end":4}},{"value":"/ If you sure, that there is no `start` function (e.g. because you created it without one), you can","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132295,"byte_end":132396,"line_start":694,"line_end":694,"column_start":1,"column_end":102}},{"value":"/ call [`assert_no_start`] which returns [`ModuleRef`] without calling `start` function. However,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132397,"byte_end":132496,"line_start":695,"line_end":695,"column_start":1,"column_end":100}},{"value":"/ it will panic if module contains `start` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132497,"byte_end":132551,"line_start":696,"line_end":696,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132552,"byte_end":132555,"line_start":697,"line_end":697,"column_start":1,"column_end":4}},{"value":"/ [`ModuleRef`]: struct.ModuleRef.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132556,"byte_end":132596,"line_start":698,"line_end":698,"column_start":1,"column_end":41}},{"value":"/ [`run_start`]: #method.run_start","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132597,"byte_end":132633,"line_start":699,"line_end":699,"column_start":1,"column_end":37}},{"value":"/ [`assert_no_start`]: #method.assert_no_start","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132634,"byte_end":132682,"line_start":700,"line_end":700,"column_start":1,"column_end":49}},{"value":"/ [`not_started_instance`]: #method.not_started_instance","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132683,"byte_end":132741,"line_start":701,"line_end":701,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133301,"byte_end":133321,"line_start":717,"line_end":717,"column_start":12,"column_end":32},"name":"not_started_instance","qualname":"<NotStartedModuleRef>::not_started_instance","value":"pub fn not_started_instance(&Self) -> &ModuleRef","parent":null,"children":[],"decl_id":null,"docs":" Returns not fully initialized instance.","sig":null,"attributes":[{"value":"/ Returns not fully initialized instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132877,"byte_end":132920,"line_start":708,"line_end":708,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132925,"byte_end":132928,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ To fully initialize the instance you need to call either [`run_start`] or","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132933,"byte_end":133010,"line_start":710,"line_end":710,"column_start":5,"column_end":82}},{"value":"/ [`assert_no_start`]. See struct documentation for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133015,"byte_end":133077,"line_start":711,"line_end":711,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133082,"byte_end":133085,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ [`NotStartedModuleRef`]: struct.NotStartedModuleRef.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133090,"byte_end":133150,"line_start":713,"line_end":713,"column_start":5,"column_end":65}},{"value":"/ [`ModuleRef`]: struct.ModuleRef.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133155,"byte_end":133195,"line_start":714,"line_end":714,"column_start":5,"column_end":45}},{"value":"/ [`run_start`]: #method.run_start","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133200,"byte_end":133236,"line_start":715,"line_end":715,"column_start":5,"column_end":41}},{"value":"/ [`assert_no_start`]: #method.assert_no_start","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133241,"byte_end":133289,"line_start":716,"line_end":716,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133548,"byte_end":133557,"line_start":726,"line_end":726,"column_start":12,"column_end":21},"name":"run_start","qualname":"<NotStartedModuleRef>::run_start","value":"pub fn run_start<E: Externals>(Self, &mut E) -> Result<ModuleRef, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Executes `start` function (if any) and returns fully instantiated module.","sig":null,"attributes":[{"value":"/ Executes `start` function (if any) and returns fully instantiated module.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133379,"byte_end":133456,"line_start":721,"line_end":721,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133461,"byte_end":133464,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133469,"byte_end":133481,"line_start":723,"line_end":723,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133486,"byte_end":133489,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if start function traps.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133494,"byte_end":133536,"line_start":725,"line_end":725,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":134182,"byte_end":134197,"line_start":742,"line_end":742,"column_start":12,"column_end":27},"name":"assert_no_start","qualname":"<NotStartedModuleRef>::assert_no_start","value":"pub fn assert_no_start(Self) -> ModuleRef","parent":null,"children":[],"decl_id":null,"docs":" Returns fully instantiated module without running `start` function.","sig":null,"attributes":[{"value":"/ Returns fully instantiated module without running `start` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":133991,"byte_end":134062,"line_start":737,"line_end":737,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":134067,"byte_end":134070,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":134075,"byte_end":134087,"line_start":739,"line_end":739,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":134092,"byte_end":134095,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ This function panics if original module contains `start` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":134100,"byte_end":134170,"line_start":741,"line_end":741,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":134533,"byte_end":134542,"line_start":752,"line_end":752,"column_start":12,"column_end":21},"name":"has_start","qualname":"<NotStartedModuleRef>::has_start","value":"pub fn has_start(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether or not the module has a `start` function.","sig":null,"attributes":[{"value":"/ Whether or not the module has a `start` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":134407,"byte_end":134460,"line_start":749,"line_end":749,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":134465,"byte_end":134468,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if it has a `start` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":134473,"byte_end":134521,"line_start":751,"line_end":751,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":496},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/nan_preserving_float.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nan_preserving_float","qualname":"::nan_preserving_float","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/nan_preserving_float.rs","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":3110},{"krate":0,"index":500},{"krate":0,"index":3112},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":2254},{"krate":0,"index":2259},{"krate":0,"index":2257},{"krate":0,"index":2260},{"krate":0,"index":2264},{"krate":0,"index":2268},{"krate":0,"index":2272},{"krate":0,"index":2276},{"krate":0,"index":2229},{"krate":0,"index":2239},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2246},{"krate":0,"index":2249},{"krate":0,"index":2252},{"krate":0,"index":2305},{"krate":0,"index":2310},{"krate":0,"index":2308},{"krate":0,"index":2311},{"krate":0,"index":2315},{"krate":0,"index":2319},{"krate":0,"index":2323},{"krate":0,"index":2327},{"krate":0,"index":2280},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2303},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/nan_preserving_float.rs","byte_start":138419,"byte_end":138442,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2254},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/nan_preserving_float.rs","byte_start":141523,"byte_end":141526,"line_start":118,"line_end":118,"column_start":8,"column_end":11},"name":"F32","qualname":"::nan_preserving_float::F32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2305},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/nan_preserving_float.rs","byte_start":141546,"byte_end":141549,"line_start":119,"line_end":119,"column_start":8,"column_end":11},"name":"F64","qualname":"::nan_preserving_float::F64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":653},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":196627,"byte_end":196652,"line_start":21,"line_end":21,"column_start":11,"column_end":36},"name":"DEFAULT_VALUE_STACK_LIMIT","qualname":"::runner::DEFAULT_VALUE_STACK_LIMIT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of bytes on the value stack.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes on the value stack.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":196569,"byte_end":196616,"line_start":20,"line_end":20,"column_start":1,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":654},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":196734,"byte_end":196758,"line_start":24,"line_end":24,"column_start":11,"column_end":35},"name":"DEFAULT_CALL_STACK_LIMIT","qualname":"::runner::DEFAULT_CALL_STACK_LIMIT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of levels on the call stack.\n","sig":null,"attributes":[{"value":"/ Maximum number of levels on the call stack.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":196676,"byte_end":196723,"line_start":23,"line_end":23,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":899},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":249438,"byte_end":249451,"line_start":1481,"line_end":1481,"column_start":12,"column_end":25},"name":"StackRecycler","qualname":"::runner::StackRecycler","value":"StackRecycler {  }","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"decl_id":null,"docs":" Used to recycle stacks instead of allocating them repeatedly.\n","sig":null,"attributes":[{"value":"/ Used to recycle stacks instead of allocating them repeatedly.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":249361,"byte_end":249426,"line_start":1480,"line_end":1480,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":249803,"byte_end":249814,"line_start":1492,"line_end":1492,"column_start":12,"column_end":23},"name":"with_limits","qualname":"<StackRecycler>::with_limits","value":"pub fn with_limits(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit stacks created by this recycler to\n - `value_stack_limit` bytes for values and\n - `call_stack_limit` levels for calls.\n","sig":null,"attributes":[{"value":"/ Limit stacks created by this recycler to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":249649,"byte_end":249693,"line_start":1489,"line_end":1489,"column_start":5,"column_end":49}},{"value":"/ - `value_stack_limit` bytes for values and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":249698,"byte_end":249744,"line_start":1490,"line_end":1490,"column_start":5,"column_end":51}},{"value":"/ - `call_stack_limit` levels for calls.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":249749,"byte_end":249791,"line_start":1491,"line_end":1491,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":250401,"byte_end":250406,"line_start":1509,"line_end":1509,"column_start":12,"column_end":17},"name":"clear","qualname":"<StackRecycler>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears any values left on the stack to avoid\n leaking them to future export invocations.","sig":null,"attributes":[{"value":"/ Clears any values left on the stack to avoid","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":250042,"byte_end":250090,"line_start":1501,"line_end":1501,"column_start":5,"column_end":53}},{"value":"/ leaking them to future export invocations.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":250095,"byte_end":250141,"line_start":1502,"line_end":1502,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":250146,"byte_end":250149,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ This is a secondary defense to prevent modules from","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":250154,"byte_end":250209,"line_start":1504,"line_end":1504,"column_start":5,"column_end":60}},{"value":"/ exploiting faulty stack handling in the interpreter.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":250214,"byte_end":250270,"line_start":1505,"line_end":1505,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":250275,"byte_end":250278,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ Do note that there are additional channels that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":250283,"byte_end":250334,"line_start":1507,"line_end":1507,"column_start":5,"column_end":56}},{"value":"/ can leak information into an untrusted module.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":250339,"byte_end":250389,"line_start":1508,"line_end":1508,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2540},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252410,"byte_end":252418,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"TableRef","qualname":"::table::TableRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a table (See [`TableInstance`] for details).","sig":null,"attributes":[{"value":"/ Reference to a table (See [`TableInstance`] for details).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252197,"byte_end":252258,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252259,"byte_end":252262,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252263,"byte_end":252317,"line_start":12,"line_end":12,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252318,"byte_end":252321,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`TableInstance`]: struct.TableInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252322,"byte_end":252370,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252371,"byte_end":252374,"line_start":15,"line_end":15,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":931},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253139,"byte_end":253152,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"TableInstance","qualname":"::table::TableInstance","value":"TableInstance {  }","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933}],"decl_id":null,"docs":" Runtime representation of a table.","sig":null,"attributes":[{"value":"/ Runtime representation of a table.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252577,"byte_end":252615,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252616,"byte_end":252619,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ A table is a array of untyped functions. It allows wasm code to call functions","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252620,"byte_end":252702,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ indirectly through a dynamic index into a table. For example, this allows emulating function","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252703,"byte_end":252799,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"/ pointers by way of table indices.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252800,"byte_end":252837,"line_start":30,"line_end":30,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252838,"byte_end":252841,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Table is created with an initial size but can be grown dynamically via [`grow`] method.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252842,"byte_end":252933,"line_start":32,"line_end":32,"column_start":1,"column_end":92}},{"value":"/ Growth can be limited by an optional maximum size.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252934,"byte_end":252988,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252989,"byte_end":252992,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ In future, a table might be extended to be able to hold not only functions but different types.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252993,"byte_end":253092,"line_start":35,"line_end":35,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253093,"byte_end":253096,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`grow`]: #method.grow","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253097,"byte_end":253123,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253124,"byte_end":253127,"line_start":38,"line_end":38,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253929,"byte_end":253934,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"alloc","qualname":"<TableInstance>::alloc","value":"pub fn alloc(u32, Option<u32>) -> Result<TableRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Allocate a table instance.","sig":null,"attributes":[{"value":"/ Allocate a table instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253577,"byte_end":253607,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253612,"byte_end":253615,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The table allocated with initial size, specified by `initial_size`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253620,"byte_end":253691,"line_start":58,"line_end":58,"column_start":5,"column_end":76}},{"value":"/ Maximum size can be specified by `maximum_size`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253696,"byte_end":253748,"line_start":59,"line_end":59,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253753,"byte_end":253756,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ All table elements are allocated uninitialized.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253761,"byte_end":253812,"line_start":61,"line_end":61,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253817,"byte_end":253820,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253825,"byte_end":253837,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253842,"byte_end":253845,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if `initial_size` is greater than `maximum_size`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253850,"byte_end":253917,"line_start":65,"line_end":65,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":254565,"byte_end":254577,"line_start":85,"line_end":85,"column_start":12,"column_end":24},"name":"initial_size","qualname":"<TableInstance>::initial_size","value":"pub fn initial_size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns size this table was created with.\n","sig":null,"attributes":[{"value":"/ Returns size this table was created with.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":254508,"byte_end":254553,"line_start":84,"line_end":84,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":254700,"byte_end":254712,"line_start":90,"line_end":90,"column_start":12,"column_end":24},"name":"maximum_size","qualname":"<TableInstance>::maximum_size","value":"pub fn maximum_size(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum size `TableInstance` can grow to.\n","sig":null,"attributes":[{"value":"/ Returns maximum size `TableInstance` can grow to.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":254635,"byte_end":254688,"line_start":89,"line_end":89,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":254828,"byte_end":254840,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"current_size","qualname":"<TableInstance>::current_size","value":"pub fn current_size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns current size of the table.\n","sig":null,"attributes":[{"value":"/ Returns current size of the table.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":254778,"byte_end":254816,"line_start":94,"line_end":94,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":255100,"byte_end":255104,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"grow","qualname":"<TableInstance>::grow","value":"pub fn grow(&Self, u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Increases the size of the table by given number of elements.","sig":null,"attributes":[{"value":"/ Increases the size of the table by given number of elements.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":254910,"byte_end":254974,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":254979,"byte_end":254982,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":254987,"byte_end":254999,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":255004,"byte_end":255007,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if tried to allocate more elements than permited by limit.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":255012,"byte_end":255088,"line_start":103,"line_end":103,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":255927,"byte_end":255930,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"get","qualname":"<TableInstance>::get","value":"pub fn get(&Self, u32) -> Result<Option<FuncRef>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the specific value in the table\n","sig":null,"attributes":[{"value":"/ Get the specific value in the table","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":255876,"byte_end":255915,"line_start":128,"line_end":128,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":256430,"byte_end":256433,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"set","qualname":"<TableInstance>::set","value":"pub fn set(&Self, u32, Option<FuncRef>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the table element to the specified function.\n","sig":null,"attributes":[{"value":"/ Set the table element to the specified function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":256366,"byte_end":256418,"line_start":141,"line_end":141,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2547},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257416,"byte_end":257425,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Signature","qualname":"::types::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":2548},{"krate":0,"index":2549}],"decl_id":null,"docs":" Signature of a [function].","sig":null,"attributes":[{"value":"/ Signature of a [function].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257040,"byte_end":257070,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257071,"byte_end":257074,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Signature of a function consists of zero or more parameter [types][type] and zero or one return [type].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257075,"byte_end":257182,"line_start":9,"line_end":9,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257183,"byte_end":257186,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Two signatures are considered equal if they have equal list of parameters and equal return types.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257187,"byte_end":257288,"line_start":11,"line_end":11,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257289,"byte_end":257292,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [type]: enum.ValueType.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257293,"byte_end":257324,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/ [function]: struct.FuncInstance.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257325,"byte_end":257365,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":258067,"byte_end":258070,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Signature>::new","value":"pub fn new<C: Into<Cow>>(C, Option<ValueType>) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Creates new signature with givens\n parameter types and optional return type.","sig":null,"attributes":[{"value":"/ Creates new signature with givens","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257527,"byte_end":257564,"line_start":22,"line_end":22,"column_start":5,"column_end":42}},{"value":"/ parameter types and optional return type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257569,"byte_end":257614,"line_start":23,"line_end":23,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257619,"byte_end":257622,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257627,"byte_end":257641,"line_start":25,"line_end":25,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257646,"byte_end":257649,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257654,"byte_end":257665,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/ use wasmi::{Signature, ValueType};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257670,"byte_end":257708,"line_start":28,"line_end":28,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257713,"byte_end":257716,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ // s1: (i32) -> ()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257721,"byte_end":257743,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ let s1 = Signature::new(&[ValueType::I32][..], None);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257748,"byte_end":257805,"line_start":31,"line_end":31,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257810,"byte_end":257813,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ // s2: () -> i32","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257818,"byte_end":257838,"line_start":33,"line_end":33,"column_start":5,"column_end":25}},{"value":"/ let s2 = Signature::new(&[][..], Some(ValueType::I32));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257843,"byte_end":257902,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257907,"byte_end":257910,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ // s3: (I64) -> ()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257915,"byte_end":257937,"line_start":36,"line_end":36,"column_start":5,"column_end":27}},{"value":"/ let dynamic_params = vec![ValueType::I64];","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257942,"byte_end":257988,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/ let s3 = Signature::new(dynamic_params, None);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257993,"byte_end":258043,"line_start":38,"line_end":38,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":258048,"byte_end":258055,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":258360,"byte_end":258366,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"params","qualname":"<Signature>::params","value":"pub fn params(&Self) -> &[ValueType]","parent":null,"children":[],"decl_id":null,"docs":" Returns parameter types of this signature.\n","sig":null,"attributes":[{"value":"/ Returns parameter types of this signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":258302,"byte_end":258348,"line_start":50,"line_end":50,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":258487,"byte_end":258498,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"return_type","qualname":"<Signature>::return_type","value":"pub fn return_type(&Self) -> Option<ValueType>","parent":null,"children":[],"decl_id":null,"docs":" Returns return type of this signature.\n","sig":null,"attributes":[{"value":"/ Returns return type of this signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":258433,"byte_end":258475,"line_start":55,"line_end":55,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2562},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259159,"byte_end":259162,"line_start":81,"line_end":81,"column_start":5,"column_end":8},"name":"I32","qualname":"::types::ValueType::I32","value":"ValueType::I32","parent":{"krate":0,"index":2561},"children":[],"decl_id":null,"docs":" 32-bit signed or unsigned integer.\n","sig":null,"attributes":[{"value":"/ 32-bit signed or unsigned integer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259116,"byte_end":259154,"line_start":80,"line_end":80,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2564},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259211,"byte_end":259214,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"name":"I64","qualname":"::types::ValueType::I64","value":"ValueType::I64","parent":{"krate":0,"index":2561},"children":[],"decl_id":null,"docs":" 64-bit signed or unsigned integer.\n","sig":null,"attributes":[{"value":"/ 64-bit signed or unsigned integer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259168,"byte_end":259206,"line_start":82,"line_end":82,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2566},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259272,"byte_end":259275,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"F32","qualname":"::types::ValueType::F32","value":"ValueType::F32","parent":{"krate":0,"index":2561},"children":[],"decl_id":null,"docs":" 32-bit IEEE 754-2008 floating point number.\n","sig":null,"attributes":[{"value":"/ 32-bit IEEE 754-2008 floating point number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259220,"byte_end":259267,"line_start":84,"line_end":84,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2568},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259333,"byte_end":259336,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"F64","qualname":"::types::ValueType::F64","value":"ValueType::F64","parent":{"krate":0,"index":2561},"children":[],"decl_id":null,"docs":" 64-bit IEEE 754-2008 floating point number.\n","sig":null,"attributes":[{"value":"/ 64-bit IEEE 754-2008 floating point number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259281,"byte_end":259328,"line_start":86,"line_end":86,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2561},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259100,"byte_end":259109,"line_start":79,"line_end":79,"column_start":10,"column_end":19},"name":"ValueType","qualname":"::types::ValueType","value":"pub enum ValueType {\n\n    /// 32-bit signed or unsigned integer.\n    I32,\n\n    /// 64-bit signed or unsigned integer.\n    I64,\n\n    /// 32-bit IEEE 754-2008 floating point number.\n    F32,\n\n    /// 64-bit IEEE 754-2008 floating point number.\n    F64,\n}","parent":null,"children":[{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":2568}],"decl_id":null,"docs":" Type of a value.","sig":null,"attributes":[{"value":"/ Type of a value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":258934,"byte_end":258954,"line_start":73,"line_end":73,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":258955,"byte_end":258958,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ See [`RuntimeValue`] for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":258959,"byte_end":258996,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":258997,"byte_end":259000,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [`RuntimeValue`]: enum.RuntimeValue.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259001,"byte_end":259045,"line_start":77,"line_end":77,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":967},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260149,"byte_end":260165,"line_start":116,"line_end":116,"column_start":12,"column_end":28},"name":"GlobalDescriptor","qualname":"::types::GlobalDescriptor","value":"GlobalDescriptor {  }","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969}],"decl_id":null,"docs":" Description of a global variable.","sig":null,"attributes":[{"value":"/ Description of a global variable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259943,"byte_end":259980,"line_start":110,"line_end":110,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259981,"byte_end":259984,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Primarly used to describe imports of global variables.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259985,"byte_end":260043,"line_start":112,"line_end":112,"column_start":1,"column_end":59}},{"value":"/ See [`ImportResolver`] for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260044,"byte_end":260083,"line_start":113,"line_end":113,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260084,"byte_end":260087,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260088,"byte_end":260137,"line_start":115,"line_end":115,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260607,"byte_end":260617,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"value_type","qualname":"<GlobalDescriptor>::value_type","value":"pub fn value_type(&Self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Returns [`ValueType`] of the requested global.","sig":null,"attributes":[{"value":"/ Returns [`ValueType`] of the requested global.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260494,"byte_end":260544,"line_start":129,"line_end":129,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260549,"byte_end":260552,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`ValueType`]: enum.ValueType.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260557,"byte_end":260595,"line_start":131,"line_end":131,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260736,"byte_end":260746,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"is_mutable","qualname":"<GlobalDescriptor>::is_mutable","value":"pub fn is_mutable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the requested global mutable.\n","sig":null,"attributes":[{"value":"/ Returns whether the requested global mutable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260675,"byte_end":260724,"line_start":136,"line_end":136,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":974},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260980,"byte_end":260995,"line_start":148,"line_end":148,"column_start":12,"column_end":27},"name":"TableDescriptor","qualname":"::types::TableDescriptor","value":"TableDescriptor {  }","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976}],"decl_id":null,"docs":" Description of a table.","sig":null,"attributes":[{"value":"/ Description of a table.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260794,"byte_end":260821,"line_start":142,"line_end":142,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260822,"byte_end":260825,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Primarly used to describe imports of tables.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260826,"byte_end":260874,"line_start":144,"line_end":144,"column_start":1,"column_end":49}},{"value":"/ See [`ImportResolver`] for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260875,"byte_end":260914,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260915,"byte_end":260918,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260919,"byte_end":260968,"line_start":147,"line_end":147,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261356,"byte_end":261363,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"initial","qualname":"<TableDescriptor>::initial","value":"pub fn initial(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns initial size of the requested table.\n","sig":null,"attributes":[{"value":"/ Returns initial size of the requested table.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261296,"byte_end":261344,"line_start":161,"line_end":161,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261472,"byte_end":261479,"line_start":167,"line_end":167,"column_start":12,"column_end":19},"name":"maximum","qualname":"<TableDescriptor>::maximum","value":"pub fn maximum(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum size of the requested table.\n","sig":null,"attributes":[{"value":"/ Returns maximum size of the requested table.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261412,"byte_end":261460,"line_start":166,"line_end":166,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":981},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261737,"byte_end":261753,"line_start":178,"line_end":178,"column_start":12,"column_end":28},"name":"MemoryDescriptor","qualname":"::types::MemoryDescriptor","value":"MemoryDescriptor {  }","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983}],"decl_id":null,"docs":" Description of a linear memory.","sig":null,"attributes":[{"value":"/ Description of a linear memory.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261534,"byte_end":261569,"line_start":172,"line_end":172,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261570,"byte_end":261573,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Primarly used to describe imports of linear memories.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261574,"byte_end":261631,"line_start":174,"line_end":174,"column_start":1,"column_end":58}},{"value":"/ See [`ImportResolver`] for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261632,"byte_end":261671,"line_start":175,"line_end":175,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261672,"byte_end":261675,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261676,"byte_end":261725,"line_start":177,"line_end":177,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":262133,"byte_end":262140,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"initial","qualname":"<MemoryDescriptor>::initial","value":"pub fn initial(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns initial size (in pages) of the requested memory.\n","sig":null,"attributes":[{"value":"/ Returns initial size (in pages) of the requested memory.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":262061,"byte_end":262121,"line_start":191,"line_end":191,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":262261,"byte_end":262268,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"maximum","qualname":"<MemoryDescriptor>::maximum","value":"pub fn maximum(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum size (in pages) of the requested memory.\n","sig":null,"attributes":[{"value":"/ Returns maximum size (in pages) of the requested memory.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":262189,"byte_end":262249,"line_start":196,"line_end":196,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2582},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":262573,"byte_end":262598,"line_start":10,"line_end":10,"column_start":5,"column_end":30},"name":"InvalidLittleEndianBuffer","qualname":"::value::Error::InvalidLittleEndianBuffer","value":"Error::InvalidLittleEndianBuffer","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":" The buffer is too short for the type being deserialized\n","sig":null,"attributes":[{"value":"/ The buffer is too short for the type being deserialized","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":262509,"byte_end":262568,"line_start":9,"line_end":9,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":2581},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":262497,"byte_end":262502,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Error","qualname":"::value::Error","value":"pub enum Error {\n\n    /// The buffer is too short for the type being deserialized\n    InvalidLittleEndianBuffer,\n}","parent":null,"children":[{"krate":0,"index":2582}],"decl_id":null,"docs":" Error for `LittleEndianConvert`\n","sig":null,"attributes":[{"value":"/ Error for `LittleEndianConvert`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":262435,"byte_end":262470,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2587},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263130,"byte_end":263133,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"I32","qualname":"::value::RuntimeValue::I32","value":"RuntimeValue::I32(i32)","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Value of 32-bit signed or unsigned integer.\n","sig":null,"attributes":[{"value":"/ Value of 32-bit signed or unsigned integer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263078,"byte_end":263125,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2590},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263196,"byte_end":263199,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"I64","qualname":"::value::RuntimeValue::I64","value":"RuntimeValue::I64(i64)","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Value of 64-bit signed or unsigned integer.\n","sig":null,"attributes":[{"value":"/ Value of 64-bit signed or unsigned integer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263144,"byte_end":263191,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2593},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263271,"byte_end":263274,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"F32","qualname":"::value::RuntimeValue::F32","value":"RuntimeValue::F32(F32)","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Value of 32-bit IEEE 754-2008 floating point number.\n","sig":null,"attributes":[{"value":"/ Value of 32-bit IEEE 754-2008 floating point number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263210,"byte_end":263266,"line_start":26,"line_end":26,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2596},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263346,"byte_end":263349,"line_start":29,"line_end":29,"column_start":5,"column_end":8},"name":"F64","qualname":"::value::RuntimeValue::F64","value":"RuntimeValue::F64(F64)","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Value of 64-bit IEEE 754-2008 floating point number.\n","sig":null,"attributes":[{"value":"/ Value of 64-bit IEEE 754-2008 floating point number.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263285,"byte_end":263341,"line_start":28,"line_end":28,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":2586},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263059,"byte_end":263071,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"RuntimeValue","qualname":"::value::RuntimeValue","value":"pub enum RuntimeValue {\n\n    /// Value of 32-bit signed or unsigned integer.\n    I32(i32),\n\n    /// Value of 64-bit signed or unsigned integer.\n    I64(i64),\n\n    /// Value of 32-bit IEEE 754-2008 floating point number.\n    F32(F32),\n\n    /// Value of 64-bit IEEE 754-2008 floating point number.\n    F64(F64),\n}","parent":null,"children":[{"krate":0,"index":2587},{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":2596}],"decl_id":null,"docs":" Runtime representation of a value.","sig":null,"attributes":[{"value":"/ Runtime representation of a value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":262603,"byte_end":262641,"line_start":13,"line_end":13,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":262642,"byte_end":262645,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Wasm code manipulate values of the four basic value types:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":262646,"byte_end":262708,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ integers and floating-point (IEEE 754-2008) data of 32 or 64 bit width each, respectively.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":262709,"byte_end":262803,"line_start":16,"line_end":16,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":262804,"byte_end":262807,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ There is no distinction between signed and unsigned integer types. Instead, integers are","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":262808,"byte_end":262900,"line_start":18,"line_end":18,"column_start":1,"column_end":93}},{"value":"/ interpreted by respective operations as either unsigned or signed in two’s complement representation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":262901,"byte_end":263008,"line_start":19,"line_end":19,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":1000},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263778,"byte_end":263794,"line_start":41,"line_end":41,"column_start":11,"column_end":27},"name":"FromRuntimeValue","qualname":"::value::FromRuntimeValue","value":"FromRuntimeValue","parent":null,"children":[{"krate":0,"index":1001}],"decl_id":null,"docs":" Trait for creating value from a [`RuntimeValue`].","sig":null,"attributes":[{"value":"/ Trait for creating value from a [`RuntimeValue`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263359,"byte_end":263412,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263413,"byte_end":263416,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Typically each implementation can create a value from the specific type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263417,"byte_end":263493,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ For example, values of type `bool` or `u32` are both represented by [`I32`] and `f64` values are represented by","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263494,"byte_end":263609,"line_start":35,"line_end":35,"column_start":1,"column_end":116}},{"value":"/ [`F64`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263610,"byte_end":263622,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263623,"byte_end":263626,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`I32`]: enum.RuntimeValue.html#variant.I32","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263627,"byte_end":263674,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ [`F64`]: enum.RuntimeValue.html#variant.F64","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263675,"byte_end":263722,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`RuntimeValue`]: enum.RuntimeValue.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263723,"byte_end":263767,"line_start":40,"line_end":40,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":264082,"byte_end":264100,"line_start":51,"line_end":51,"column_start":8,"column_end":26},"name":"from_runtime_value","qualname":"::value::FromRuntimeValue::from_runtime_value","value":"pub fn from_runtime_value(RuntimeValue) -> Option<Self>","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":" Create a value of type `Self` from a given [`RuntimeValue`].","sig":null,"attributes":[{"value":"/ Create a value of type `Self` from a given [`RuntimeValue`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263824,"byte_end":263888,"line_start":45,"line_end":45,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263893,"byte_end":263896,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the [`RuntimeValue`] is of type different than","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263901,"byte_end":263969,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ expected by the conversion in question.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":263974,"byte_end":264017,"line_start":48,"line_end":48,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":264022,"byte_end":264025,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ [`RuntimeValue`]: enum.RuntimeValue.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":264030,"byte_end":264074,"line_start":50,"line_end":50,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1015},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":264988,"byte_end":265007,"line_start":79,"line_end":79,"column_start":11,"column_end":30},"name":"LittleEndianConvert","qualname":"::value::LittleEndianConvert","value":"LittleEndianConvert","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017}],"decl_id":null,"docs":" Convert from and to little endian.\n","sig":null,"attributes":[{"value":"/ Convert from and to little endian.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":264939,"byte_end":264977,"line_start":78,"line_end":78,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":265081,"byte_end":265099,"line_start":84,"line_end":84,"column_start":8,"column_end":26},"name":"into_little_endian","qualname":"::value::LittleEndianConvert::into_little_endian","value":"pub fn into_little_endian(Self, &mut [u8])","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Convert to little endian buffer.\n","sig":null,"attributes":[{"value":"/ Convert to little endian buffer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":265037,"byte_end":265073,"line_start":83,"line_end":83,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":265176,"byte_end":265194,"line_start":86,"line_end":86,"column_start":8,"column_end":26},"name":"from_little_endian","qualname":"::value::LittleEndianConvert::from_little_endian","value":"pub fn from_little_endian(&[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Convert from little endian buffer.\n","sig":null,"attributes":[{"value":"/ Convert from little endian buffer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":265130,"byte_end":265168,"line_start":85,"line_end":85,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":267156,"byte_end":267163,"line_start":143,"line_end":143,"column_start":12,"column_end":19},"name":"default","qualname":"<RuntimeValue>::default","value":"pub fn default(ValueType) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new default value of given type.\n","sig":null,"attributes":[{"value":"/ Creates new default value of given type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":267100,"byte_end":267144,"line_start":142,"line_end":142,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":267541,"byte_end":267551,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"decode_f32","qualname":"<RuntimeValue>::decode_f32","value":"pub fn decode_f32(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new value by interpreting passed u32 as f32.\n","sig":null,"attributes":[{"value":"/ Creates new value by interpreting passed u32 as f32.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":267473,"byte_end":267529,"line_start":152,"line_end":152,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":267698,"byte_end":267708,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"decode_f64","qualname":"<RuntimeValue>::decode_f64","value":"pub fn decode_f64(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new value by interpreting passed u64 as f64.\n","sig":null,"attributes":[{"value":"/ Creates new value by interpreting passed u64 as f64.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":267630,"byte_end":267686,"line_start":157,"line_end":157,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":267836,"byte_end":267846,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"value_type","qualname":"<RuntimeValue>::value_type","value":"pub fn value_type(&Self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Get variable type for this value.\n","sig":null,"attributes":[{"value":"/ Get variable type for this value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":267787,"byte_end":267824,"line_start":162,"line_end":162,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268387,"byte_end":268395,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"try_into","qualname":"<RuntimeValue>::try_into","value":"pub fn try_into<T: FromRuntimeValue>(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `T` if this particular [`RuntimeValue`] contains\n appropriate type.","sig":null,"attributes":[{"value":"/ Returns `T` if this particular [`RuntimeValue`] contains","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268120,"byte_end":268180,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/ appropriate type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268185,"byte_end":268206,"line_start":173,"line_end":173,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268211,"byte_end":268214,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ See [`FromRuntimeValue`] for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268219,"byte_end":268260,"line_start":175,"line_end":175,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268265,"byte_end":268268,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ [`FromRuntimeValue`]: trait.FromRuntimeValue.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268273,"byte_end":268326,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/ [`RuntimeValue`]: enum.RuntimeValue.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268331,"byte_end":268375,"line_start":178,"line_end":178,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":1212},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12668,"byte_end":12680,"line_start":415,"line_end":415,"column_start":9,"column_end":21},"name":"memory_units","qualname":"::memory_units","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":3382},{"krate":0,"index":1218}],"decl_id":null,"docs":" WebAssembly-specific sizes and units.\n","sig":null,"attributes":[{"value":"/ WebAssembly-specific sizes and units.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12618,"byte_end":12659,"line_start":414,"line_end":414,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1219},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12863,"byte_end":12869,"line_start":421,"line_end":421,"column_start":12,"column_end":18},"name":"Module","qualname":"::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1221}],"decl_id":null,"docs":" Deserialized module prepared for instantiation.\n","sig":null,"attributes":[{"value":"/ Deserialized module prepared for instantiation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12800,"byte_end":12851,"line_start":420,"line_end":420,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13951,"byte_end":13974,"line_start":459,"line_end":459,"column_start":12,"column_end":35},"name":"from_parity_wasm_module","qualname":"<Module>::from_parity_wasm_module","value":"pub fn from_parity_wasm_module(parity_wasm::elements::Module)\n-> Result<Module, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create `Module` from `parity_wasm::elements::Module`.","sig":null,"attributes":[{"value":"/ Create `Module` from `parity_wasm::elements::Module`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12974,"byte_end":13031,"line_start":427,"line_end":427,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13036,"byte_end":13039,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This function will load, validate and prepare a `parity_wasm`'s `Module`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13044,"byte_end":13121,"line_start":429,"line_end":429,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13126,"byte_end":13129,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13134,"byte_end":13146,"line_start":431,"line_end":431,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13151,"byte_end":13154,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if provided `Module` is not valid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13159,"byte_end":13211,"line_start":433,"line_end":433,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13216,"byte_end":13219,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13224,"byte_end":13238,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13243,"byte_end":13246,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13251,"byte_end":13262,"line_start":437,"line_end":437,"column_start":5,"column_end":16}},{"value":"/ extern crate parity_wasm;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13267,"byte_end":13296,"line_start":438,"line_end":438,"column_start":5,"column_end":34}},{"value":"/ extern crate wasmi;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13301,"byte_end":13324,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13329,"byte_end":13332,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ use parity_wasm::builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13337,"byte_end":13366,"line_start":441,"line_end":441,"column_start":5,"column_end":34}},{"value":"/ use parity_wasm::elements;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13371,"byte_end":13401,"line_start":442,"line_end":442,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13406,"byte_end":13409,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13414,"byte_end":13429,"line_start":444,"line_end":444,"column_start":5,"column_end":20}},{"value":"/     let parity_module =","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13434,"byte_end":13461,"line_start":445,"line_end":445,"column_start":5,"column_end":32}},{"value":"/         builder::module()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13466,"byte_end":13495,"line_start":446,"line_end":446,"column_start":5,"column_end":34}},{"value":"/             .function()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13500,"byte_end":13527,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/                 .signature().with_param(elements::ValueType::I32).build()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13532,"byte_end":13609,"line_start":448,"line_end":448,"column_start":5,"column_end":82}},{"value":"/                 .body().build()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13614,"byte_end":13649,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/             .build()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13654,"byte_end":13678,"line_start":450,"line_end":450,"column_start":5,"column_end":29}},{"value":"/         .build();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13683,"byte_end":13704,"line_start":451,"line_end":451,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13709,"byte_end":13712,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     let module = wasmi::Module::from_parity_wasm_module(parity_module)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13717,"byte_end":13791,"line_start":453,"line_end":453,"column_start":5,"column_end":79}},{"value":"/         .expect(\"parity-wasm builder generated invalid module!\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13796,"byte_end":13865,"line_start":454,"line_end":454,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13870,"byte_end":13873,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/     // Instantiate `module`, etc...","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13878,"byte_end":13917,"line_start":456,"line_end":456,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13922,"byte_end":13927,"line_start":457,"line_end":457,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":13932,"byte_end":13939,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16050,"byte_end":16069,"line_start":521,"line_end":521,"column_start":12,"column_end":31},"name":"deny_floating_point","qualname":"<Module>::deny_floating_point","value":"pub fn deny_floating_point(&Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fail if the module contains any floating-point operations","sig":null,"attributes":[{"value":"/ Fail if the module contains any floating-point operations","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14186,"byte_end":14247,"line_start":465,"line_end":465,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14252,"byte_end":14255,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14260,"byte_end":14272,"line_start":467,"line_end":467,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14277,"byte_end":14280,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if provided `Module` is not valid.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14285,"byte_end":14337,"line_start":469,"line_end":469,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14342,"byte_end":14345,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14350,"byte_end":14364,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14369,"byte_end":14372,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14377,"byte_end":14388,"line_start":473,"line_end":473,"column_start":5,"column_end":16}},{"value":"/ # extern crate wasmi;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14393,"byte_end":14418,"line_start":474,"line_end":474,"column_start":5,"column_end":30}},{"value":"/ # extern crate wabt;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14423,"byte_end":14447,"line_start":475,"line_end":475,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14452,"byte_end":14455,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let wasm_binary: Vec<u8> =","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14460,"byte_end":14490,"line_start":477,"line_end":477,"column_start":5,"column_end":35}},{"value":"/     wabt::wat2wasm(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14495,"byte_end":14518,"line_start":478,"line_end":478,"column_start":5,"column_end":28}},{"value":"/         r#\"","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14523,"byte_end":14538,"line_start":479,"line_end":479,"column_start":5,"column_end":20}},{"value":"/         (module","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14543,"byte_end":14562,"line_start":480,"line_end":480,"column_start":5,"column_end":24}},{"value":"/          (func $add (param $lhs i32) (param $rhs i32) (result i32)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14567,"byte_end":14637,"line_start":481,"line_end":481,"column_start":5,"column_end":75}},{"value":"/                get_local $lhs","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14642,"byte_end":14675,"line_start":482,"line_end":482,"column_start":5,"column_end":38}},{"value":"/                get_local $rhs","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14680,"byte_end":14713,"line_start":483,"line_end":483,"column_start":5,"column_end":38}},{"value":"/                i32.add))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14718,"byte_end":14746,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/         \"#,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14751,"byte_end":14766,"line_start":485,"line_end":485,"column_start":5,"column_end":20}},{"value":"/     )","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14771,"byte_end":14780,"line_start":486,"line_end":486,"column_start":5,"column_end":14}},{"value":"/     .expect(\"failed to parse wat\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14785,"byte_end":14824,"line_start":487,"line_end":487,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14829,"byte_end":14832,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ // Load wasm binary and prepare it for instantiation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14837,"byte_end":14894,"line_start":489,"line_end":489,"column_start":5,"column_end":62}},{"value":"/ let module = wasmi::Module::from_buffer(&wasm_binary).expect(\"Parsing failed\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14899,"byte_end":14982,"line_start":490,"line_end":490,"column_start":5,"column_end":88}},{"value":"/ assert!(module.deny_floating_point().is_ok());","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":14987,"byte_end":15037,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15042,"byte_end":15045,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ let wasm_binary: Vec<u8> =","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15050,"byte_end":15080,"line_start":493,"line_end":493,"column_start":5,"column_end":35}},{"value":"/     wabt::wat2wasm(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15085,"byte_end":15108,"line_start":494,"line_end":494,"column_start":5,"column_end":28}},{"value":"/         r#\"","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15113,"byte_end":15128,"line_start":495,"line_end":495,"column_start":5,"column_end":20}},{"value":"/         (module","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15133,"byte_end":15152,"line_start":496,"line_end":496,"column_start":5,"column_end":24}},{"value":"/          (func $add (param $lhs f32) (param $rhs f32) (result f32)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15157,"byte_end":15227,"line_start":497,"line_end":497,"column_start":5,"column_end":75}},{"value":"/                get_local $lhs","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15232,"byte_end":15265,"line_start":498,"line_end":498,"column_start":5,"column_end":38}},{"value":"/                get_local $rhs","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15270,"byte_end":15303,"line_start":499,"line_end":499,"column_start":5,"column_end":38}},{"value":"/                f32.add))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15308,"byte_end":15336,"line_start":500,"line_end":500,"column_start":5,"column_end":33}},{"value":"/         \"#,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15341,"byte_end":15356,"line_start":501,"line_end":501,"column_start":5,"column_end":20}},{"value":"/     )","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15361,"byte_end":15370,"line_start":502,"line_end":502,"column_start":5,"column_end":14}},{"value":"/     .expect(\"failed to parse wat\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15375,"byte_end":15414,"line_start":503,"line_end":503,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15419,"byte_end":15422,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ let module = wasmi::Module::from_buffer(&wasm_binary).expect(\"Parsing failed\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15427,"byte_end":15510,"line_start":505,"line_end":505,"column_start":5,"column_end":88}},{"value":"/ assert!(module.deny_floating_point().is_err());","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15515,"byte_end":15566,"line_start":506,"line_end":506,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15571,"byte_end":15574,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ let wasm_binary: Vec<u8> =","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15579,"byte_end":15609,"line_start":508,"line_end":508,"column_start":5,"column_end":35}},{"value":"/     wabt::wat2wasm(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15614,"byte_end":15637,"line_start":509,"line_end":509,"column_start":5,"column_end":28}},{"value":"/         r#\"","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15642,"byte_end":15657,"line_start":510,"line_end":510,"column_start":5,"column_end":20}},{"value":"/         (module","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15662,"byte_end":15681,"line_start":511,"line_end":511,"column_start":5,"column_end":24}},{"value":"/          (func $add (param $lhs f32) (param $rhs f32) (result f32)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15686,"byte_end":15756,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/                get_local $lhs))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15761,"byte_end":15796,"line_start":513,"line_end":513,"column_start":5,"column_end":40}},{"value":"/         \"#,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15801,"byte_end":15816,"line_start":514,"line_end":514,"column_start":5,"column_end":20}},{"value":"/     )","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15821,"byte_end":15830,"line_start":515,"line_end":515,"column_start":5,"column_end":14}},{"value":"/     .expect(\"failed to parse wat\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15835,"byte_end":15874,"line_start":516,"line_end":516,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15879,"byte_end":15882,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let module = wasmi::Module::from_buffer(&wasm_binary).expect(\"Parsing failed\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15887,"byte_end":15970,"line_start":518,"line_end":518,"column_start":5,"column_end":88}},{"value":"/ assert!(module.deny_floating_point().is_err());","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":15975,"byte_end":16026,"line_start":519,"line_end":519,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16031,"byte_end":16038,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16999,"byte_end":17010,"line_start":551,"line_end":551,"column_start":12,"column_end":23},"name":"from_buffer","qualname":"<Module>::from_buffer","value":"pub fn from_buffer<B: AsRef<[u8]>>(B) -> Result<Module, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create `Module` from a given buffer.","sig":null,"attributes":[{"value":"/ Create `Module` from a given buffer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16182,"byte_end":16222,"line_start":525,"line_end":525,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16227,"byte_end":16230,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ This function will deserialize wasm module from a given module,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16235,"byte_end":16302,"line_start":527,"line_end":527,"column_start":5,"column_end":72}},{"value":"/ validate and prepare it for instantiation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16307,"byte_end":16353,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16358,"byte_end":16361,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16366,"byte_end":16378,"line_start":530,"line_end":530,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16383,"byte_end":16386,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if wasm binary in provided `buffer` is not valid wasm binary.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16391,"byte_end":16470,"line_start":532,"line_end":532,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16475,"byte_end":16478,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16483,"byte_end":16497,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16502,"byte_end":16505,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16510,"byte_end":16521,"line_start":536,"line_end":536,"column_start":5,"column_end":16}},{"value":"/ extern crate wasmi;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16526,"byte_end":16549,"line_start":537,"line_end":537,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16554,"byte_end":16557,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16562,"byte_end":16577,"line_start":539,"line_end":539,"column_start":5,"column_end":20}},{"value":"/     let module =","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16582,"byte_end":16602,"line_start":540,"line_end":540,"column_start":5,"column_end":25}},{"value":"/         wasmi::Module::from_buffer(","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16607,"byte_end":16646,"line_start":541,"line_end":541,"column_start":5,"column_end":44}},{"value":"/             // Minimal module:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16651,"byte_end":16685,"line_start":542,"line_end":542,"column_start":5,"column_end":39}},{"value":"/             //   \\0asm - magic","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16690,"byte_end":16724,"line_start":543,"line_end":543,"column_start":5,"column_end":39}},{"value":"/             //    0x01 - version (in little-endian)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16729,"byte_end":16784,"line_start":544,"line_end":544,"column_start":5,"column_end":60}},{"value":"/             &[0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16789,"byte_end":16854,"line_start":545,"line_end":545,"column_start":5,"column_end":70}},{"value":"/         ).expect(\"Failed to load minimal module\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16859,"byte_end":16913,"line_start":546,"line_end":546,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16918,"byte_end":16921,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/     // Instantiate `module`, etc...","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16926,"byte_end":16965,"line_start":548,"line_end":548,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16970,"byte_end":16975,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":16980,"byte_end":16987,"line_start":550,"line_end":550,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4451,"byte_end":4455,"line_start":144,"line_end":144,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4676,"byte_end":4680,"line_start":156,"line_end":156,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4840,"byte_end":4844,"line_start":163,"line_end":163,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7746,"byte_end":7754,"line_start":246,"line_end":246,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8600,"byte_end":8605,"line_start":280,"line_end":280,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":9381,"byte_end":9386,"line_start":301,"line_end":301,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":9847,"byte_end":9852,"line_start":317,"line_end":317,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":10593,"byte_end":10598,"line_start":334,"line_end":334,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11064,"byte_end":11069,"line_start":350,"line_end":350,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11200,"byte_end":11204,"line_start":359,"line_end":359,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11349,"byte_end":11354,"line_start":368,"line_end":368,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11445,"byte_end":11449,"line_start":374,"line_end":374,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11550,"byte_end":11555,"line_start":380,"line_end":380,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18069,"byte_end":18076,"line_start":24,"line_end":24,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":19126,"byte_end":19138,"line_start":60,"line_end":60,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":19741,"byte_end":19753,"line_start":75,"line_end":75,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25960,"byte_end":25974,"line_start":248,"line_end":248,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":26417,"byte_end":26431,"line_start":268,"line_end":268,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30100,"byte_end":30109,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30878,"byte_end":30892,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":32755,"byte_end":32766,"line_start":12,"line_end":12,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":32893,"byte_end":32904,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":32986,"byte_end":32997,"line_start":24,"line_end":24,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38899,"byte_end":38911,"line_start":230,"line_end":230,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43564,"byte_end":43578,"line_start":106,"line_end":106,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43650,"byte_end":43664,"line_start":112,"line_end":112,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":44515,"byte_end":44529,"line_start":146,"line_end":146,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47906,"byte_end":47915,"line_start":257,"line_end":257,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/isa.rs","byte_start":52732,"byte_end":52736,"line_start":84,"line_end":84,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/isa.rs","byte_start":53738,"byte_end":53747,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/isa.rs","byte_start":61002,"byte_end":61014,"line_start":543,"line_end":543,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/isa.rs","byte_start":62375,"byte_end":62390,"line_start":586,"line_end":586,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/isa.rs","byte_start":62500,"byte_end":62515,"line_start":593,"line_end":593,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mmap_bytebuf.rs","byte_start":99520,"byte_end":99524,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mmap_bytebuf.rs","byte_start":103130,"byte_end":103134,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mmap_bytebuf.rs","byte_start":103875,"byte_end":103882,"line_start":128,"line_end":128,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75796,"byte_end":75805,"line_start":39,"line_end":39,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76866,"byte_end":76880,"line_start":69,"line_end":69,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":77276,"byte_end":77289,"line_start":85,"line_end":85,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":77601,"byte_end":77615,"line_start":98,"line_end":98,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107174,"byte_end":107183,"line_start":43,"line_end":43,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107939,"byte_end":107948,"line_start":73,"line_end":73,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":108350,"byte_end":108359,"line_start":84,"line_end":84,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":108744,"byte_end":108753,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":111171,"byte_end":111185,"line_start":168,"line_end":168,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":462},{"krate":0,"index":468},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132847,"byte_end":132866,"line_start":707,"line_end":707,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/nan_preserving_float.rs","byte_start":141582,"byte_end":141585,"line_start":121,"line_end":121,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/nan_preserving_float.rs","byte_start":141773,"byte_end":141776,"line_start":133,"line_end":133,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/prepare/compile.rs","byte_start":150437,"byte_end":150451,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/prepare/compile.rs","byte_start":151530,"byte_end":151538,"line_start":69,"line_end":69,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/prepare/compile.rs","byte_start":152366,"byte_end":152374,"line_start":98,"line_end":98,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/prepare/compile.rs","byte_start":191870,"byte_end":191874,"line_start":1147,"line_end":1147,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/prepare/mod.rs","byte_start":144121,"byte_end":144136,"line_start":26,"line_end":26,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":197589,"byte_end":197609,"line_start":40,"line_end":40,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":199152,"byte_end":199172,"line_start":101,"line_end":101,"column_start":21,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":199451,"byte_end":199471,"line_start":113,"line_end":113,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":200638,"byte_end":200654,"line_start":148,"line_end":148,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":201152,"byte_end":201163,"line_start":173,"line_end":173,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":700},{"krate":0,"index":705},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":841},{"krate":0,"index":848},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":244177,"byte_end":244192,"line_start":1264,"line_end":1264,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":245478,"byte_end":245493,"line_start":1308,"line_end":1308,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":246813,"byte_end":246823,"line_start":1362,"line_end":1362,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":249036,"byte_end":249045,"line_start":1462,"line_end":1462,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":249629,"byte_end":249642,"line_start":1488,"line_end":1488,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":911},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":251879,"byte_end":251892,"line_start":1557,"line_end":1557,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252468,"byte_end":252476,"line_start":19,"line_end":19,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253301,"byte_end":253314,"line_start":46,"line_end":46,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253557,"byte_end":253570,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257511,"byte_end":257520,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259346,"byte_end":259355,"line_start":90,"line_end":90,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260222,"byte_end":260238,"line_start":121,"line_end":121,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261050,"byte_end":261065,"line_start":153,"line_end":153,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261808,"byte_end":261824,"line_start":183,"line_end":183,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":267081,"byte_end":267093,"line_start":141,"line_end":141,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268516,"byte_end":268528,"line_start":184,"line_end":184,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268628,"byte_end":268640,"line_start":190,"line_end":190,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268741,"byte_end":268753,"line_start":196,"line_end":196,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268847,"byte_end":268859,"line_start":202,"line_end":202,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268952,"byte_end":268964,"line_start":208,"line_end":208,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":269064,"byte_end":269076,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":269177,"byte_end":269189,"line_start":220,"line_end":220,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":269300,"byte_end":269312,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":269423,"byte_end":269435,"line_start":232,"line_end":232,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":269529,"byte_end":269541,"line_start":238,"line_end":238,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":273349,"byte_end":273352,"line_start":362,"line_end":362,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":276604,"byte_end":276607,"line_start":450,"line_end":450,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":283249,"byte_end":283252,"line_start":711,"line_end":711,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":283555,"byte_end":283558,"line_start":721,"line_end":721,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12961,"byte_end":12967,"line_start":426,"line_end":426,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11739,"byte_end":11759,"line_start":393,"line_end":393,"column_start":9,"column_end":29},"ref_id":{"krate":0,"index":496}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4451,"byte_end":4455,"line_start":144,"line_end":144,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4676,"byte_end":4680,"line_start":156,"line_end":156,"column_start":23,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":4840,"byte_end":4844,"line_start":163,"line_end":163,"column_start":23,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1230},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":7746,"byte_end":7754,"line_start":246,"line_end":246,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":8600,"byte_end":8605,"line_start":280,"line_end":280,"column_start":6,"column_end":11},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":9381,"byte_end":9386,"line_start":301,"line_end":301,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":9847,"byte_end":9852,"line_start":317,"line_end":317,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":10593,"byte_end":10598,"line_start":334,"line_end":334,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1256},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11064,"byte_end":11069,"line_start":350,"line_end":350,"column_start":21,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11200,"byte_end":11204,"line_start":359,"line_end":359,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11349,"byte_end":11354,"line_start":368,"line_end":368,"column_start":21,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11445,"byte_end":11449,"line_start":374,"line_end":374,"column_start":25,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":11550,"byte_end":11555,"line_start":380,"line_end":380,"column_start":34,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":18069,"byte_end":18076,"line_start":24,"line_end":24,"column_start":29,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":19126,"byte_end":19138,"line_start":60,"line_end":60,"column_start":21,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":72},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":19741,"byte_end":19753,"line_start":75,"line_end":75,"column_start":6,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":25960,"byte_end":25974,"line_start":248,"line_end":248,"column_start":21,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1303},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/func.rs","byte_start":26417,"byte_end":26431,"line_start":268,"line_end":268,"column_start":13,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30100,"byte_end":30109,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/global.rs","byte_start":30878,"byte_end":30892,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":32755,"byte_end":32766,"line_start":12,"line_end":12,"column_start":39,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":32893,"byte_end":32904,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":32986,"byte_end":32997,"line_start":24,"line_end":24,"column_start":10,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35275,"byte_end":35282,"line_start":110,"line_end":110,"column_start":45,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":6836},"to":{"krate":0,"index":156}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35298,"byte_end":35303,"line_start":110,"line_end":110,"column_start":68,"column_end":73},"kind":"SuperTrait","from":{"krate":2,"index":6831},"to":{"krate":0,"index":156}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35306,"byte_end":35310,"line_start":110,"line_end":110,"column_start":76,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":156}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":35313,"byte_end":35317,"line_start":110,"line_end":110,"column_start":83,"column_end":87},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":156}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/host.rs","byte_start":38899,"byte_end":38911,"line_start":230,"line_end":230,"column_start":20,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":165},"to":{"krate":0,"index":163}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43564,"byte_end":43578,"line_start":106,"line_end":106,"column_start":22,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":190},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":43650,"byte_end":43664,"line_start":112,"line_end":112,"column_start":10,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":44515,"byte_end":44529,"line_start":146,"line_end":146,"column_start":29,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":190},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/imports.rs","byte_start":47906,"byte_end":47915,"line_start":257,"line_end":257,"column_start":31,"column_end":40},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2213},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/isa.rs","byte_start":52732,"byte_end":52736,"line_start":84,"line_end":84,"column_start":6,"column_end":10},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/isa.rs","byte_start":53738,"byte_end":53747,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/isa.rs","byte_start":61002,"byte_end":61014,"line_start":543,"line_end":543,"column_start":6,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/isa.rs","byte_start":62375,"byte_end":62390,"line_start":586,"line_end":586,"column_start":10,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/isa.rs","byte_start":62500,"byte_end":62515,"line_start":593,"line_end":593,"column_start":23,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mmap_bytebuf.rs","byte_start":99520,"byte_end":99524,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mmap_bytebuf.rs","byte_start":103130,"byte_end":103134,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mmap_bytebuf.rs","byte_start":103875,"byte_end":103882,"line_start":128,"line_end":128,"column_start":6,"column_end":13},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":75796,"byte_end":75805,"line_start":39,"line_end":39,"column_start":29,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2206},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":76866,"byte_end":76880,"line_start":69,"line_end":69,"column_start":21,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":309},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":77276,"byte_end":77289,"line_start":85,"line_end":85,"column_start":6,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/memory/mod.rs","byte_start":77601,"byte_end":77615,"line_start":98,"line_end":98,"column_start":6,"column_end":20},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107174,"byte_end":107183,"line_start":43,"line_end":43,"column_start":29,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2213},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":107939,"byte_end":107948,"line_start":73,"line_end":73,"column_start":16,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":108350,"byte_end":108359,"line_start":84,"line_end":84,"column_start":21,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":108744,"byte_end":108753,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":111171,"byte_end":111185,"line_start":168,"line_end":168,"column_start":6,"column_end":20},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/module.rs","byte_start":132847,"byte_end":132866,"line_start":707,"line_end":707,"column_start":10,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/nan_preserving_float.rs","byte_start":141582,"byte_end":141585,"line_start":121,"line_end":121,"column_start":20,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2254},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/nan_preserving_float.rs","byte_start":141773,"byte_end":141776,"line_start":133,"line_end":133,"column_start":20,"column_end":23},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2305},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/prepare/compile.rs","byte_start":150437,"byte_end":150451,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/prepare/compile.rs","byte_start":151530,"byte_end":151538,"line_start":69,"line_end":69,"column_start":24,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":551},"to":{"krate":20,"index":185}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/prepare/compile.rs","byte_start":152366,"byte_end":152374,"line_start":98,"line_end":98,"column_start":6,"column_end":14},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/prepare/compile.rs","byte_start":191870,"byte_end":191874,"line_start":1147,"line_end":1147,"column_start":6,"column_end":10},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/prepare/mod.rs","byte_start":144121,"byte_end":144136,"line_start":26,"line_end":26,"column_start":20,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":592},"to":{"krate":20,"index":179}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":197589,"byte_end":197609,"line_start":40,"line_end":40,"column_start":6,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":199152,"byte_end":199172,"line_start":101,"line_end":101,"column_start":21,"column_end":41},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2458},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":199451,"byte_end":199471,"line_start":113,"line_end":113,"column_start":29,"column_end":49},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2458},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":200638,"byte_end":200654,"line_start":148,"line_end":148,"column_start":6,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":201152,"byte_end":201163,"line_start":173,"line_end":173,"column_start":6,"column_end":17},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":244177,"byte_end":244192,"line_start":1264,"line_end":1264,"column_start":6,"column_end":21},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":245478,"byte_end":245493,"line_start":1308,"line_end":1308,"column_start":21,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":855},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":246813,"byte_end":246823,"line_start":1362,"line_end":1362,"column_start":6,"column_end":16},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":249036,"byte_end":249045,"line_start":1462,"line_end":1462,"column_start":6,"column_end":15},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":249629,"byte_end":249642,"line_start":1488,"line_end":1488,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/runner.rs","byte_start":251879,"byte_end":251892,"line_start":1557,"line_end":1557,"column_start":18,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":899},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":252468,"byte_end":252476,"line_start":19,"line_end":19,"column_start":29,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2540},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253301,"byte_end":253314,"line_start":46,"line_end":46,"column_start":21,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":931},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/table.rs","byte_start":253557,"byte_end":253570,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":257511,"byte_end":257520,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":259346,"byte_end":259355,"line_start":90,"line_end":90,"column_start":6,"column_end":15},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":260222,"byte_end":260238,"line_start":121,"line_end":121,"column_start":6,"column_end":22},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261050,"byte_end":261065,"line_start":153,"line_end":153,"column_start":6,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/types.rs","byte_start":261808,"byte_end":261824,"line_start":183,"line_end":183,"column_start":6,"column_end":22},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":265596,"byte_end":265609,"line_start":102,"line_end":102,"column_start":23,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":1018},"to":{"krate":0,"index":1024}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":266199,"byte_end":266212,"line_start":118,"line_end":118,"column_start":21,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":1018},"to":{"krate":0,"index":1032}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":267081,"byte_end":267093,"line_start":141,"line_end":141,"column_start":6,"column_end":18},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268516,"byte_end":268528,"line_start":184,"line_end":184,"column_start":19,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268628,"byte_end":268640,"line_start":190,"line_end":190,"column_start":20,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268741,"byte_end":268753,"line_start":196,"line_end":196,"column_start":20,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268847,"byte_end":268859,"line_start":202,"line_end":202,"column_start":20,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":268952,"byte_end":268964,"line_start":208,"line_end":208,"column_start":19,"column_end":31},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":269064,"byte_end":269076,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":269177,"byte_end":269189,"line_start":220,"line_end":220,"column_start":20,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":269300,"byte_end":269312,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":269423,"byte_end":269435,"line_start":232,"line_end":232,"column_start":20,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":269529,"byte_end":269541,"line_start":238,"line_end":238,"column_start":20,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":273349,"byte_end":273352,"line_start":362,"line_end":362,"column_start":24,"column_end":27},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2305},"to":{"krate":0,"index":1002}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":276604,"byte_end":276607,"line_start":450,"line_end":450,"column_start":26,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2254},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":283249,"byte_end":283252,"line_start":711,"line_end":711,"column_start":30,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2254},"to":{"krate":0,"index":1015}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/value.rs","byte_start":283555,"byte_end":283558,"line_start":721,"line_end":721,"column_start":30,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2305},"to":{"krate":0,"index":1015}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.6.2/src/lib.rs","byte_start":12961,"byte_end":12967,"line_start":426,"line_end":426,"column_start":6,"column_end":12},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1219},"to":{"krate":4294967295,"index":4294967295}}]}