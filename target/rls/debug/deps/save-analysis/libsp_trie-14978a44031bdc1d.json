{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0","program":"/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_trie","--edition=2018","/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=14978a44031bdc1d","-C","extra-filename=-14978a44031bdc1d","--out-dir","/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps","-L","dependency=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps","--extern","hash_db=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libhash_db-d38c1365a7005e89.rmeta","--extern","memory_db=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libmemory_db-1d077f84c26a33b9.rmeta","--extern","codec=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libparity_scale_codec-b38ed3f0a4e0f6cc.rmeta","--extern","sp_core=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_core-cba9ce4ea9a4c43e.rmeta","--extern","sp_std=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_std-0142de4e2fb49a91.rmeta","--extern","trie_db=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libtrie_db-9594c6d0f2a83cba.rmeta","--extern","trie_root=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libtrie_root-5db713cd291f85a1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_trie-14978a44031bdc1d.rmeta"},"prelude":{"crate_id":{"name":"sp_trie","disambiguator":[13118048614907196054,1322344655374896753]},"crate_root":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src","external_crates":[{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","num":18,"id":{"name":"parity_scale_codec","disambiguator":[8513279373943582847,10751956381400254447]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","num":19,"id":{"name":"parity_scale_codec_derive","disambiguator":[3988632595002997288,5128307631409362997]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","num":20,"id":{"name":"arrayvec","disambiguator":[1943503948824698767,8928204549588057885]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","num":21,"id":{"name":"byte_slice_cast","disambiguator":[11971851078352766489,17994270080533667189]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","num":22,"id":{"name":"serde","disambiguator":[9329802083187344169,15516913349122290357]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","num":23,"id":{"name":"serde_derive","disambiguator":[9132577773600900999,13098957011468639310]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":24,"id":{"name":"sp_std","disambiguator":[9770677728196279493,12510806215599864837]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","num":25,"id":{"name":"hash_db","disambiguator":[16222527159578958881,15417756680510520186]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","num":26,"id":{"name":"trie_db","disambiguator":[45886576227001508,916380512454680783]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","num":27,"id":{"name":"hashbrown","disambiguator":[15858687212683710517,10679103842408037307]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","num":28,"id":{"name":"ahash","disambiguator":[11000207869931019655,11365772628104082715]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","num":29,"id":{"name":"log","disambiguator":[3545289885770114131,433247333334147900]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","num":30,"id":{"name":"cfg_if","disambiguator":[11748229077813686416,18120593503603249335]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","num":31,"id":{"name":"rustc_hex","disambiguator":[8252233264516824388,17670331916333253350]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","num":32,"id":{"name":"smallvec","disambiguator":[12123569432201045790,1609040209808900757]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/trie_stream.rs","num":33,"id":{"name":"trie_root","disambiguator":[10825234960134104556,2662406007426998997]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":34,"id":{"name":"memory_db","disambiguator":[632864180048084116,11252723647111274025]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":35,"id":{"name":"parity_util_mem","disambiguator":[5692800706026385981,13988503766425499944]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":36,"id":{"name":"primitive_types","disambiguator":[11755663010420176922,11551187208533645918]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":37,"id":{"name":"fixed_hash","disambiguator":[761001719887353079,113272237603088689]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":38,"id":{"name":"static_assertions","disambiguator":[17267408535625969050,4632693660215762815]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":39,"id":{"name":"byteorder","disambiguator":[16743341458239395833,5344541827637086529]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":40,"id":{"name":"rand","disambiguator":[8754712101818231124,439968306620514562]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":41,"id":{"name":"rand_core","disambiguator":[17249439947178837211,16150054665629866134]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":42,"id":{"name":"getrandom","disambiguator":[5295995297352709213,7943019062197219340]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":43,"id":{"name":"libc","disambiguator":[7953600248772063458,1989307123664392873]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":44,"id":{"name":"uint","disambiguator":[249403627217210170,66937591079663351]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":45,"id":{"name":"hex","disambiguator":[5817943069691027302,2071035837552761178]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":46,"id":{"name":"crunchy","disambiguator":[16496986770395509475,10742896350538019007]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":47,"id":{"name":"impl_serde","disambiguator":[807954869803654047,4716339343125958352]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":48,"id":{"name":"impl_codec","disambiguator":[18061770301012622754,8940897700826662907]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":49,"id":{"name":"parity_util_mem_derive","disambiguator":[3916493160687366221,3998416894547474512]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":50,"id":{"name":"impl_trait_for_tuples","disambiguator":[9660762680991374145,8791689571548580469]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":51,"id":{"name":"parking_lot","disambiguator":[18159808056392103160,16155596511951534654]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":52,"id":{"name":"instant","disambiguator":[6707731622692707509,11541478860689369278]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":53,"id":{"name":"lock_api","disambiguator":[117164551345877035,12793837009537715804]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":54,"id":{"name":"scopeguard","disambiguator":[6745301356711570827,8805850024978740077]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","num":55,"id":{"name":"parking_lot_core","disambiguator":[13491894724313637548,4430950099799626494]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":56,"id":{"name":"sp_core","disambiguator":[482245497719965997,4446364731874136958]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":57,"id":{"name":"sp_runtime_interface","disambiguator":[8486305343948881103,18310204470691800149]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":58,"id":{"name":"sp_wasm_interface","disambiguator":[12654239842700216049,8433569663077031038]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":59,"id":{"name":"wasmi","disambiguator":[6918656205759776739,8549698197006326748]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":60,"id":{"name":"memory_units","disambiguator":[4446909059691065796,8711733259455937782]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":61,"id":{"name":"parity_wasm","disambiguator":[2746304515579433884,15008885245026691101]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":62,"id":{"name":"wasmi_validation","disambiguator":[12503892293425695562,631775191906383592]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":63,"id":{"name":"num_rational","disambiguator":[8002101714546462564,7774992686627339530]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":64,"id":{"name":"num_bigint","disambiguator":[8324002608551350377,6864858279968498277]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":65,"id":{"name":"num_integer","disambiguator":[5126256796491658918,13702474337812182890]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":66,"id":{"name":"num_traits","disambiguator":[12449281939908862398,945796103035123006]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":67,"id":{"name":"sp_tracing","disambiguator":[9619578780568606008,17901182021480941559]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":68,"id":{"name":"tracing_core","disambiguator":[11735089163411024588,17388945486717174255]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":69,"id":{"name":"lazy_static","disambiguator":[4038955093903438243,10998562936998939215]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":70,"id":{"name":"tracing","disambiguator":[12634947417058916823,13964040762799800002]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":71,"id":{"name":"pin_project_lite","disambiguator":[10940599627664034505,1256839874217548822]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":72,"id":{"name":"tracing_subscriber","disambiguator":[2737517103962892138,6007003846142012037]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":73,"id":{"name":"regex","disambiguator":[15379754631532878358,1305285703807680371]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":74,"id":{"name":"aho_corasick","disambiguator":[15808597861067690095,17129261582138448034]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":75,"id":{"name":"memchr","disambiguator":[1157675088820504487,7216068552727726090]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":76,"id":{"name":"regex_syntax","disambiguator":[15754485282953042439,939955947925160166]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":77,"id":{"name":"thread_local","disambiguator":[4515805766320255868,12702638825636986852]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":78,"id":{"name":"once_cell","disambiguator":[12659116934471307003,7435940676996991787]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":79,"id":{"name":"matchers","disambiguator":[11196127239289206652,8821764124139599593]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":80,"id":{"name":"regex_automata","disambiguator":[1356799715280784519,12525503415491810456]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":81,"id":{"name":"ansi_term","disambiguator":[13348744980724887879,5052188682016064389]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":82,"id":{"name":"tracing_log","disambiguator":[2517198273552123748,17355328636754591651]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":83,"id":{"name":"serde_json","disambiguator":[2535307572117126142,15340677427040480041]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":84,"id":{"name":"itoa","disambiguator":[1783620119987649435,3821505174059274534]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":85,"id":{"name":"ryu","disambiguator":[4560945869205572345,5209367066204268501]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":86,"id":{"name":"tracing_serde","disambiguator":[4562426333319122918,15922045924750474936]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":87,"id":{"name":"sharded_slab","disambiguator":[17401401532503036136,1601036186833089112]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":88,"id":{"name":"chrono","disambiguator":[17126090541689444332,1886024564587297196]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":89,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[18335766830024536561,5137992637639085820]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":90,"id":{"name":"sp_externalities","disambiguator":[15346619557778524113,15546321444447335287]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":91,"id":{"name":"sp_storage","disambiguator":[12236995375180460119,10483812130181742021]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":92,"id":{"name":"sp_debug_derive","disambiguator":[1127781656639809926,12270005864681690604]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":93,"id":{"name":"ref_cast","disambiguator":[3109219419575014207,1073703474336682823]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":94,"id":{"name":"ref_cast_impl","disambiguator":[548036109860010999,5849971523560802531]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":95,"id":{"name":"environmental","disambiguator":[12825357754638386979,7940730235394234995]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":96,"id":{"name":"blake2_rfc","disambiguator":[11744292092095819415,9801326368370969682]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":97,"id":{"name":"arrayvec","disambiguator":[14648713630236782063,9849397673914679400]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":98,"id":{"name":"nodrop","disambiguator":[11522295318034127309,11770490405937775818]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":99,"id":{"name":"constant_time_eq","disambiguator":[11542931171304914434,3999952699895281030]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":100,"id":{"name":"sha2","disambiguator":[6501481284549552844,10223970258463939953]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":101,"id":{"name":"block_buffer","disambiguator":[13966198174714371443,9733068092495573015]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":102,"id":{"name":"generic_array","disambiguator":[17630325060485713573,8632611388700851125]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":103,"id":{"name":"typenum","disambiguator":[8726524992263171078,2989859816024006970]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":104,"id":{"name":"digest","disambiguator":[3267007905718091736,6472354886699068987]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":105,"id":{"name":"opaque_debug","disambiguator":[6572339997394954866,9498658499336361599]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":106,"id":{"name":"cpuid_bool","disambiguator":[6205407880030392451,6093553700822162471]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":107,"id":{"name":"tiny_keccak","disambiguator":[6907276523880939152,15806809385348513789]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":108,"id":{"name":"twox_hash","disambiguator":[4843776605774432337,16933932808593462508]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":109,"id":{"name":"cfg_if","disambiguator":[10021299859095236603,9970654228449935443]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":110,"id":{"name":"rand","disambiguator":[746826575780793851,4471793012143423394]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":111,"id":{"name":"rand_core","disambiguator":[3238620688790230140,13462498439867285351]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":112,"id":{"name":"getrandom","disambiguator":[16958247650847020380,5385242026854871367]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":113,"id":{"name":"rand_chacha","disambiguator":[441716931807972491,17272912142872802949]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":114,"id":{"name":"ppv_lite86","disambiguator":[5486910781073359264,15253540615556416119]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":115,"id":{"name":"rand_pcg","disambiguator":[3160627028304066158,11293307244701815743]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":116,"id":{"name":"base58","disambiguator":[3369462119818718244,8362136954819660540]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":117,"id":{"name":"zeroize","disambiguator":[10556093639355727955,15809428849932923722]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":118,"id":{"name":"zeroize_derive","disambiguator":[5655268509516224944,6725263168993598751]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":119,"id":{"name":"secrecy","disambiguator":[16459322919098341897,12171937217720544940]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":120,"id":{"name":"ed25519_dalek","disambiguator":[11398848187809677205,7856143361522293917]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":121,"id":{"name":"ed25519","disambiguator":[17719961624066905290,3692275665346932817]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":122,"id":{"name":"signature","disambiguator":[8760395504805049851,3413849478659787523]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":123,"id":{"name":"curve25519_dalek","disambiguator":[4071595552511680062,1824077030073052835]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":124,"id":{"name":"subtle","disambiguator":[17934521912222352306,18444245334094816619]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":125,"id":{"name":"substrate_bip39","disambiguator":[1792972643475504061,2284854317310986267]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":126,"id":{"name":"sha2","disambiguator":[6031437354618425809,1156418039787797982]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":127,"id":{"name":"block_buffer","disambiguator":[17013019169273939082,8694242993449314512]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":128,"id":{"name":"block_padding","disambiguator":[12027653930546257504,11934247384914869959]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":129,"id":{"name":"byte_tools","disambiguator":[11700157176403723246,15042745078268532608]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":130,"id":{"name":"generic_array","disambiguator":[8154424454435046820,8305875546402162267]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":131,"id":{"name":"fake_simd","disambiguator":[14036491710765223056,16121027988084704970]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":132,"id":{"name":"opaque_debug","disambiguator":[15355801993192592970,15368723170800198628]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":133,"id":{"name":"digest","disambiguator":[18028793442622875312,8404934643691058449]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":134,"id":{"name":"hmac","disambiguator":[2398036106222558641,12747122617455590906]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":135,"id":{"name":"crypto_mac","disambiguator":[13559926310032573477,17050896233749691016]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":136,"id":{"name":"subtle","disambiguator":[10946190608180335518,5756656367206348154]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":137,"id":{"name":"pbkdf2","disambiguator":[18045263582543352373,3198099767612698545]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":138,"id":{"name":"schnorrkel","disambiguator":[1001073668430333559,14191689993495040953]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":139,"id":{"name":"arrayref","disambiguator":[16818885780591367818,9624370045344091841]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":140,"id":{"name":"curve25519_dalek","disambiguator":[11182327997470844279,2917915551897756157]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":141,"id":{"name":"merlin","disambiguator":[10995490140485953775,3078541580170789468]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":142,"id":{"name":"keccak","disambiguator":[8402286363173856787,11033165844963027687]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":143,"id":{"name":"bip39","disambiguator":[14654181774436755031,16150481678645946358]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":144,"id":{"name":"thiserror","disambiguator":[11211909712945309034,1462899715189146714]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":145,"id":{"name":"thiserror_impl","disambiguator":[12140497728656256834,17536753507674282886]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":146,"id":{"name":"rustc_hash","disambiguator":[18120138039320172856,5174853055526042934]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":147,"id":{"name":"anyhow","disambiguator":[17455878141675706397,15024690126878403217]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":148,"id":{"name":"unicode_normalization","disambiguator":[7319256477008403990,850912555204041804]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":149,"id":{"name":"tinyvec","disambiguator":[13757798832981975562,16448938864586428141]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":150,"id":{"name":"tinyvec_macros","disambiguator":[6971095827479815106,2369805349969581398]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":151,"id":{"name":"hmac","disambiguator":[17433356495996038620,7849656493985933521]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":152,"id":{"name":"crypto_mac","disambiguator":[16952472478491170049,5748167897379155211]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":153,"id":{"name":"pbkdf2","disambiguator":[7649781412603123506,9859389210053091319]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":154,"id":{"name":"secp256k1","disambiguator":[16737428765420032088,13773206920855754217]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":155,"id":{"name":"hmac_drbg","disambiguator":[17404808929730230210,16695580170234810369]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":156,"id":{"name":"hash256_std_hasher","disambiguator":[14242029744627902613,3090809591287000861]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":157,"id":{"name":"dyn_clonable","disambiguator":[1160672861310717368,179577393650705180]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":158,"id":{"name":"dyn_clone","disambiguator":[153351459397055590,2262572122976187853]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":159,"id":{"name":"dyn_clonable_impl","disambiguator":[8143725291046252364,3517763874786058099]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":160,"id":{"name":"futures","disambiguator":[3463592966268286824,7540824572693008632]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":161,"id":{"name":"futures_core","disambiguator":[1741251118759805826,11401665632333816338]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":162,"id":{"name":"futures_util","disambiguator":[3438948224063739788,15492469175479036624]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":163,"id":{"name":"pin_utils","disambiguator":[6148991665019902715,7706982228305245343]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":164,"id":{"name":"proc_macro_hack","disambiguator":[18107074244595300940,7254669559897049488]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":165,"id":{"name":"futures_task","disambiguator":[7625991371478830382,1732980289896795878]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":166,"id":{"name":"futures_sink","disambiguator":[8661685636113034652,10637809691106661968]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":167,"id":{"name":"futures_channel","disambiguator":[9340365945153326119,16413412677825364759]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":168,"id":{"name":"slab","disambiguator":[10964154642823013274,18136006732140345220]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":169,"id":{"name":"futures_io","disambiguator":[1719766009174806638,1918012058549137250]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":170,"id":{"name":"futures_macro","disambiguator":[83206124768939847,1707592736898867711]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":171,"id":{"name":"futures_executor","disambiguator":[7121268507423420993,8515073597681227929]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","num":172,"id":{"name":"num_cpus","disambiguator":[12520181572928967600,156566489628191520]}}],"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":686,"byte_end":27663,"line_start":18,"line_end":893,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":26,"index":1537},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1091,"byte_end":1102,"line_start":31,"line_end":31,"column_start":25,"column_end":36},"alias_span":null,"name":"VerifyError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":398},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1155,"byte_end":1160,"line_start":33,"line_end":33,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1240,"byte_end":1250,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"alias_span":null,"name":"TrieStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":437},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1328,"byte_end":1337,"line_start":37,"line_end":37,"column_start":21,"column_end":30},"alias_span":null,"name":"NodeCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":447},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1362,"byte_end":1374,"line_start":38,"line_end":38,"column_start":24,"column_end":36},"alias_span":null,"name":"StorageProof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1293},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1445,"byte_end":1449,"line_start":41,"line_end":41,"column_start":2,"column_end":6},"alias_span":null,"name":"Trie","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1309},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1451,"byte_end":1458,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"alias_span":null,"name":"TrieMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1251},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1460,"byte_end":1467,"line_start":41,"line_end":41,"column_start":17,"column_end":24},"alias_span":null,"name":"DBValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1659},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1469,"byte_end":1477,"line_start":41,"line_end":41,"column_start":26,"column_end":34},"alias_span":null,"name":"Recorder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1384},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1479,"byte_end":1485,"line_start":41,"line_end":41,"column_start":36,"column_end":42},"alias_span":null,"name":"CError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1267},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1487,"byte_end":1492,"line_start":41,"line_end":41,"column_start":44,"column_end":49},"alias_span":null,"name":"Query","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1358},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1494,"byte_end":1504,"line_start":41,"line_end":41,"column_start":51,"column_end":61},"alias_span":null,"name":"TrieLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1363},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1506,"byte_end":1523,"line_start":41,"line_end":41,"column_start":63,"column_end":80},"alias_span":null,"name":"TrieConfiguration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1078},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1525,"byte_end":1535,"line_start":41,"line_end":41,"column_start":82,"column_end":92},"alias_span":null,"name":"nibble_ops","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":315},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1537,"byte_end":1551,"line_start":41,"line_end":41,"column_start":94,"column_end":108},"alias_span":null,"name":"TrieDBIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":95},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1626,"byte_end":1637,"line_start":44,"line_end":44,"column_start":20,"column_end":31},"alias_span":null,"name":"KeyFunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":129},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1658,"byte_end":1670,"line_start":45,"line_end":45,"column_start":20,"column_end":32},"alias_span":null,"name":"prefixed_key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":40},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1739,"byte_end":1745,"line_start":47,"line_end":47,"column_start":19,"column_end":25},"alias_span":null,"name":"HashDBT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":10},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1758,"byte_end":1770,"line_start":47,"line_end":47,"column_start":38,"column_end":50},"alias_span":null,"name":"EMPTY_PREFIX","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":686,"byte_end":27663,"line_start":18,"line_end":893,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":12},{"krate":0,"index":41},{"krate":0,"index":115},{"krate":0,"index":143},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":574},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":481},{"krate":0,"index":485},{"krate":0,"index":210},{"krate":0,"index":216},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":272},{"krate":0,"index":278},{"krate":0,"index":284},{"krate":0,"index":292},{"krate":0,"index":297},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":312},{"krate":0,"index":320},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":332},{"krate":0,"index":338},{"krate":0,"index":346},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":360},{"krate":0,"index":365},{"krate":0,"index":372},{"krate":0,"index":383},{"krate":0,"index":392}],"decl_id":null,"docs":" Utility functions to interact with Substrate's Base-16 Modified Merkle Patricia tree (\"trie\").\n","sig":null,"attributes":[{"value":"/ Utility functions to interact with Substrate's Base-16 Modified Merkle Patricia tree (\"trie\").","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":686,"byte_end":784,"line_start":18,"line_end":18,"column_start":1,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":399},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/error.rs","byte_start":28553,"byte_end":28562,"line_start":27,"line_end":27,"column_start":2,"column_end":11},"name":"BadFormat","qualname":"::error::Error::BadFormat","value":"Error::BadFormat","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" Bad format.\n","sig":null,"attributes":[{"value":"/ Bad format.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/error.rs","byte_start":28536,"byte_end":28551,"line_start":26,"line_end":26,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":401},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/error.rs","byte_start":28586,"byte_end":28592,"line_start":29,"line_end":29,"column_start":2,"column_end":8},"name":"Decode","qualname":"::error::Error::Decode","value":"Error::Decode(codec::Error)","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" Decoding error.\n","sig":null,"attributes":[{"value":"/ Decoding error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/error.rs","byte_start":28565,"byte_end":28584,"line_start":28,"line_end":28,"column_start":2,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":398},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/error.rs","byte_start":28527,"byte_end":28532,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n\n    /// Bad format.\n    BadFormat,\n\n    /// Decoding error.\n    Decode(codec::Error),\n}","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":401}],"decl_id":null,"docs":" Error for trie node decoding.\n","sig":null,"attributes":[{"value":"/ Error for trie node decoding.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/error.rs","byte_start":28484,"byte_end":28517,"line_start":24,"line_end":24,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","byte_start":35449,"byte_end":35458,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"NodeCodec","qualname":"::node_codec::NodeCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" Concrete implementation of a `NodeCodec` with Parity Codec encoding, generic over the `Hasher`\n","sig":null,"attributes":[{"value":"/ Concrete implementation of a `NodeCodec` with Parity Codec encoding, generic over the `Hasher`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","byte_start":35313,"byte_end":35411,"line_start":86,"line_end":86,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":447},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43464,"byte_end":43476,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"name":"StorageProof","qualname":"::storage_proof::StorageProof","value":"StorageProof {  }","parent":null,"children":[{"krate":0,"index":448}],"decl_id":null,"docs":" A proof that some set of key-value pairs are included in the storage trie. The proof contains\n the storage values so that the partial storage backend can be reconstructed by a verifier that\n does not already have access to the key-value pairs.","sig":null,"attributes":[{"value":"/ A proof that some set of key-value pairs are included in the storage trie. The proof contains","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":42885,"byte_end":42982,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ the storage values so that the partial storage backend can be reconstructed by a verifier that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":42983,"byte_end":43081,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ does not already have access to the key-value pairs.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43082,"byte_end":43138,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43139,"byte_end":43142,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The proof consists of the set of serialized nodes in the storage trie accessed when looking up","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43143,"byte_end":43241,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ the keys covered by the proof. Verifying the proof requires constructing the partial trie from","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43242,"byte_end":43340,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ the serialized nodes and performing the key lookups.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43341,"byte_end":43397,"line_start":28,"line_end":28,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43627,"byte_end":43630,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"name":"new","qualname":"<StorageProof>::new","value":"pub fn new(Vec<Vec<u8>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a storage proof from a subset of encoded trie nodes in a storage backend.\n","sig":null,"attributes":[{"value":"/ Constructs a storage proof from a subset of encoded trie nodes in a storage backend.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43530,"byte_end":43618,"line_start":35,"line_end":35,"column_start":2,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43878,"byte_end":43883,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"name":"empty","qualname":"<StorageProof>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new empty proof.","sig":null,"attributes":[{"value":"/ Returns a new empty proof.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43702,"byte_end":43732,"line_start":40,"line_end":40,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43734,"byte_end":43737,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ An empty proof is capable of only proving trivial statements (ie. that an empty set of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43739,"byte_end":43829,"line_start":42,"line_end":42,"column_start":2,"column_end":92}},{"value":"/ key-value pairs exist in storage).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43831,"byte_end":43869,"line_start":43,"line_end":43,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":44001,"byte_end":44009,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<StorageProof>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this is an empty proof.\n","sig":null,"attributes":[{"value":"/ Returns whether this is an empty proof.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43949,"byte_end":43992,"line_start":50,"line_end":50,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":44211,"byte_end":44221,"line_start":57,"line_end":57,"column_start":9,"column_end":19},"name":"iter_nodes","qualname":"<StorageProof>::iter_nodes","value":"pub fn iter_nodes(Self) -> StorageProofNodeIterator","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over trie nodes constructed from the proof. The nodes are not guaranteed\n to be traversed in any particular order.\n","sig":null,"attributes":[{"value":"/ Create an iterator over trie nodes constructed from the proof. The nodes are not guaranteed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":44061,"byte_end":44156,"line_start":55,"line_end":55,"column_start":2,"column_end":97}},{"value":"/ to be traversed in any particular order.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":44158,"byte_end":44202,"line_start":56,"line_end":56,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":44347,"byte_end":44361,"line_start":62,"line_end":62,"column_start":9,"column_end":23},"name":"into_memory_db","qualname":"<StorageProof>::into_memory_db","value":"pub fn into_memory_db<H: Hasher>(Self) -> crate::MemoryDB<H>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `MemoryDB` from `Self`.\n","sig":null,"attributes":[{"value":"/ Creates a `MemoryDB` from `Self`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":44301,"byte_end":44338,"line_start":61,"line_end":61,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":44672,"byte_end":44677,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"name":"merge","qualname":"<StorageProof>::merge","value":"pub fn merge<I>(I) -> Self where I: IntoIterator<Item = Self>","parent":null,"children":[],"decl_id":null,"docs":" Merges multiple storage proofs covering potentially different sets of keys into one proof\n covering all keys. The merged proof output may be smaller than the aggregate size of the input\n proofs due to deduplication of trie nodes.\n","sig":null,"attributes":[{"value":"/ Merges multiple storage proofs covering potentially different sets of keys into one proof","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":44422,"byte_end":44515,"line_start":66,"line_end":66,"column_start":2,"column_end":95}},{"value":"/ covering all keys. The merged proof output may be smaller than the aggregate size of the input","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":44517,"byte_end":44615,"line_start":67,"line_end":67,"column_start":2,"column_end":100}},{"value":"/ proofs due to deduplication of trie nodes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":44617,"byte_end":44663,"line_start":68,"line_end":68,"column_start":2,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":45086,"byte_end":45110,"line_start":82,"line_end":82,"column_start":12,"column_end":36},"name":"StorageProofNodeIterator","qualname":"::storage_proof::StorageProofNodeIterator","value":"StorageProofNodeIterator {  }","parent":null,"children":[{"krate":0,"index":134}],"decl_id":null,"docs":" An iterator over trie nodes constructed from a storage proof. The nodes are not guaranteed to\n be traversed in any particular order.\n","sig":null,"attributes":[{"value":"/ An iterator over trie nodes constructed from a storage proof. The nodes are not guaranteed to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":44935,"byte_end":45032,"line_start":80,"line_end":80,"column_start":1,"column_end":98}},{"value":"/ be traversed in any particular order.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":45033,"byte_end":45074,"line_start":81,"line_end":81,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":475},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/trie_stream.rs","byte_start":46782,"byte_end":46792,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"TrieStream","qualname":"::trie_stream::TrieStream","value":"TrieStream {  }","parent":null,"children":[{"krate":0,"index":476}],"decl_id":null,"docs":" Codec-flavored TrieStream.\n","sig":null,"attributes":[{"value":"/ Codec-flavored TrieStream.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/trie_stream.rs","byte_start":46740,"byte_end":46770,"line_start":32,"line_end":32,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/trie_stream.rs","byte_start":46890,"byte_end":46896,"line_start":39,"line_end":39,"column_start":9,"column_end":15},"name":"as_raw","qualname":"<TrieStream>::as_raw","value":"pub fn as_raw(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1830,"byte_end":1836,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"Layout","qualname":"::Layout","value":"","parent":null,"children":[],"decl_id":null,"docs":" substrate trie layout\n","sig":null,"attributes":[{"value":"/ substrate trie layout","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1793,"byte_end":1818,"line_start":50,"line_end":50,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":228},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":2878,"byte_end":2887,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"name":"TrieError","qualname":"::TrieError","value":"trie_db::TrieError<TrieHash<L>, CError<L>>","parent":null,"children":[],"decl_id":null,"docs":" TrieDB error over `TrieConfiguration` trait.\n","sig":null,"attributes":[{"value":"/ TrieDB error over `TrieConfiguration` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":2820,"byte_end":2868,"line_start":87,"line_end":87,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":230},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3016,"byte_end":3024,"line_start":90,"line_end":90,"column_start":11,"column_end":19},"name":"AsHashDB","qualname":"::AsHashDB","value":"AsHashDB<H: Hasher>: hash_db::AsHashDB<H, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":2937,"byte_end":3005,"line_start":89,"line_end":89,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":235},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3237,"byte_end":3243,"line_start":93,"line_end":93,"column_start":10,"column_end":16},"name":"HashDB","qualname":"::HashDB","value":"hash_db::HashDB<H, trie_db::DBValue> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3159,"byte_end":3227,"line_start":92,"line_end":92,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":238},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3487,"byte_end":3503,"line_start":97,"line_end":97,"column_start":10,"column_end":26},"name":"PrefixedMemoryDB","qualname":"::PrefixedMemoryDB","value":"memory_db::MemoryDB<H, memory_db::PrefixedKey<H>, trie_db::DBValue,\n                    MemTracker>","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n This uses a `KeyFunction` for prefixing keys internally (avoiding\n key conflict for non random keys).\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3300,"byte_end":3368,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/ This uses a `KeyFunction` for prefixing keys internally (avoiding","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3369,"byte_end":3438,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ key conflict for non random keys).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3439,"byte_end":3477,"line_start":96,"line_end":96,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":240},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3796,"byte_end":3804,"line_start":103,"line_end":103,"column_start":10,"column_end":18},"name":"MemoryDB","qualname":"::MemoryDB","value":"memory_db::MemoryDB<H, memory_db::HashKey<H>, trie_db::DBValue, MemTracker>","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n This uses a noops `KeyFunction` (key addressing must be hashed or using\n an encoding scheme that avoid key conflict).\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3593,"byte_end":3661,"line_start":100,"line_end":100,"column_start":1,"column_end":69}},{"value":"/ This uses a noops `KeyFunction` (key addressing must be hashed or using","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3662,"byte_end":3737,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ an encoding scheme that avoid key conflict).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3738,"byte_end":3786,"line_start":102,"line_end":102,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":242},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3969,"byte_end":3984,"line_start":107,"line_end":107,"column_start":10,"column_end":25},"name":"GenericMemoryDB","qualname":"::GenericMemoryDB","value":"memory_db::MemoryDB<H, KF, trie_db::DBValue, MemTracker>","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3891,"byte_end":3959,"line_start":106,"line_end":106,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":245},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4140,"byte_end":4146,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"TrieDB","qualname":"::TrieDB","value":"trie_db::TrieDB","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database read-access interface for the a given hasher.\n","sig":null,"attributes":[{"value":"/ Persistent trie database read-access interface for the a given hasher.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4056,"byte_end":4130,"line_start":111,"line_end":111,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":248},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4265,"byte_end":4274,"line_start":114,"line_end":114,"column_start":10,"column_end":19},"name":"TrieDBMut","qualname":"::TrieDBMut","value":"trie_db::TrieDBMut","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database write-access interface for the a given hasher.\n","sig":null,"attributes":[{"value":"/ Persistent trie database write-access interface for the a given hasher.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4180,"byte_end":4255,"line_start":113,"line_end":113,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":251},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4378,"byte_end":4384,"line_start":116,"line_end":116,"column_start":10,"column_end":16},"name":"Lookup","qualname":"::Lookup","value":"trie_db::Lookup","parent":null,"children":[],"decl_id":null,"docs":" Querying interface, as in `trie_db` but less generic.\n","sig":null,"attributes":[{"value":"/ Querying interface, as in `trie_db` but less generic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4311,"byte_end":4368,"line_start":115,"line_end":115,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":255},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4466,"byte_end":4474,"line_start":118,"line_end":118,"column_start":10,"column_end":18},"name":"TrieHash","qualname":"::TrieHash","value":"<<L as TrieLayout>::Hash as Hasher>::Out","parent":null,"children":[],"decl_id":null,"docs":" Hash type for a trie layout.\n","sig":null,"attributes":[{"value":"/ Hash type for a trie layout.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4424,"byte_end":4456,"line_start":117,"line_end":117,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":257},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4644,"byte_end":4654,"line_start":122,"line_end":122,"column_start":9,"column_end":19},"name":"trie_types","qualname":"::trie_types","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":270}],"decl_id":null,"docs":" This module is for non generic definition of trie type.\n Only the `Hasher` trait is generic in this case.\n","sig":null,"attributes":[{"value":"/ This module is for non generic definition of trie type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4523,"byte_end":4582,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ Only the `Hasher` trait is generic in this case.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4583,"byte_end":4635,"line_start":121,"line_end":121,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":258},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4667,"byte_end":4673,"line_start":123,"line_end":123,"column_start":11,"column_end":17},"name":"Layout","qualname":"::trie_types::Layout","value":"super::Layout<H>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":260},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4783,"byte_end":4789,"line_start":125,"line_end":125,"column_start":11,"column_end":17},"name":"TrieDB","qualname":"::trie_types::TrieDB","value":"super::TrieDB","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database read-access interface for the a given hasher.\n","sig":null,"attributes":[{"value":"/ Persistent trie database read-access interface for the a given hasher.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4698,"byte_end":4772,"line_start":124,"line_end":124,"column_start":2,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":263},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4916,"byte_end":4925,"line_start":127,"line_end":127,"column_start":11,"column_end":20},"name":"TrieDBMut","qualname":"::trie_types::TrieDBMut","value":"super::TrieDBMut","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database write-access interface for the a given hasher.\n","sig":null,"attributes":[{"value":"/ Persistent trie database write-access interface for the a given hasher.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4830,"byte_end":4905,"line_start":126,"line_end":126,"column_start":2,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":266},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5037,"byte_end":5043,"line_start":129,"line_end":129,"column_start":11,"column_end":17},"name":"Lookup","qualname":"::trie_types::Lookup","value":"trie_db::Lookup","parent":null,"children":[],"decl_id":null,"docs":" Querying interface, as in `trie_db` but less generic.\n","sig":null,"attributes":[{"value":"/ Querying interface, as in `trie_db` but less generic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":4969,"byte_end":5026,"line_start":128,"line_end":128,"column_start":2,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":270},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5167,"byte_end":5176,"line_start":131,"line_end":131,"column_start":11,"column_end":20},"name":"TrieError","qualname":"::trie_types::TrieError","value":"trie_db::TrieError<H, super::Error>","parent":null,"children":[],"decl_id":null,"docs":" As in `trie_db`, but less generic, error type for the crate.\n","sig":null,"attributes":[{"value":"/ As in `trie_db`, but less generic, error type for the crate.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5092,"byte_end":5156,"line_start":130,"line_end":130,"column_start":2,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":272},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5618,"byte_end":5637,"line_start":142,"line_end":142,"column_start":8,"column_end":27},"name":"generate_trie_proof","qualname":"::generate_trie_proof","value":"pub fn generate_trie_proof<'a, L: TrieConfiguration, I, K,\n                           DB>(&DB, TrieHash<L>, I)\n-> Result<Vec<Vec<u8>>, Box<TrieError<L>>> where I: IntoIterator<Item =\n&'a K>, K: 'a + AsRef<[u8]>, DB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Create a proof for a subset of keys in a trie.","sig":null,"attributes":[{"value":"/ Create a proof for a subset of keys in a trie.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5222,"byte_end":5272,"line_start":134,"line_end":134,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5273,"byte_end":5276,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The `keys` may contain any set of keys regardless of each one of them is included","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5277,"byte_end":5362,"line_start":136,"line_end":136,"column_start":1,"column_end":86}},{"value":"/ in the `db`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5363,"byte_end":5379,"line_start":137,"line_end":137,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5380,"byte_end":5383,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ For a key `K` that is included in the `db` a proof of inclusion is generated.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5384,"byte_end":5465,"line_start":139,"line_end":139,"column_start":1,"column_end":82}},{"value":"/ For a key `K` that is not included in the `db` a proof of non-inclusion is generated.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5466,"byte_end":5555,"line_start":140,"line_end":140,"column_start":1,"column_end":90}},{"value":"/ These can be later checked in `verify_trie_proof`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5556,"byte_end":5610,"line_start":141,"line_end":141,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":278},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":6387,"byte_end":6404,"line_start":163,"line_end":163,"column_start":8,"column_end":25},"name":"verify_trie_proof","qualname":"::verify_trie_proof","value":"pub fn verify_trie_proof<'a, L: TrieConfiguration, I, K,\n                         V>(&TrieHash<L>, &[Vec<u8>], I)\n-> Result<(), VerifyError<TrieHash<L>, error::Error>> where\nI: IntoIterator<Item = &'a (K, Option<V>)>, K: 'a + AsRef<[u8]>, V: 'a +\nAsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Verify a set of key-value pairs against a trie root and a proof.","sig":null,"attributes":[{"value":"/ Verify a set of key-value pairs against a trie root and a proof.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":5946,"byte_end":6014,"line_start":155,"line_end":155,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":6015,"byte_end":6018,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Checks a set of keys with optional values for inclusion in the proof that was generated by","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":6019,"byte_end":6113,"line_start":157,"line_end":157,"column_start":1,"column_end":95}},{"value":"/ `generate_trie_proof`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":6114,"byte_end":6140,"line_start":158,"line_end":158,"column_start":1,"column_end":27}},{"value":"/ If the value in the pair is supplied (`(key, Some(value))`), this key-value pair will be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":6141,"byte_end":6233,"line_start":159,"line_end":159,"column_start":1,"column_end":93}},{"value":"/ checked for inclusion in the proof.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":6234,"byte_end":6273,"line_start":160,"line_end":160,"column_start":1,"column_end":40}},{"value":"/ If the value is omitted (`(key, None)`), this key will be checked for non-inclusion in the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":6274,"byte_end":6368,"line_start":161,"line_end":161,"column_start":1,"column_end":95}},{"value":"/ proof.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":6369,"byte_end":6379,"line_start":162,"line_end":162,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":284},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":6776,"byte_end":6791,"line_start":176,"line_end":176,"column_start":8,"column_end":23},"name":"delta_trie_root","qualname":"::delta_trie_root","value":"pub fn delta_trie_root<L: TrieConfiguration, I, A, B, DB,\n                       V>(&mut DB, TrieHash<L>, I)\n-> Result<TrieHash<L>, Box<TrieError<L>>> where I: IntoIterator<Item =\n(A, B)>, A: Borrow<[u8]>, B: Borrow<Option<V>>, V: Borrow<[u8]>,\nDB: hash_db::HashDB<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Determine a trie root given a hash DB and delta values.\n","sig":null,"attributes":[{"value":"/ Determine a trie root given a hash DB and delta values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":6709,"byte_end":6768,"line_start":175,"line_end":175,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":292},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":7477,"byte_end":7492,"line_start":205,"line_end":205,"column_start":8,"column_end":23},"name":"read_trie_value","qualname":"::read_trie_value","value":"pub fn read_trie_value<L: TrieConfiguration,\n                       DB: hash_db::HashDBRef<L::Hash,\n                                              trie_db::DBValue>>(&DB,\n                                                                 &TrieHash<L>,\n                                                                 &[u8])\n-> Result<Option<Vec<u8>>, Box<TrieError<L>>>","parent":null,"children":[],"decl_id":null,"docs":" Read a value from the trie.\n","sig":null,"attributes":[{"value":"/ Read a value from the trie.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":7438,"byte_end":7469,"line_start":204,"line_end":204,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":297},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":7799,"byte_end":7819,"line_start":214,"line_end":214,"column_start":8,"column_end":28},"name":"read_trie_value_with","qualname":"::read_trie_value_with","value":"pub fn read_trie_value_with<L: TrieConfiguration, Q: Query<L::Hash, Item =\n                            DBValue>,\n                            DB: hash_db::HashDBRef<L::Hash,\n                                                   trie_db::DBValue>>(&DB,\n                                                                      &TrieHash<L>,\n                                                                      &[u8],\n                                                                      Q)\n-> Result<Option<Vec<u8>>, Box<TrieError<L>>>","parent":null,"children":[],"decl_id":null,"docs":" Read a value from the trie with given Query.\n","sig":null,"attributes":[{"value":"/ Read a value from the trie with given Query.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":7743,"byte_end":7791,"line_start":213,"line_end":213,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":303},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":8173,"byte_end":8188,"line_start":228,"line_end":228,"column_start":8,"column_end":23},"name":"empty_trie_root","qualname":"::empty_trie_root","value":"pub fn empty_trie_root<L: TrieConfiguration>() -> <L::Hash as Hasher>::Out","parent":null,"children":[],"decl_id":null,"docs":" Determine the empty trie root.\n","sig":null,"attributes":[{"value":"/ Determine the empty trie root.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":8131,"byte_end":8165,"line_start":227,"line_end":227,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":305},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":8352,"byte_end":8373,"line_start":233,"line_end":233,"column_start":8,"column_end":29},"name":"empty_child_trie_root","qualname":"::empty_child_trie_root","value":"pub fn empty_child_trie_root<L: TrieConfiguration>()\n-> <L::Hash as Hasher>::Out","parent":null,"children":[],"decl_id":null,"docs":" Determine the empty child trie root.\n","sig":null,"attributes":[{"value":"/ Determine the empty child trie root.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":8304,"byte_end":8344,"line_start":232,"line_end":232,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":307},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":8681,"byte_end":8696,"line_start":239,"line_end":239,"column_start":8,"column_end":23},"name":"child_trie_root","qualname":"::child_trie_root","value":"pub fn child_trie_root<L: TrieConfiguration, I, A, B>(I)\n-> <L::Hash as Hasher>::Out where I: IntoIterator<Item = (A, B)>,\nA: AsRef<[u8]> + Ord, B: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Determine a child trie root given its ordered contents, closed form. H is the default hasher,\n but a generic implementation may ignore this type parameter and use other hashers.\n","sig":null,"attributes":[{"value":"/ Determine a child trie root given its ordered contents, closed form. H is the default hasher,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":8489,"byte_end":8586,"line_start":237,"line_end":237,"column_start":1,"column_end":98}},{"value":"/ but a generic implementation may ignore this type parameter and use other hashers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":8587,"byte_end":8673,"line_start":238,"line_end":238,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":312},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":9064,"byte_end":9085,"line_start":252,"line_end":252,"column_start":8,"column_end":29},"name":"child_delta_trie_root","qualname":"::child_delta_trie_root","value":"pub fn child_delta_trie_root<L: TrieConfiguration, I, A, B, DB, RD,\n                             V>(&[u8], &mut DB, RD, I)\n-> Result<<L::Hash as Hasher>::Out, Box<TrieError<L>>> where\nI: IntoIterator<Item = (A, B)>, A: Borrow<[u8]>, B: Borrow<Option<V>>,\nV: Borrow<[u8]>, RD: AsRef<[u8]>,\nDB: hash_db::HashDB<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Determine a child trie root given a hash DB and delta values. H is the default hasher,\n but a generic implementation may ignore this type parameter and use other hashers.\n","sig":null,"attributes":[{"value":"/ Determine a child trie root given a hash DB and delta values. H is the default hasher,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":8879,"byte_end":8969,"line_start":250,"line_end":250,"column_start":1,"column_end":91}},{"value":"/ but a generic implementation may ignore this type parameter and use other hashers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":8970,"byte_end":9056,"line_start":251,"line_end":251,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":320},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":9807,"byte_end":9829,"line_start":280,"line_end":280,"column_start":8,"column_end":30},"name":"for_keys_in_child_trie","qualname":"::for_keys_in_child_trie","value":"pub fn for_keys_in_child_trie<L: TrieConfiguration, F: FnMut(&[u8]) -> bool,\n                              DB>(&[u8], &DB, &[u8], F)\n-> Result<(), Box<TrieError<L>>> where\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Call `f` for all keys in a child trie.\n Aborts as soon as `f` returns false.\n","sig":null,"attributes":[{"value":"/ Call `f` for all keys in a child trie.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":9716,"byte_end":9758,"line_start":278,"line_end":278,"column_start":1,"column_end":43}},{"value":"/ Aborts as soon as `f` returns false.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":9759,"byte_end":9799,"line_start":279,"line_end":279,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":324},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":10441,"byte_end":10456,"line_start":308,"line_end":308,"column_start":8,"column_end":23},"name":"record_all_keys","qualname":"::record_all_keys","value":"pub fn record_all_keys<L: TrieConfiguration,\n                       DB>(&DB, &TrieHash<L>, &mut Recorder<TrieHash<L>>)\n-> Result<(), Box<TrieError<L>>> where\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Record all keys for a given root.\n","sig":null,"attributes":[{"value":"/ Record all keys for a given root.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":10396,"byte_end":10433,"line_start":307,"line_end":307,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":327},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":10982,"byte_end":11003,"line_start":331,"line_end":331,"column_start":8,"column_end":29},"name":"read_child_trie_value","qualname":"::read_child_trie_value","value":"pub fn read_child_trie_value<L: TrieConfiguration,\n                             DB>(&[u8], &DB, &[u8], &[u8])\n-> Result<Option<Vec<u8>>, Box<TrieError<L>>> where\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Read a value from the child trie.\n","sig":null,"attributes":[{"value":"/ Read a value from the child trie.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":10937,"byte_end":10974,"line_start":330,"line_end":330,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":332},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":11552,"byte_end":11578,"line_start":349,"line_end":349,"column_start":8,"column_end":34},"name":"read_child_trie_value_with","qualname":"::read_child_trie_value_with","value":"pub fn read_child_trie_value_with<L: TrieConfiguration, Q: Query<L::Hash, Item\n                                  = DBValue>, DB>(&[u8], &DB, &[u8], &[u8], Q)\n-> Result<Option<Vec<u8>>, Box<TrieError<L>>> where\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Read a value from the child trie with given query.\n","sig":null,"attributes":[{"value":"/ Read a value from the child trie with given query.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":11490,"byte_end":11544,"line_start":348,"line_end":348,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":12257,"byte_end":12268,"line_start":369,"line_end":369,"column_start":12,"column_end":23},"name":"KeySpacedDB","qualname":"::KeySpacedDB","value":"","parent":null,"children":[],"decl_id":null,"docs":" `HashDB` implementation that append a encoded prefix (unique id bytes) in addition to the\n prefix of every key value.\n","sig":null,"attributes":[{"value":"/ `HashDB` implementation that append a encoded prefix (unique id bytes) in addition to the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":12121,"byte_end":12214,"line_start":367,"line_end":367,"column_start":1,"column_end":94}},{"value":"/ prefix of every key value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":12215,"byte_end":12245,"line_start":368,"line_end":368,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":12518,"byte_end":12532,"line_start":375,"line_end":375,"column_start":12,"column_end":26},"name":"KeySpacedDBMut","qualname":"::KeySpacedDBMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" `HashDBMut` implementation that append a encoded prefix (unique id bytes) in addition to the\n prefix of every key value.","sig":null,"attributes":[{"value":"/ `HashDBMut` implementation that append a encoded prefix (unique id bytes) in addition to the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":12316,"byte_end":12412,"line_start":371,"line_end":371,"column_start":1,"column_end":97}},{"value":"/ prefix of every key value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":12413,"byte_end":12443,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":12444,"byte_end":12447,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ Mutable variant of `KeySpacedDB`, see [`KeySpacedDB`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":12448,"byte_end":12506,"line_start":374,"line_end":374,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":13069,"byte_end":13072,"line_start":390,"line_end":390,"column_start":9,"column_end":12},"name":"new","qualname":"<KeySpacedDB>::new","value":"pub fn new(&'a DB, &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" instantiate new keyspaced db\n","sig":null,"attributes":[{"value":"/ instantiate new keyspaced db","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":13028,"byte_end":13060,"line_start":389,"line_end":389,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":13254,"byte_end":13257,"line_start":399,"line_end":399,"column_start":9,"column_end":12},"name":"new","qualname":"<KeySpacedDBMut>::new","value":"pub fn new(&'a mut DB, &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" instantiate new keyspaced db\n","sig":null,"attributes":[{"value":"/ instantiate new keyspaced db","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":13213,"byte_end":13245,"line_start":398,"line_end":398,"column_start":2,"column_end":34}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/error.rs","byte_start":28638,"byte_end":28643,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/error.rs","byte_start":28747,"byte_end":28752,"line_start":39,"line_end":39,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/error.rs","byte_start":28941,"byte_end":28946,"line_start":49,"line_end":49,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","byte_start":30221,"byte_end":30231,"line_start":40,"line_end":40,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","byte_start":30800,"byte_end":30810,"line_start":54,"line_end":54,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","byte_start":30831,"byte_end":30841,"line_start":56,"line_end":56,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","byte_start":34335,"byte_end":34349,"line_start":40,"line_end":40,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","byte_start":34712,"byte_end":34726,"line_start":59,"line_end":59,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","byte_start":35511,"byte_end":35520,"line_start":90,"line_end":90,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","byte_start":41649,"byte_end":41655,"line_start":274,"line_end":274,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43514,"byte_end":43526,"line_start":34,"line_end":34,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":45171,"byte_end":45195,"line_start":86,"line_end":86,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":45334,"byte_end":45358,"line_start":94,"line_end":94,"column_start":19,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":45500,"byte_end":45508,"line_start":102,"line_end":102,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/trie_stream.rs","byte_start":46821,"byte_end":46831,"line_start":37,"line_end":37,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/trie_stream.rs","byte_start":47938,"byte_end":47948,"line_start":68,"line_end":68,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1905,"byte_end":1911,"line_start":53,"line_end":53,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":2080,"byte_end":2086,"line_start":60,"line_end":60,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":222},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3154,"byte_end":3155,"line_start":91,"line_end":91,"column_start":76,"column_end":77},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":12984,"byte_end":12995,"line_start":386,"line_end":386,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":13166,"byte_end":13180,"line_start":395,"line_end":395,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":13390,"byte_end":13401,"line_start":404,"line_end":404,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":13913,"byte_end":13927,"line_start":420,"line_end":420,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":15067,"byte_end":15081,"line_start":451,"line_end":451,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/error.rs","byte_start":28638,"byte_end":28643,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/error.rs","byte_start":28747,"byte_end":28752,"line_start":39,"line_end":39,"column_start":19,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":398},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/error.rs","byte_start":28941,"byte_end":28946,"line_start":49,"line_end":49,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","byte_start":30221,"byte_end":30231,"line_start":40,"line_end":40,"column_start":17,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":415},"to":{"krate":18,"index":109}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","byte_start":30800,"byte_end":30810,"line_start":54,"line_end":54,"column_start":28,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":415},"to":{"krate":18,"index":699}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_header.rs","byte_start":30831,"byte_end":30841,"line_start":56,"line_end":56,"column_start":17,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":415},"to":{"krate":18,"index":127}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","byte_start":34335,"byte_end":34349,"line_start":40,"line_end":40,"column_start":10,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":68},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","byte_start":34712,"byte_end":34726,"line_start":59,"line_end":59,"column_start":20,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":68},"to":{"krate":18,"index":59}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","byte_start":35511,"byte_end":35520,"line_start":90,"line_end":90,"column_start":32,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":437},"to":{"krate":26,"index":1117}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/node_codec.rs","byte_start":41649,"byte_end":41655,"line_start":274,"line_end":274,"column_start":6,"column_end":12},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":43514,"byte_end":43526,"line_start":34,"line_end":34,"column_start":6,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":45171,"byte_end":45195,"line_start":86,"line_end":86,"column_start":6,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":45334,"byte_end":45358,"line_start":94,"line_end":94,"column_start":19,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/storage_proof.rs","byte_start":45500,"byte_end":45508,"line_start":102,"line_end":102,"column_start":47,"column_end":55},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/trie_stream.rs","byte_start":46821,"byte_end":46831,"line_start":37,"line_end":37,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/trie_stream.rs","byte_start":47938,"byte_end":47948,"line_start":68,"line_end":68,"column_start":32,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":475},"to":{"krate":33,"index":11}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":1905,"byte_end":1911,"line_start":53,"line_end":53,"column_start":32,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":481},"to":{"krate":26,"index":1358}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":2080,"byte_end":2086,"line_start":60,"line_end":60,"column_start":39,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":481},"to":{"krate":26,"index":1363}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3046,"byte_end":3054,"line_start":90,"line_end":90,"column_start":41,"column_end":49},"kind":"SuperTrait","from":{"krate":25,"index":65},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":3154,"byte_end":3155,"line_start":91,"line_end":91,"column_start":76,"column_end":77},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":234},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":12984,"byte_end":12995,"line_start":386,"line_end":386,"column_start":17,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":13166,"byte_end":13180,"line_start":395,"line_end":395,"column_start":17,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":13390,"byte_end":13401,"line_start":404,"line_end":404,"column_start":49,"column_end":60},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":338},"to":{"krate":25,"index":48}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":13913,"byte_end":13927,"line_start":420,"line_end":420,"column_start":46,"column_end":60},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":346},"to":{"krate":25,"index":40}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-3.0.0/src/lib.rs","byte_start":15067,"byte_end":15081,"line_start":451,"line_end":451,"column_start":48,"column_end":62},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":346},"to":{"krate":25,"index":65}}]}