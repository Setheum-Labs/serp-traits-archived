{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0","program":"/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_inherents","--edition=2018","/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"parking_lot\"","--cfg","feature=\"std\"","--cfg","feature=\"thiserror\"","-C","metadata=250d552e0883e68a","-C","extra-filename=-250d552e0883e68a","--out-dir","/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps","-L","dependency=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps","--extern","codec=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libparity_scale_codec-b38ed3f0a4e0f6cc.rmeta","--extern","parking_lot=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libparking_lot-afb3a92a685d414f.rmeta","--extern","sp_core=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_core-cba9ce4ea9a4c43e.rmeta","--extern","sp_std=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_std-0142de4e2fb49a91.rmeta","--extern","thiserror=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libthiserror-d9d70d078273db88.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_inherents-250d552e0883e68a.rmeta"},"prelude":{"crate_id":{"name":"sp_inherents","disambiguator":[7040802491274088198,12990343860866766019]},"crate_root":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src","external_crates":[{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":18,"id":{"name":"parity_scale_codec","disambiguator":[8513279373943582847,10751956381400254447]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":19,"id":{"name":"parity_scale_codec_derive","disambiguator":[3988632595002997288,5128307631409362997]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":20,"id":{"name":"arrayvec","disambiguator":[1943503948824698767,8928204549588057885]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":21,"id":{"name":"byte_slice_cast","disambiguator":[11971851078352766489,17994270080533667189]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":22,"id":{"name":"serde","disambiguator":[9329802083187344169,15516913349122290357]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":23,"id":{"name":"serde_derive","disambiguator":[9132577773600900999,13098957011468639310]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":24,"id":{"name":"sp_std","disambiguator":[9770677728196279493,12510806215599864837]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":25,"id":{"name":"parking_lot","disambiguator":[18159808056392103160,16155596511951534654]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":26,"id":{"name":"instant","disambiguator":[6707731622692707509,11541478860689369278]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":27,"id":{"name":"cfg_if","disambiguator":[11748229077813686416,18120593503603249335]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":28,"id":{"name":"lock_api","disambiguator":[117164551345877035,12793837009537715804]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":29,"id":{"name":"scopeguard","disambiguator":[6745301356711570827,8805850024978740077]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":30,"id":{"name":"parking_lot_core","disambiguator":[13491894724313637548,4430950099799626494]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":31,"id":{"name":"smallvec","disambiguator":[12123569432201045790,1609040209808900757]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":32,"id":{"name":"libc","disambiguator":[7953600248772063458,1989307123664392873]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":33,"id":{"name":"thiserror","disambiguator":[11211909712945309034,1462899715189146714]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","num":34,"id":{"name":"thiserror_impl","disambiguator":[12140497728656256834,17536753507674282886]}}],"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":686,"byte_end":17813,"line_start":18,"line_end":610,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":686,"byte_end":17813,"line_start":18,"line_end":610,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":165},{"krate":0,"index":5},{"krate":0,"index":167},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":79},{"krate":0,"index":103},{"krate":0,"index":93},{"krate":0,"index":88},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":105},{"krate":0,"index":124},{"krate":0,"index":122},{"krate":0,"index":112},{"krate":0,"index":107},{"krate":0,"index":23},{"krate":0,"index":126},{"krate":0,"index":137},{"krate":0,"index":132},{"krate":0,"index":130},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":44},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":145},{"krate":0,"index":46},{"krate":0,"index":58},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72}],"decl_id":null,"docs":" Provides types and traits for creating and checking inherents.","sig":null,"attributes":[{"value":"/ Provides types and traits for creating and checking inherents.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":686,"byte_end":752,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":753,"byte_end":756,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Each inherent is added to a produced block. Each runtime decides on which inherents it","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":757,"byte_end":847,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ wants to attach to its blocks. All data that is required for the runtime to create the inherents","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":848,"byte_end":948,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"/ is stored in the `InherentData`. This `InherentData` is constructed by the node and given to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":949,"byte_end":1045,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ the runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1046,"byte_end":1062,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1063,"byte_end":1066,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Types that provide data for inherents, should implement `InherentDataProvider` and need to be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1067,"byte_end":1164,"line_start":25,"line_end":25,"column_start":1,"column_end":98}},{"value":"/ registered at `InherentDataProviders`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1165,"byte_end":1207,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1208,"byte_end":1211,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the runtime, modules need to implement `ProvideInherent` when they can create and/or check","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1212,"byte_end":1309,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/ inherents. By implementing `ProvideInherent`, a module is not enforced to create an inherent.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1310,"byte_end":1407,"line_start":29,"line_end":29,"column_start":1,"column_end":98}},{"value":"/ A module can also just check given inherents. For using a module as inherent provider, it needs","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1408,"byte_end":1507,"line_start":30,"line_end":30,"column_start":1,"column_end":100}},{"value":"/ to be registered by the `construct_runtime!` macro. The macro documentation gives more","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1508,"byte_end":1598,"line_start":31,"line_end":31,"column_start":1,"column_end":91}},{"value":"/ information on how that is done.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1599,"byte_end":1635,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"warn(missing_docs)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1680,"byte_end":1702,"line_start":35,"line_end":35,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":79},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2091,"byte_end":2096,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that can occur within the inherent data system.\n","sig":null,"attributes":[{"value":"/ An error that can occur within the inherent data system.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1917,"byte_end":1977,"line_start":47,"line_end":47,"column_start":1,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":1978,"byte_end":2001,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"error(\"Inherents: {0}\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2053,"byte_end":2079,"line_start":50,"line_end":50,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2314,"byte_end":2325,"line_start":63,"line_end":63,"column_start":9,"column_end":20},"name":"into_string","qualname":"<Error>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert this error into a `String`.\n","sig":null,"attributes":[{"value":"/ Convert this error into a `String`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2266,"byte_end":2305,"line_start":62,"line_end":62,"column_start":2,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2691,"byte_end":2709,"line_start":81,"line_end":81,"column_start":10,"column_end":28},"name":"InherentIdentifier","qualname":"::InherentIdentifier","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an inherent.\n","sig":null,"attributes":[{"value":"/ An identifier for an inherent.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2647,"byte_end":2681,"line_start":80,"line_end":80,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":105},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2816,"byte_end":2828,"line_start":85,"line_end":85,"column_start":12,"column_end":24},"name":"InherentData","qualname":"::InherentData","value":"InherentData {  }","parent":null,"children":[{"krate":0,"index":106}],"decl_id":null,"docs":" Inherent data to include in a block.\n","sig":null,"attributes":[{"value":"/ Inherent data to include in a block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2722,"byte_end":2762,"line_start":83,"line_end":83,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3009,"byte_end":3012,"line_start":92,"line_end":92,"column_start":9,"column_end":12},"name":"new","qualname":"<InherentData>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2974,"byte_end":3000,"line_start":91,"line_end":91,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3387,"byte_end":3395,"line_start":104,"line_end":104,"column_start":9,"column_end":17},"name":"put_data","qualname":"<InherentData>::put_data","value":"pub fn put_data<I: codec::Encode>(&mut Self, InherentIdentifier, &I)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Put data for an inherent into the internal storage.","sig":null,"attributes":[{"value":"/ Put data for an inherent into the internal storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3048,"byte_end":3103,"line_start":96,"line_end":96,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3105,"byte_end":3108,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ # Return","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3110,"byte_end":3122,"line_start":98,"line_end":98,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3124,"byte_end":3127,"line_start":99,"line_end":99,"column_start":2,"column_end":5}},{"value":"/ Returns `Ok(())` if the data could be inserted and no data for an inherent with the same","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3129,"byte_end":3221,"line_start":100,"line_end":100,"column_start":2,"column_end":94}},{"value":"/ identifier existed, otherwise an error is returned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3223,"byte_end":3278,"line_start":101,"line_end":101,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3280,"byte_end":3283,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ Inherent identifiers need to be unique, otherwise decoding of these values will not work!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3285,"byte_end":3378,"line_start":103,"line_end":103,"column_start":2,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3835,"byte_end":3847,"line_start":123,"line_end":123,"column_start":9,"column_end":21},"name":"replace_data","qualname":"<InherentData>::replace_data","value":"pub fn replace_data<I: codec::Encode>(&mut Self, InherentIdentifier, &I)","parent":null,"children":[],"decl_id":null,"docs":" Replace the data for an inherent.","sig":null,"attributes":[{"value":"/ Replace the data for an inherent.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3730,"byte_end":3767,"line_start":120,"line_end":120,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3769,"byte_end":3772,"line_start":121,"line_end":121,"column_start":2,"column_end":5}},{"value":"/ If it does not exist, the data is just inserted.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3774,"byte_end":3826,"line_start":122,"line_end":122,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4266,"byte_end":4274,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"get_data","qualname":"<InherentData>::get_data","value":"pub fn get_data<I: codec::Decode>(&Self, &InherentIdentifier)\n-> Result<Option<I>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the data for the requested inherent.","sig":null,"attributes":[{"value":"/ Returns the data for the requested inherent.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":3991,"byte_end":4039,"line_start":131,"line_end":131,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4041,"byte_end":4044,"line_start":132,"line_end":132,"column_start":2,"column_end":5}},{"value":"/ # Return","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4046,"byte_end":4058,"line_start":133,"line_end":133,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4060,"byte_end":4063,"line_start":134,"line_end":134,"column_start":2,"column_end":5}},{"value":"/ - `Ok(Some(I))` if the data could be found and deserialized.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4065,"byte_end":4129,"line_start":135,"line_end":135,"column_start":2,"column_end":66}},{"value":"/ - `Ok(None)` if the data could not be found.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4131,"byte_end":4179,"line_start":136,"line_end":136,"column_start":2,"column_end":50}},{"value":"/ - `Err(_)` if the data could be found, but deserialization did not work.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4181,"byte_end":4257,"line_start":137,"line_end":137,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4650,"byte_end":4653,"line_start":154,"line_end":154,"column_start":9,"column_end":12},"name":"len","qualname":"<InherentData>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of inherents in this instance\n","sig":null,"attributes":[{"value":"/ Get the number of inherents in this instance","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4593,"byte_end":4641,"line_start":153,"line_end":153,"column_start":2,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":126},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5003,"byte_end":5023,"line_start":166,"line_end":166,"column_start":12,"column_end":32},"name":"CheckInherentsResult","qualname":"::CheckInherentsResult","value":"CheckInherentsResult {  }","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"decl_id":null,"docs":" The result of checking inherents.","sig":null,"attributes":[{"value":"/ The result of checking inherents.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4696,"byte_end":4733,"line_start":159,"line_end":159,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4734,"byte_end":4737,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ It either returns okay for all checks, stores all occurred errors or just one fatal error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4738,"byte_end":4832,"line_start":161,"line_end":161,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4833,"byte_end":4836,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ When a fatal error occurs, all other errors are removed and the implementation needs to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4837,"byte_end":4928,"line_start":163,"line_end":163,"column_start":1,"column_end":92}},{"value":"/ abort checking inherents.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":4929,"byte_end":4958,"line_start":164,"line_end":164,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5419,"byte_end":5422,"line_start":187,"line_end":187,"column_start":9,"column_end":12},"name":"new","qualname":"<CheckInherentsResult>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5384,"byte_end":5410,"line_start":186,"line_end":186,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5713,"byte_end":5722,"line_start":199,"line_end":199,"column_start":9,"column_end":18},"name":"put_error","qualname":"<CheckInherentsResult>::put_error","value":"pub fn put_error<E: codec::Encode +\n                 IsFatalError>(&mut Self, InherentIdentifier, &E)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Put an error into the result.","sig":null,"attributes":[{"value":"/ Put an error into the result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5458,"byte_end":5491,"line_start":191,"line_end":191,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5493,"byte_end":5496,"line_start":192,"line_end":192,"column_start":2,"column_end":5}},{"value":"/ This makes this result resolve to `ok() == false`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5498,"byte_end":5552,"line_start":193,"line_end":193,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5554,"byte_end":5557,"line_start":194,"line_end":194,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5559,"byte_end":5575,"line_start":195,"line_end":195,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5577,"byte_end":5580,"line_start":196,"line_end":196,"column_start":2,"column_end":5}},{"value":"/ - identifier - The identifier of the inherent that generated the error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5582,"byte_end":5657,"line_start":197,"line_end":197,"column_start":2,"column_end":77}},{"value":"/ - error - The error that will be encoded.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5659,"byte_end":5704,"line_start":198,"line_end":198,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6465,"byte_end":6474,"line_start":228,"line_end":228,"column_start":9,"column_end":18},"name":"get_error","qualname":"<CheckInherentsResult>::get_error","value":"pub fn get_error<E: codec::Decode>(&Self, &InherentIdentifier)\n-> Result<Option<E>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get an error out of the result.","sig":null,"attributes":[{"value":"/ Get an error out of the result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6200,"byte_end":6235,"line_start":221,"line_end":221,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6237,"byte_end":6240,"line_start":222,"line_end":222,"column_start":2,"column_end":5}},{"value":"/ # Return","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6242,"byte_end":6254,"line_start":223,"line_end":223,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6256,"byte_end":6259,"line_start":224,"line_end":224,"column_start":2,"column_end":5}},{"value":"/ - `Ok(Some(I))` if the error could be found and deserialized.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6261,"byte_end":6326,"line_start":225,"line_end":225,"column_start":2,"column_end":67}},{"value":"/ - `Ok(None)` if the error could not be found.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6328,"byte_end":6377,"line_start":226,"line_end":226,"column_start":2,"column_end":51}},{"value":"/ - `Err(_)` if the error could be found, but deserialization did not work.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6379,"byte_end":6456,"line_start":227,"line_end":227,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6675,"byte_end":6686,"line_start":236,"line_end":236,"column_start":9,"column_end":20},"name":"into_errors","qualname":"<CheckInherentsResult>::into_errors","value":"pub fn into_errors(Self) -> IntoIter<InherentIdentifier, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Convert into an iterator over all contained errors.\n","sig":null,"attributes":[{"value":"/ Convert into an iterator over all contained errors.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6611,"byte_end":6666,"line_start":235,"line_end":235,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6803,"byte_end":6805,"line_start":241,"line_end":241,"column_start":9,"column_end":11},"name":"ok","qualname":"<CheckInherentsResult>::ok","value":"pub fn ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this result ok?\n","sig":null,"attributes":[{"value":"/ Is this result ok?","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6772,"byte_end":6794,"line_start":240,"line_end":240,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6875,"byte_end":6886,"line_start":246,"line_end":246,"column_start":9,"column_end":20},"name":"fatal_error","qualname":"<CheckInherentsResult>::fatal_error","value":"pub fn fatal_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a fatal error?\n","sig":null,"attributes":[{"value":"/ Is this a fatal error?","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6840,"byte_end":6866,"line_start":245,"line_end":245,"column_start":2,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7246,"byte_end":7267,"line_start":263,"line_end":263,"column_start":12,"column_end":33},"name":"InherentDataProviders","qualname":"::InherentDataProviders","value":"InherentDataProviders {  }","parent":null,"children":[{"krate":0,"index":144}],"decl_id":null,"docs":" All `InherentData` providers.\n","sig":null,"attributes":[{"value":"/ All `InherentData` providers.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7151,"byte_end":7184,"line_start":260,"line_end":260,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7185,"byte_end":7208,"line_start":261,"line_end":261,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7436,"byte_end":7439,"line_start":270,"line_end":270,"column_start":9,"column_end":12},"name":"new","qualname":"<InherentDataProviders>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7401,"byte_end":7427,"line_start":269,"line_end":269,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7747,"byte_end":7764,"line_start":282,"line_end":282,"column_start":9,"column_end":26},"name":"register_provider","qualname":"<InherentDataProviders>::register_provider","value":"pub fn register_provider<P: ProvideInherentData + Send + Sync +\n                         'static>(&Self, P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Register an `InherentData` provider.","sig":null,"attributes":[{"value":"/ Register an `InherentData` provider.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7475,"byte_end":7515,"line_start":274,"line_end":274,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7517,"byte_end":7520,"line_start":275,"line_end":275,"column_start":2,"column_end":5}},{"value":"/ The registration order is preserved and this order will also be used when creating the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7522,"byte_end":7612,"line_start":276,"line_end":276,"column_start":2,"column_end":92}},{"value":"/ inherent data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7614,"byte_end":7632,"line_start":277,"line_end":277,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7634,"byte_end":7637,"line_start":278,"line_end":278,"column_start":2,"column_end":5}},{"value":"/ # Result","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7639,"byte_end":7651,"line_start":279,"line_end":279,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7653,"byte_end":7656,"line_start":280,"line_end":280,"column_start":2,"column_end":5}},{"value":"/ Will return an error, if a provider with the same identifier already exists.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7658,"byte_end":7738,"line_start":281,"line_end":281,"column_start":2,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":8246,"byte_end":8258,"line_start":301,"line_end":301,"column_start":9,"column_end":21},"name":"has_provider","qualname":"<InherentDataProviders>::has_provider","value":"pub fn has_provider(&Self, &InherentIdentifier) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a provider for the given identifier exists.\n","sig":null,"attributes":[{"value":"/ Returns if a provider for the given identifier exists.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":8179,"byte_end":8237,"line_start":300,"line_end":300,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":8426,"byte_end":8446,"line_start":306,"line_end":306,"column_start":9,"column_end":29},"name":"create_inherent_data","qualname":"<InherentDataProviders>::create_inherent_data","value":"pub fn create_inherent_data(&Self) -> Result<InherentData, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create inherent data.\n","sig":null,"attributes":[{"value":"/ Create inherent data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":8392,"byte_end":8417,"line_start":305,"line_end":305,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":8871,"byte_end":8886,"line_start":318,"line_end":318,"column_start":9,"column_end":24},"name":"error_to_string","qualname":"<InherentDataProviders>::error_to_string","value":"pub fn error_to_string(&Self, &InherentIdentifier, &[u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts a given encoded error into a `String`.","sig":null,"attributes":[{"value":"/ Converts a given encoded error into a `String`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":8716,"byte_end":8767,"line_start":315,"line_end":315,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":8769,"byte_end":8772,"line_start":316,"line_end":316,"column_start":2,"column_end":5}},{"value":"/ Useful if the implementation encounters an error for an identifier it does not know.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":8774,"byte_end":8862,"line_start":317,"line_end":317,"column_start":2,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":58},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":9478,"byte_end":9497,"line_start":342,"line_end":342,"column_start":11,"column_end":30},"name":"ProvideInherentData","qualname":"::ProvideInherentData","value":"ProvideInherentData","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" Something that provides inherent data.\n","sig":null,"attributes":[{"value":"/ Something that provides inherent data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":9401,"byte_end":9443,"line_start":340,"line_end":340,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":9444,"byte_end":9467,"line_start":341,"line_end":341,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":9609,"byte_end":9620,"line_start":345,"line_end":345,"column_start":5,"column_end":16},"name":"on_register","qualname":"::ProvideInherentData::on_register","value":"pub fn on_register(&Self, &InherentDataProviders) -> Result<(), Error>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Is called when this inherent data provider is registered at the given\n `InherentDataProviders`.\n","sig":null,"attributes":[{"value":"/ Is called when this inherent data provider is registered at the given","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":9501,"byte_end":9574,"line_start":343,"line_end":343,"column_start":2,"column_end":75}},{"value":"/ `InherentDataProviders`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":9576,"byte_end":9604,"line_start":344,"line_end":344,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":9763,"byte_end":9782,"line_start":350,"line_end":350,"column_start":5,"column_end":24},"name":"inherent_identifier","qualname":"::ProvideInherentData::inherent_identifier","value":"pub fn inherent_identifier(&Self) -> &'static InherentIdentifier","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" The identifier of the inherent for that data will be provided.\n","sig":null,"attributes":[{"value":"/ The identifier of the inherent for that data will be provided.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":9692,"byte_end":9758,"line_start":349,"line_end":349,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":9965,"byte_end":9986,"line_start":355,"line_end":355,"column_start":5,"column_end":26},"name":"provide_inherent_data","qualname":"::ProvideInherentData::provide_inherent_data","value":"pub fn provide_inherent_data(&Self, &mut InherentData) -> Result<(), Error>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Provide inherent data that should be included in a block.","sig":null,"attributes":[{"value":"/ Provide inherent data that should be included in a block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":9824,"byte_end":9885,"line_start":352,"line_end":352,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":9887,"byte_end":9890,"line_start":353,"line_end":353,"column_start":2,"column_end":5}},{"value":"/ The data should be stored in the given `InherentData` structure.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":9892,"byte_end":9960,"line_start":354,"line_end":354,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":10183,"byte_end":10198,"line_start":360,"line_end":360,"column_start":5,"column_end":20},"name":"error_to_string","qualname":"::ProvideInherentData::error_to_string","value":"pub fn error_to_string(&Self, &[u8]) -> Option<String>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Convert the given encoded error to a string.","sig":null,"attributes":[{"value":"/ Convert the given encoded error to a string.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":10052,"byte_end":10100,"line_start":357,"line_end":357,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":10102,"byte_end":10105,"line_start":358,"line_end":358,"column_start":2,"column_end":5}},{"value":"/ If the given error could not be decoded, `None` should be returned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":10107,"byte_end":10178,"line_start":359,"line_end":359,"column_start":2,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11070,"byte_end":11082,"line_start":380,"line_end":380,"column_start":11,"column_end":23},"name":"IsFatalError","qualname":"::IsFatalError","value":"IsFatalError","parent":null,"children":[{"krate":0,"index":65}],"decl_id":null,"docs":" Did we encounter a fatal error while checking an inherent?","sig":null,"attributes":[{"value":"/ Did we encounter a fatal error while checking an inherent?","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":10536,"byte_end":10598,"line_start":372,"line_end":372,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":10599,"byte_end":10602,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ A fatal error is everything that fails while checking an inherent error, e.g. the inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":10603,"byte_end":10697,"line_start":374,"line_end":374,"column_start":1,"column_end":95}},{"value":"/ was not found, could not be decoded etc.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":10698,"byte_end":10742,"line_start":375,"line_end":375,"column_start":1,"column_end":45}},{"value":"/ Then there are cases where you not want the inherent check to fail, but report that there is an","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":10743,"byte_end":10842,"line_start":376,"line_end":376,"column_start":1,"column_end":100}},{"value":"/ action required. For example a timestamp of a block is in the future, the timestamp is still","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":10843,"byte_end":10939,"line_start":377,"line_end":377,"column_start":1,"column_end":97}},{"value":"/ correct, but it is required to verify the block at a later time again and then the inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":10940,"byte_end":11035,"line_start":378,"line_end":378,"column_start":1,"column_end":96}},{"value":"/ check will succeed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11036,"byte_end":11059,"line_start":379,"line_end":379,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11117,"byte_end":11131,"line_start":382,"line_end":382,"column_start":5,"column_end":19},"name":"is_fatal_error","qualname":"::IsFatalError::is_fatal_error","value":"pub fn is_fatal_error(&Self) -> bool","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Is this a fatal error?\n","sig":null,"attributes":[{"value":"/ Is this a fatal error?","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11086,"byte_end":11112,"line_start":381,"line_end":381,"column_start":2,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11257,"byte_end":11271,"line_start":387,"line_end":387,"column_start":12,"column_end":26},"name":"MakeFatalError","qualname":"::MakeFatalError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary to make any given error resolve to `is_fatal_error() == true`.\n","sig":null,"attributes":[{"value":"/ Auxiliary to make any given error resolve to `is_fatal_error() == true`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11151,"byte_end":11227,"line_start":385,"line_end":385,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":72},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11679,"byte_end":11694,"line_start":404,"line_end":404,"column_start":11,"column_end":26},"name":"ProvideInherent","qualname":"::ProvideInherent","value":"ProvideInherent","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" A pallet that provides or verifies an inherent extrinsic.","sig":null,"attributes":[{"value":"/ A pallet that provides or verifies an inherent extrinsic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11514,"byte_end":11575,"line_start":401,"line_end":401,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11576,"byte_end":11579,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ The pallet may provide the inherent, verify an inherent, or both provide and verify.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11580,"byte_end":11668,"line_start":403,"line_end":403,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":73},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11737,"byte_end":11741,"line_start":406,"line_end":406,"column_start":7,"column_end":11},"name":"Call","qualname":"::ProvideInherent::Call","value":"type Call;","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" The call type of the pallet.\n","sig":null,"attributes":[{"value":"/ The call type of the pallet.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11698,"byte_end":11730,"line_start":405,"line_end":405,"column_start":2,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":74},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11794,"byte_end":11799,"line_start":408,"line_end":408,"column_start":7,"column_end":12},"name":"Error","qualname":"::ProvideInherent::Error","value":"type Error: codec::Encode + IsFatalError;","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" The error returned by `check_inherent`.\n","sig":null,"attributes":[{"value":"/ The error returned by `check_inherent`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11744,"byte_end":11787,"line_start":407,"line_end":407,"column_start":2,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11890,"byte_end":11909,"line_start":410,"line_end":410,"column_start":8,"column_end":27},"name":"INHERENT_IDENTIFIER","qualname":"::ProvideInherent::INHERENT_IDENTIFIER","value":"self::InherentIdentifier","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" The inherent identifier used by this inherent.\n","sig":null,"attributes":[{"value":"/ The inherent identifier used by this inherent.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11832,"byte_end":11882,"line_start":409,"line_end":409,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11999,"byte_end":12014,"line_start":413,"line_end":413,"column_start":5,"column_end":20},"name":"create_inherent","qualname":"::ProvideInherent::create_inherent","value":"pub fn create_inherent(&InherentData) -> Option<Self::Call>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Create an inherent out of the given `InherentData`.\n","sig":null,"attributes":[{"value":"/ Create an inherent out of the given `InherentData`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11939,"byte_end":11994,"line_start":412,"line_end":412,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12758,"byte_end":12778,"line_start":428,"line_end":428,"column_start":5,"column_end":25},"name":"is_inherent_required","qualname":"::ProvideInherent::is_inherent_required","value":"pub fn is_inherent_required(&InherentData)\n-> Result<Option<Self::Error>, Self::Error>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Determines whether this inherent is required in this block.","sig":null,"attributes":[{"value":"/ Determines whether this inherent is required in this block.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12061,"byte_end":12124,"line_start":415,"line_end":415,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12126,"byte_end":12129,"line_start":416,"line_end":416,"column_start":2,"column_end":5}},{"value":"/ - `Ok(None)` indicates that this inherent is not required in this block. The default","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12131,"byte_end":12219,"line_start":417,"line_end":417,"column_start":2,"column_end":90}},{"value":"/ implementation returns this.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12221,"byte_end":12253,"line_start":418,"line_end":418,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12255,"byte_end":12258,"line_start":419,"line_end":419,"column_start":2,"column_end":5}},{"value":"/ - `Ok(Some(e))` indicates that this inherent is required in this block. The","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12260,"byte_end":12339,"line_start":420,"line_end":420,"column_start":2,"column_end":81}},{"value":"/ `impl_outer_inherent!`, will call this function from its `check_extrinsics`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12341,"byte_end":12421,"line_start":421,"line_end":421,"column_start":2,"column_end":82}},{"value":"/ If the inherent is not present, it will return `e`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12423,"byte_end":12478,"line_start":422,"line_end":422,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12480,"byte_end":12483,"line_start":423,"line_end":423,"column_start":2,"column_end":5}},{"value":"/ - `Err(_)` indicates that this function failed and further operations should be aborted.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12485,"byte_end":12577,"line_start":424,"line_end":424,"column_start":2,"column_end":94}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12579,"byte_end":12582,"line_start":425,"line_end":425,"column_start":2,"column_end":5}},{"value":"/ CAUTION: This check has a bug when used in pallets that also provide unsigned transactions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12584,"byte_end":12679,"line_start":426,"line_end":426,"column_start":2,"column_end":97}},{"value":"/ See https://github.com/paritytech/substrate/issues/6243 for details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12681,"byte_end":12753,"line_start":427,"line_end":427,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":13241,"byte_end":13255,"line_start":436,"line_end":436,"column_start":5,"column_end":19},"name":"check_inherent","qualname":"::ProvideInherent::check_inherent","value":"pub fn check_inherent(&Self::Call, &InherentData) -> Result<(), Self::Error>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Check whether the given inherent is valid. Checking the inherent is optional and can be\n omitted by using the default implementation.","sig":null,"attributes":[{"value":"/ Check whether the given inherent is valid. Checking the inherent is optional and can be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12856,"byte_end":12947,"line_start":430,"line_end":430,"column_start":2,"column_end":93}},{"value":"/ omitted by using the default implementation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12949,"byte_end":12997,"line_start":431,"line_end":431,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":12999,"byte_end":13002,"line_start":432,"line_end":432,"column_start":2,"column_end":5}},{"value":"/ When checking an inherent, the first parameter represents the inherent that is actually","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":13004,"byte_end":13095,"line_start":433,"line_end":433,"column_start":2,"column_end":93}},{"value":"/ included in the block by its author. Whereas the second parameter represents the inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":13097,"byte_end":13190,"line_start":434,"line_end":434,"column_start":2,"column_end":95}},{"value":"/ data that the verifying node calculates.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":13192,"byte_end":13236,"line_start":435,"line_end":435,"column_start":2,"column_end":46}}]}],"impls":[{"id":5,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2165,"byte_end":2170,"line_start":54,"line_end":54,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2257,"byte_end":2262,"line_start":61,"line_end":61,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2958,"byte_end":2970,"line_start":90,"line_end":90,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5219,"byte_end":5239,"line_start":175,"line_end":175,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5360,"byte_end":5380,"line_start":185,"line_end":185,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6972,"byte_end":6992,"line_start":252,"line_end":252,"column_start":20,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7376,"byte_end":7397,"line_start":268,"line_end":268,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11330,"byte_end":11344,"line_start":389,"line_end":389,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11445,"byte_end":11459,"line_start":395,"line_end":395,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2165,"byte_end":2170,"line_start":54,"line_end":54,"column_start":35,"column_end":40},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":79},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2257,"byte_end":2262,"line_start":61,"line_end":61,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":79},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":2958,"byte_end":2970,"line_start":90,"line_end":90,"column_start":6,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5219,"byte_end":5239,"line_start":175,"line_end":175,"column_start":18,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":5360,"byte_end":5380,"line_start":185,"line_end":185,"column_start":6,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":6972,"byte_end":6992,"line_start":252,"line_end":252,"column_start":20,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":7376,"byte_end":7397,"line_start":268,"line_end":268,"column_start":6,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11330,"byte_end":11344,"line_start":389,"line_end":389,"column_start":36,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-3.0.0/src/lib.rs","byte_start":11445,"byte_end":11459,"line_start":395,"line_end":395,"column_start":41,"column_end":55},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":149},"to":{"krate":0,"index":64}}]}