{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0","program":"/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_storage","--edition=2018","/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"impl-serde\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=588138ce595d0a7a","-C","extra-filename=-588138ce595d0a7a","--out-dir","/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps","-L","dependency=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps","--extern","impl_serde=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libimpl_serde-a84e9f3b94e1b7f9.rmeta","--extern","codec=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libparity_scale_codec-b38ed3f0a4e0f6cc.rmeta","--extern","ref_cast=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libref_cast-d6559325485c0fed.rmeta","--extern","serde=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libserde-c1d0451fd273a165.rmeta","--extern","sp_debug_derive=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_debug_derive-4bb80bd719205d46.so","--extern","sp_std=/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_std-0142de4e2fb49a91.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iamkhalifaMBA/Documents/GitHub/serp-traits/target/rls/debug/deps/libsp_storage-588138ce595d0a7a.rmeta"},"prelude":{"crate_id":{"name":"sp_storage","disambiguator":[12236995375180460119,10483812130181742021]},"crate_root":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src","external_crates":[{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":18,"id":{"name":"serde","disambiguator":[9329802083187344169,15516913349122290357]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":19,"id":{"name":"serde_derive","disambiguator":[9132577773600900999,13098957011468639310]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":20,"id":{"name":"sp_debug_derive","disambiguator":[1127781656639809926,12270005864681690604]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":21,"id":{"name":"sp_std","disambiguator":[9770677728196279493,12510806215599864837]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":22,"id":{"name":"ref_cast","disambiguator":[3109219419575014207,1073703474336682823]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":23,"id":{"name":"ref_cast_impl","disambiguator":[548036109860010999,5849971523560802531]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":24,"id":{"name":"parity_scale_codec","disambiguator":[8513279373943582847,10751956381400254447]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":25,"id":{"name":"parity_scale_codec_derive","disambiguator":[3988632595002997288,5128307631409362997]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":26,"id":{"name":"arrayvec","disambiguator":[1943503948824698767,8928204549588057885]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":27,"id":{"name":"byte_slice_cast","disambiguator":[11971851078352766489,17994270080533667189]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","num":28,"id":{"name":"impl_serde","disambiguator":[807954869803654047,4716339343125958352]}}],"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":686,"byte_end":11771,"line_start":18,"line_end":379,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":686,"byte_end":11771,"line_start":18,"line_end":379,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":467},{"krate":0,"index":5},{"krate":0,"index":469},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":479},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":481},{"krate":0,"index":15},{"krate":0,"index":483},{"krate":0,"index":56},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":115},{"krate":0,"index":101},{"krate":0,"index":72},{"krate":0,"index":69},{"krate":0,"index":63},{"krate":0,"index":61},{"krate":0,"index":59},{"krate":0,"index":124},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":160},{"krate":0,"index":158},{"krate":0,"index":152},{"krate":0,"index":147},{"krate":0,"index":144},{"krate":0,"index":130},{"krate":0,"index":128},{"krate":0,"index":16},{"krate":0,"index":169},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":234},{"krate":0,"index":220},{"krate":0,"index":191},{"krate":0,"index":188},{"krate":0,"index":182},{"krate":0,"index":180},{"krate":0,"index":178},{"krate":0,"index":172},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":243},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":302},{"krate":0,"index":288},{"krate":0,"index":259},{"krate":0,"index":256},{"krate":0,"index":250},{"krate":0,"index":248},{"krate":0,"index":246},{"krate":0,"index":27},{"krate":0,"index":311},{"krate":0,"index":323},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":314},{"krate":0,"index":325},{"krate":0,"index":332},{"krate":0,"index":330},{"krate":0,"index":328},{"krate":0,"index":334},{"krate":0,"index":402},{"krate":0,"index":395},{"krate":0,"index":349},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":28},{"krate":0,"index":405},{"krate":0,"index":429},{"krate":0,"index":427},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":417},{"krate":0,"index":411},{"krate":0,"index":409},{"krate":0,"index":37},{"krate":0,"index":431},{"krate":0,"index":441},{"krate":0,"index":440},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":435},{"krate":0,"index":46},{"krate":0,"index":443},{"krate":0,"index":465},{"krate":0,"index":463},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":453},{"krate":0,"index":447},{"krate":0,"index":445},{"krate":0,"index":54}],"decl_id":null,"docs":" Primitive types for storage related stuff.\n","sig":null,"attributes":[{"value":"/ Primitive types for storage related stuff.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":686,"byte_end":732,"line_start":18,"line_end":18,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":56},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":1134,"byte_end":1144,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"StorageKey","qualname":"::StorageKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Storage key.\n","sig":null,"attributes":[{"value":"/ Storage key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":976,"byte_end":992,"line_start":30,"line_end":30,"column_start":1,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":58},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":1214,"byte_end":1225,"line_start":35,"line_end":35,"column_start":2,"column_end":13},"name":"0","qualname":"::StorageKey::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(with = \"impl_serde::serialize\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":1175,"byte_end":1210,"line_start":34,"line_end":34,"column_start":30,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":1418,"byte_end":1435,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"TrackedStorageKey","qualname":"::TrackedStorageKey","value":"TrackedStorageKey { key, has_been_read, has_been_written }","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" Storage key with read/write tracking information.\n","sig":null,"attributes":[{"value":"/ Storage key with read/write tracking information.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":1231,"byte_end":1284,"line_start":38,"line_end":38,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":125},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":1443,"byte_end":1446,"line_start":42,"line_end":42,"column_start":6,"column_end":9},"name":"key","qualname":"::TrackedStorageKey::key","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":126},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":1462,"byte_end":1475,"line_start":43,"line_end":43,"column_start":6,"column_end":19},"name":"has_been_read","qualname":"::TrackedStorageKey::has_been_read","value":"bool","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":127},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":1488,"byte_end":1504,"line_start":44,"line_end":44,"column_start":6,"column_end":22},"name":"has_been_written","qualname":"::TrackedStorageKey::has_been_written","value":"bool","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2007,"byte_end":2025,"line_start":63,"line_end":63,"column_start":12,"column_end":30},"name":"PrefixedStorageKey","qualname":"::PrefixedStorageKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Storage key of a child trie, it contains the prefix to the key.\n","sig":null,"attributes":[{"value":"/ Storage key of a child trie, it contains the prefix to the key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":1758,"byte_end":1825,"line_start":58,"line_end":58,"column_start":1,"column_end":68}},{"value":"repr(transparent)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":1956,"byte_end":1976,"line_start":61,"line_end":61,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2428,"byte_end":2431,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"name":"new","qualname":"<PrefixedStorageKey>::new","value":"pub fn new(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a prefixed storage key from its byte array\n representation.\n","sig":null,"attributes":[{"value":"/ Create a prefixed storage key from its byte array","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2345,"byte_end":2398,"line_start":83,"line_end":83,"column_start":2,"column_end":55}},{"value":"/ representation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2400,"byte_end":2419,"line_start":84,"line_end":84,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2544,"byte_end":2551,"line_start":90,"line_end":90,"column_start":9,"column_end":16},"name":"new_ref","qualname":"<PrefixedStorageKey>::new_ref","value":"pub fn new_ref(&Vec<u8>) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Create a prefixed storage key reference.\n","sig":null,"attributes":[{"value":"/ Create a prefixed storage key reference.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2491,"byte_end":2535,"line_start":89,"line_end":89,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2746,"byte_end":2756,"line_start":98,"line_end":98,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<PrefixedStorageKey>::into_inner","value":"pub fn into_inner(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get inner key, this should\n only be needed when writing\n into parent trie to avoid an\n allocation.\n","sig":null,"attributes":[{"value":"/ Get inner key, this should","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2623,"byte_end":2653,"line_start":94,"line_end":94,"column_start":2,"column_end":32}},{"value":"/ only be needed when writing","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2655,"byte_end":2686,"line_start":95,"line_end":95,"column_start":2,"column_end":33}},{"value":"/ into parent trie to avoid an","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2688,"byte_end":2720,"line_start":96,"line_end":96,"column_start":2,"column_end":34}},{"value":"/ allocation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2722,"byte_end":2737,"line_start":97,"line_end":97,"column_start":2,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":243},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2981,"byte_end":2992,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"StorageData","qualname":"::StorageData","value":"","parent":null,"children":[],"decl_id":null,"docs":" Storage data associated to a [`StorageKey`].\n","sig":null,"attributes":[{"value":"/ Storage data associated to a [`StorageKey`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2791,"byte_end":2839,"line_start":103,"line_end":103,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":245},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3062,"byte_end":3073,"line_start":108,"line_end":108,"column_start":2,"column_end":13},"name":"0","qualname":"::StorageData::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(with = \"impl_serde::serialize\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3023,"byte_end":3058,"line_start":107,"line_end":107,"column_start":30,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":27},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3196,"byte_end":3206,"line_start":114,"line_end":114,"column_start":10,"column_end":20},"name":"StorageMap","qualname":"::StorageMap","value":"std::collections::BTreeMap<Vec<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Map of data to use in a storage, it is a collection of\n byte key and values.\n","sig":null,"attributes":[{"value":"/ Map of data to use in a storage, it is a collection of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3079,"byte_end":3137,"line_start":111,"line_end":111,"column_start":1,"column_end":59}},{"value":"/ byte key and values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3138,"byte_end":3162,"line_start":112,"line_end":112,"column_start":1,"column_end":25}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3163,"byte_end":3186,"line_start":113,"line_end":113,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3359,"byte_end":3371,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"StorageChild","qualname":"::StorageChild","value":"StorageChild { data, child_info }","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"decl_id":null,"docs":" Child trie storage data.\n","sig":null,"attributes":[{"value":"/ Child trie storage data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3256,"byte_end":3284,"line_start":116,"line_end":116,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3285,"byte_end":3308,"line_start":117,"line_end":117,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":312},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3408,"byte_end":3412,"line_start":121,"line_end":121,"column_start":6,"column_end":10},"name":"data","qualname":"::StorageChild::data","value":"std::collections::BTreeMap<std::vec::Vec<u8>, std::vec::Vec<u8>>","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" Child data for storage.\n","sig":null,"attributes":[{"value":"/ Child data for storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3375,"byte_end":3402,"line_start":120,"line_end":120,"column_start":2,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":313},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3481,"byte_end":3491,"line_start":124,"line_end":124,"column_start":6,"column_end":16},"name":"child_info","qualname":"::StorageChild::child_info","value":"ChildInfo","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" Associated child info for a child\n trie.\n","sig":null,"attributes":[{"value":"/ Associated child info for a child","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3427,"byte_end":3464,"line_start":122,"line_end":122,"column_start":2,"column_end":39}},{"value":"/ trie.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3466,"byte_end":3475,"line_start":123,"line_end":123,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":325},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3624,"byte_end":3631,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"Storage","qualname":"::Storage","value":"Storage { top, children_default }","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"decl_id":null,"docs":" Struct containing data needed for a storage.\n","sig":null,"attributes":[{"value":"/ Struct containing data needed for a storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3507,"byte_end":3555,"line_start":127,"line_end":127,"column_start":1,"column_end":49}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3556,"byte_end":3579,"line_start":128,"line_end":128,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":326},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3667,"byte_end":3670,"line_start":132,"line_end":132,"column_start":6,"column_end":9},"name":"top","qualname":"::Storage::top","value":"std::collections::BTreeMap<std::vec::Vec<u8>, std::vec::Vec<u8>>","parent":{"krate":0,"index":325},"children":[],"decl_id":null,"docs":" Top trie storage data.\n","sig":null,"attributes":[{"value":"/ Top trie storage data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3635,"byte_end":3661,"line_start":131,"line_end":131,"column_start":2,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":327},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3864,"byte_end":3880,"line_start":137,"line_end":137,"column_start":6,"column_end":22},"name":"children_default","qualname":"::Storage::children_default","value":"std::collections::HashMap<std::vec::Vec<u8>, StorageChild>","parent":{"krate":0,"index":325},"children":[],"decl_id":null,"docs":" Children trie storage data.\n The key does not including prefix, for the `default`\n trie kind, so this is exclusively for the `ChildType::ParentKeyId`\n tries.\n","sig":null,"attributes":[{"value":"/ Children trie storage data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3685,"byte_end":3716,"line_start":133,"line_end":133,"column_start":2,"column_end":33}},{"value":"/ The key does not including prefix, for the `default`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3718,"byte_end":3774,"line_start":134,"line_end":134,"column_start":2,"column_end":58}},{"value":"/ trie kind, so this is exclusively for the `ChildType::ParentKeyId`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3776,"byte_end":3846,"line_start":135,"line_end":135,"column_start":2,"column_end":72}},{"value":"/ tries.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3848,"byte_end":3858,"line_start":136,"line_end":136,"column_start":2,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4131,"byte_end":4147,"line_start":144,"line_end":144,"column_start":12,"column_end":28},"name":"StorageChangeSet","qualname":"::StorageChangeSet","value":"StorageChangeSet { block, changes }","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"decl_id":null,"docs":" Storage change set\n","sig":null,"attributes":[{"value":"/ Storage change set","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":3935,"byte_end":3957,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4086,"byte_end":4117,"line_start":143,"line_end":143,"column_start":29,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":336},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4177,"byte_end":4182,"line_start":146,"line_end":146,"column_start":6,"column_end":11},"name":"block","qualname":"::StorageChangeSet::block","value":"Hash","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" Block hash\n","sig":null,"attributes":[{"value":"/ Block hash","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4157,"byte_end":4171,"line_start":145,"line_end":145,"column_start":2,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":337},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4218,"byte_end":4225,"line_start":148,"line_end":148,"column_start":6,"column_end":13},"name":"changes","qualname":"::StorageChangeSet::changes","value":"std::vec::Vec<(StorageKey, std::option::Option<StorageData>)>","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" A list of changes\n","sig":null,"attributes":[{"value":"/ A list of changes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4191,"byte_end":4212,"line_start":147,"line_end":147,"column_start":2,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4335,"byte_end":4350,"line_start":152,"line_end":152,"column_start":9,"column_end":24},"name":"well_known_keys","qualname":"::well_known_keys","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" List of all well known keys and prefixes in storage.\n","sig":null,"attributes":[{"value":"/ List of all well known keys and prefixes in storage.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4270,"byte_end":4326,"line_start":151,"line_end":151,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":29},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4457,"byte_end":4461,"line_start":156,"line_end":156,"column_start":12,"column_end":16},"name":"CODE","qualname":"::well_known_keys::CODE","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Wasm code of the runtime.","sig":null,"attributes":[{"value":"/ Wasm code of the runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4354,"byte_end":4383,"line_start":153,"line_end":153,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4385,"byte_end":4388,"line_start":154,"line_end":154,"column_start":2,"column_end":5}},{"value":"/ Stored as a raw byte vector. Required by substrate.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4390,"byte_end":4445,"line_start":155,"line_end":155,"column_start":2,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":30},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4631,"byte_end":4641,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"HEAP_PAGES","qualname":"::well_known_keys::HEAP_PAGES","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Number of wasm linear memory pages required for execution of the runtime.","sig":null,"attributes":[{"value":"/ Number of wasm linear memory pages required for execution of the runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4491,"byte_end":4568,"line_start":158,"line_end":158,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4570,"byte_end":4573,"line_start":159,"line_end":159,"column_start":2,"column_end":5}},{"value":"/ The type of this value is encoded `u64`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4575,"byte_end":4619,"line_start":160,"line_end":160,"column_start":2,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":31},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4747,"byte_end":4762,"line_start":164,"line_end":164,"column_start":12,"column_end":27},"name":"EXTRINSIC_INDEX","qualname":"::well_known_keys::EXTRINSIC_INDEX","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Current extrinsic index (u32) is stored under this key.\n","sig":null,"attributes":[{"value":"/ Current extrinsic index (u32) is stored under this key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4676,"byte_end":4735,"line_start":163,"line_end":163,"column_start":2,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":32},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4871,"byte_end":4890,"line_start":167,"line_end":167,"column_start":12,"column_end":31},"name":"CHANGES_TRIE_CONFIG","qualname":"::well_known_keys::CHANGES_TRIE_CONFIG","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Changes trie configuration is stored under this key.\n","sig":null,"attributes":[{"value":"/ Changes trie configuration is stored under this key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4803,"byte_end":4859,"line_start":166,"line_end":166,"column_start":2,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":33},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4973,"byte_end":4997,"line_start":170,"line_end":170,"column_start":12,"column_end":36},"name":"CHILD_STORAGE_KEY_PREFIX","qualname":"::well_known_keys::CHILD_STORAGE_KEY_PREFIX","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Prefix of child storage keys.\n","sig":null,"attributes":[{"value":"/ Prefix of child storage keys.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":4928,"byte_end":4961,"line_start":169,"line_end":169,"column_start":2,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":34},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":5110,"byte_end":5142,"line_start":173,"line_end":173,"column_start":12,"column_end":44},"name":"DEFAULT_CHILD_STORAGE_KEY_PREFIX","qualname":"::well_known_keys::DEFAULT_CHILD_STORAGE_KEY_PREFIX","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Prefix of the default child storage keys in the top trie.\n","sig":null,"attributes":[{"value":"/ Prefix of the default child storage keys in the top trie.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":5037,"byte_end":5098,"line_start":172,"line_end":172,"column_start":2,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":5406,"byte_end":5426,"line_start":179,"line_end":179,"column_start":9,"column_end":29},"name":"is_child_storage_key","qualname":"::well_known_keys::is_child_storage_key","value":"pub fn is_child_storage_key(&[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether a key is a child storage key.","sig":null,"attributes":[{"value":"/ Whether a key is a child storage key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":5190,"byte_end":5231,"line_start":175,"line_end":175,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":5233,"byte_end":5236,"line_start":176,"line_end":176,"column_start":2,"column_end":5}},{"value":"/ This is convenience function which basically checks if the given `key` starts","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":5238,"byte_end":5319,"line_start":177,"line_end":177,"column_start":2,"column_end":83}},{"value":"/ with `CHILD_STORAGE_KEY_PREFIX` and doesn't do anything apart from that.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":5321,"byte_end":5397,"line_start":178,"line_end":178,"column_start":2,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":5666,"byte_end":5695,"line_start":185,"line_end":185,"column_start":9,"column_end":38},"name":"starts_with_child_storage_key","qualname":"::well_known_keys::starts_with_child_storage_key","value":"pub fn starts_with_child_storage_key(&[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the given `key` starts with [`CHILD_STORAGE_KEY_PREFIX`] or collides with it.\n","sig":null,"attributes":[{"value":"/ Returns if the given `key` starts with [`CHILD_STORAGE_KEY_PREFIX`] or collides with it.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":5565,"byte_end":5657,"line_start":184,"line_end":184,"column_start":2,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":406},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6081,"byte_end":6092,"line_start":200,"line_end":200,"column_start":2,"column_end":13},"name":"ParentKeyId","qualname":"::ChildInfo::ParentKeyId","value":"ChildInfo::ParentKeyId(ChildTrieParentKeyId)","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" This is the one used by default.\n","sig":null,"attributes":[{"value":"/ This is the one used by default.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6043,"byte_end":6079,"line_start":199,"line_end":199,"column_start":2,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":405},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6030,"byte_end":6039,"line_start":198,"line_end":198,"column_start":10,"column_end":19},"name":"ChildInfo","qualname":"::ChildInfo","value":"pub enum ChildInfo {\n\n    /// This is the one used by default.\n    ParentKeyId(ChildTrieParentKeyId),\n}","parent":null,"children":[{"krate":0,"index":406}],"decl_id":null,"docs":" Information related to a child state.\n","sig":null,"attributes":[{"value":"/ Information related to a child state.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":5880,"byte_end":5921,"line_start":195,"line_end":195,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6289,"byte_end":6300,"line_start":207,"line_end":207,"column_start":9,"column_end":20},"name":"new_default","qualname":"<ChildInfo>::new_default","value":"pub fn new_default(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Instantiates child information for a default child trie\n of kind `ChildType::ParentKeyId`, using an unprefixed parent\n storage key.\n","sig":null,"attributes":[{"value":"/ Instantiates child information for a default child trie","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6137,"byte_end":6196,"line_start":204,"line_end":204,"column_start":2,"column_end":61}},{"value":"/ of kind `ChildType::ParentKeyId`, using an unprefixed parent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6198,"byte_end":6262,"line_start":205,"line_end":205,"column_start":2,"column_end":66}},{"value":"/ storage key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6264,"byte_end":6280,"line_start":206,"line_end":206,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6490,"byte_end":6510,"line_start":213,"line_end":213,"column_start":9,"column_end":29},"name":"new_default_from_vec","qualname":"<ChildInfo>::new_default_from_vec","value":"pub fn new_default_from_vec(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same as `new_default` but with `Vec<u8>` as input.\n","sig":null,"attributes":[{"value":"/ Same as `new_default` but with `Vec<u8>` as input.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6427,"byte_end":6481,"line_start":212,"line_end":212,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6727,"byte_end":6737,"line_start":221,"line_end":221,"column_start":9,"column_end":19},"name":"try_update","qualname":"<ChildInfo>::try_update","value":"pub fn try_update(&mut Self, &ChildInfo) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Try to update with another instance, return false if both instance\n are not compatible.\n","sig":null,"attributes":[{"value":"/ Try to update with another instance, return false if both instance","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6623,"byte_end":6693,"line_start":219,"line_end":219,"column_start":2,"column_end":72}},{"value":"/ are not compatible.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6695,"byte_end":6718,"line_start":220,"line_end":220,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":7142,"byte_end":7150,"line_start":230,"line_end":230,"column_start":9,"column_end":17},"name":"keyspace","qualname":"<ChildInfo>::keyspace","value":"pub fn keyspace(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns byte sequence (keyspace) that can be use by underlying db to isolate keys.\n This is a unique id of the child trie. The collision resistance of this value\n depends on the type of child info use. For `ChildInfo::Default` it is and need to be.\n","sig":null,"attributes":[{"value":"/ Returns byte sequence (keyspace) that can be use by underlying db to isolate keys.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6873,"byte_end":6959,"line_start":227,"line_end":227,"column_start":2,"column_end":88}},{"value":"/ This is a unique id of the child trie. The collision resistance of this value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6961,"byte_end":7042,"line_start":228,"line_end":228,"column_start":2,"column_end":83}},{"value":"/ depends on the type of child info use. For `ChildInfo::Default` it is and need to be.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":7044,"byte_end":7133,"line_start":229,"line_end":229,"column_start":2,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":7397,"byte_end":7408,"line_start":239,"line_end":239,"column_start":9,"column_end":20},"name":"storage_key","qualname":"<ChildInfo>::storage_key","value":"pub fn storage_key(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the location in the direct parent of\n this trie but without the common prefix for this kind of\n child trie.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the location in the direct parent of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":7246,"byte_end":7309,"line_start":236,"line_end":236,"column_start":2,"column_end":65}},{"value":"/ this trie but without the common prefix for this kind of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":7311,"byte_end":7371,"line_start":237,"line_end":237,"column_start":2,"column_end":62}},{"value":"/ child trie.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":7373,"byte_end":7388,"line_start":238,"line_end":238,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":7609,"byte_end":7629,"line_start":249,"line_end":249,"column_start":9,"column_end":29},"name":"prefixed_storage_key","qualname":"<ChildInfo>::prefixed_storage_key","value":"pub fn prefixed_storage_key(&Self) -> PrefixedStorageKey","parent":null,"children":[],"decl_id":null,"docs":" Return a the full location in the direct parent of\n this trie.\n","sig":null,"attributes":[{"value":"/ Return a the full location in the direct parent of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":7530,"byte_end":7584,"line_start":247,"line_end":247,"column_start":2,"column_end":56}},{"value":"/ this trie.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":7586,"byte_end":7600,"line_start":248,"line_end":248,"column_start":2,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":7891,"byte_end":7916,"line_start":259,"line_end":259,"column_start":9,"column_end":34},"name":"into_prefixed_storage_key","qualname":"<ChildInfo>::into_prefixed_storage_key","value":"pub fn into_prefixed_storage_key(Self) -> PrefixedStorageKey","parent":null,"children":[],"decl_id":null,"docs":" Returns a the full location in the direct parent of\n this trie.\n","sig":null,"attributes":[{"value":"/ Returns a the full location in the direct parent of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":7811,"byte_end":7866,"line_start":257,"line_end":257,"column_start":2,"column_end":57}},{"value":"/ this trie.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":7868,"byte_end":7882,"line_start":258,"line_end":258,"column_start":2,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8183,"byte_end":8193,"line_start":271,"line_end":271,"column_start":9,"column_end":19},"name":"child_type","qualname":"<ChildInfo>::child_type","value":"pub fn child_type(&Self) -> ChildType","parent":null,"children":[],"decl_id":null,"docs":" Returns the type for this child info.\n","sig":null,"attributes":[{"value":"/ Returns the type for this child info.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8133,"byte_end":8174,"line_start":270,"line_end":270,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":432},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8703,"byte_end":8714,"line_start":287,"line_end":287,"column_start":2,"column_end":13},"name":"ParentKeyId","qualname":"::ChildType::ParentKeyId","value":"ChildType::ParentKeyId","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" If runtime module ensures that the child key is a unique id that will\n only be used once, its parent key is used as a child trie unique id.\n","sig":null,"attributes":[{"value":"/ If runtime module ensures that the child key is a unique id that will","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8554,"byte_end":8627,"line_start":285,"line_end":285,"column_start":2,"column_end":75}},{"value":"/ only be used once, its parent key is used as a child trie unique id.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8629,"byte_end":8701,"line_start":286,"line_end":286,"column_start":2,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":431},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8541,"byte_end":8550,"line_start":284,"line_end":284,"column_start":10,"column_end":19},"name":"ChildType","qualname":"::ChildType","value":"pub enum ChildType {\n\n    /// If runtime module ensures that the child key is a unique id that will\n    /// only be used once, its parent key is used as a child trie unique id.\n    ParentKeyId = ,\n}","parent":null,"children":[{"krate":0,"index":432}],"decl_id":null,"docs":" Type of child.\n It does not strictly define different child type, it can also\n be related to technical consideration or api variant.\n","sig":null,"attributes":[{"value":"/ Type of child.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8298,"byte_end":8316,"line_start":278,"line_end":278,"column_start":1,"column_end":19}},{"value":"/ It does not strictly define different child type, it can also","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8317,"byte_end":8382,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/ be related to technical consideration or api variant.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8383,"byte_end":8440,"line_start":280,"line_end":280,"column_start":1,"column_end":58}},{"value":"repr(u32)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8441,"byte_end":8453,"line_start":281,"line_end":281,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8808,"byte_end":8811,"line_start":292,"line_end":292,"column_start":9,"column_end":12},"name":"new","qualname":"<ChildType>::new","value":"pub fn new(u32) -> Option<ChildType>","parent":null,"children":[],"decl_id":null,"docs":" Try to get a child type from its `u32` representation.\n","sig":null,"attributes":[{"value":"/ Try to get a child type from its `u32` representation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8741,"byte_end":8799,"line_start":291,"line_end":291,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":9086,"byte_end":9103,"line_start":301,"line_end":301,"column_start":9,"column_end":26},"name":"from_prefixed_key","qualname":"<ChildType>::from_prefixed_key","value":"pub fn from_prefixed_key<'a>(&'a PrefixedStorageKey)\n-> Option<(Self, &'a [u8])>","parent":null,"children":[],"decl_id":null,"docs":" Transform a prefixed key into a tuple of the child type\n and the unprefixed representation of the key.\n","sig":null,"attributes":[{"value":"/ Transform a prefixed key into a tuple of the child type","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8967,"byte_end":9026,"line_start":299,"line_end":299,"column_start":2,"column_end":61}},{"value":"/ and the unprefixed representation of the key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":9028,"byte_end":9077,"line_start":300,"line_end":300,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":10288,"byte_end":10301,"line_start":335,"line_end":335,"column_start":9,"column_end":22},"name":"parent_prefix","qualname":"<ChildType>::parent_prefix","value":"pub fn parent_prefix(&Self) -> &'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the location reserved for this child trie in their parent trie if there\n is one.\n","sig":null,"attributes":[{"value":"/ Returns the location reserved for this child trie in their parent trie if there","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":10183,"byte_end":10266,"line_start":333,"line_end":333,"column_start":2,"column_end":85}},{"value":"/ is one.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":10268,"byte_end":10279,"line_start":334,"line_end":334,"column_start":2,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":11049,"byte_end":11069,"line_start":353,"line_end":353,"column_start":12,"column_end":32},"name":"ChildTrieParentKeyId","qualname":"::ChildTrieParentKeyId","value":"ChildTrieParentKeyId {  }","parent":null,"children":[{"krate":0,"index":444}],"decl_id":null,"docs":" A child trie of default type.\n It uses the same default implementation as the top trie,\n top trie being a child trie with no keyspace and no storage key.\n Its keyspace is the variable (unprefixed) part of its storage key.\n It shares its trie nodes backend storage with every other\n child trie, so its storage key needs to be a unique id\n that will be use only once.\n Those unique id also required to be long enough to avoid any\n unique id to be prefixed by an other unique id.\n","sig":null,"attributes":[{"value":"/ A child trie of default type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":10434,"byte_end":10467,"line_start":342,"line_end":342,"column_start":1,"column_end":34}},{"value":"/ It uses the same default implementation as the top trie,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":10468,"byte_end":10528,"line_start":343,"line_end":343,"column_start":1,"column_end":61}},{"value":"/ top trie being a child trie with no keyspace and no storage key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":10529,"byte_end":10597,"line_start":344,"line_end":344,"column_start":1,"column_end":69}},{"value":"/ Its keyspace is the variable (unprefixed) part of its storage key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":10598,"byte_end":10668,"line_start":345,"line_end":345,"column_start":1,"column_end":71}},{"value":"/ It shares its trie nodes backend storage with every other","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":10669,"byte_end":10730,"line_start":346,"line_end":346,"column_start":1,"column_end":62}},{"value":"/ child trie, so its storage key needs to be a unique id","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":10731,"byte_end":10789,"line_start":347,"line_end":347,"column_start":1,"column_end":59}},{"value":"/ that will be use only once.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":10790,"byte_end":10821,"line_start":348,"line_end":348,"column_start":1,"column_end":32}},{"value":"/ Those unique id also required to be long enough to avoid any","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":10822,"byte_end":10886,"line_start":349,"line_end":349,"column_start":1,"column_end":65}},{"value":"/ unique id to be prefixed by an other unique id.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":10887,"byte_end":10938,"line_start":350,"line_end":350,"column_start":1,"column_end":52}}]}],"impls":[{"id":7,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":1622,"byte_end":1639,"line_start":48,"line_end":48,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2123,"byte_end":2141,"line_start":68,"line_end":68,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2234,"byte_end":2252,"line_start":76,"line_end":76,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2323,"byte_end":2341,"line_start":82,"line_end":82,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6124,"byte_end":6133,"line_start":203,"line_end":203,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8728,"byte_end":8737,"line_start":290,"line_end":290,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":11141,"byte_end":11161,"line_start":358,"line_end":358,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":1622,"byte_end":1639,"line_start":48,"line_end":48,"column_start":24,"column_end":41},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":124},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2123,"byte_end":2141,"line_start":68,"line_end":68,"column_start":16,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2234,"byte_end":2252,"line_start":76,"line_end":76,"column_start":19,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":2284}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":2323,"byte_end":2341,"line_start":82,"line_end":82,"column_start":6,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":6124,"byte_end":6133,"line_start":203,"line_end":203,"column_start":6,"column_end":15},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":8728,"byte_end":8737,"line_start":290,"line_end":290,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-storage-3.0.0/src/lib.rs","byte_start":11141,"byte_end":11161,"line_start":358,"line_end":358,"column_start":6,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":443},"to":{"krate":4294967295,"index":4294967295}}]}